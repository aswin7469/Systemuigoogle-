package com.google.android.systemui.dagger;

import android.app.ActivityManager;
import android.app.ActivityTaskManager;
import android.app.AlarmManager;
import android.app.IActivityManager;
import android.app.IActivityTaskManager;
import android.app.INotificationManager;
import android.app.IUriGrantsManager;
import android.app.IWallpaperManager;
import android.app.KeyguardManager;
import android.app.NotificationManager;
import android.app.StatsManager;
import android.app.UiModeManager;
import android.app.admin.DevicePolicyManager;
import android.app.ambientcontext.AmbientContextManager;
import android.app.job.JobScheduler;
import android.app.smartspace.SmartspaceManager;
import android.app.trust.TrustManager;
import android.bluetooth.BluetoothAdapter;
import android.companion.virtual.VirtualDeviceManager;
import android.content.ClipboardManager;
import android.content.ContentResolver;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.om.OverlayManager;
import android.content.pm.LauncherApps;
import android.content.pm.PackageManager;
import android.content.pm.ShortcutManager;
import android.content.res.Resources;
import android.hardware.SensorPrivacyManager;
import android.hardware.biometrics.BiometricManager;
import android.hardware.devicestate.DeviceStateManager;
import android.hardware.display.AmbientDisplayConfiguration;
import android.hardware.display.ColorDisplayManager;
import android.hardware.display.DisplayManager;
import android.hardware.face.FaceManager;
import android.hardware.fingerprint.FingerprintManager;
import android.hardware.input.InputManager;
import android.media.AudioManager;
import android.media.IAudioService;
import android.media.projection.IMediaProjectionManager;
import android.media.projection.MediaProjectionManager;
import android.net.ConnectivityManager;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.IThermalService;
import android.os.Looper;
import android.os.PowerManager;
import android.os.ServiceManager;
import android.os.UserHandle;
import android.os.UserManager;
import android.os.storage.StorageManager;
import android.permission.PermissionManager;
import android.safetycenter.SafetyCenterManager;
import android.service.dreams.IDreamManager;
import android.service.notification.NotificationListenerService;
import android.service.quickaccesswallet.QuickAccessWalletClient;
import android.service.vr.IVrManager;
import android.telecom.TelecomManager;
import android.telephony.SubscriptionManager;
import android.telephony.TelephonyManager;
import android.telephony.euicc.EuiccManager;
import android.util.Log;
import android.view.Choreographer;
import android.view.CrossWindowBlurListeners;
import android.view.IWindowManager;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.view.accessibility.AccessibilityManager;
import android.view.accessibility.IAccessibilityManager;
import android.view.inputmethod.InputMethodManager;
import android.window.SystemPerformanceHinter;
import androidx.constraintlayout.motion.widget.MotionLayout;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.app.NotificationManagerCompat;
import androidx.slice.SliceViewManagerWrapper;
import com.android.app.viewcapture.data.ViewNode;
import com.android.dream.lowlight.LowLightTransitionCoordinator;
import com.android.internal.app.AssistUtils;
import com.android.internal.app.IBatteryStats;
import com.android.internal.jank.InteractionJankMonitor;
import com.android.internal.logging.MetricsLogger;
import com.android.internal.logging.UiEventLogger;
import com.android.internal.statusbar.IStatusBarService;
import com.android.internal.util.EmergencyAffordanceManager;
import com.android.internal.util.LatencyTracker;
import com.android.internal.util.NotificationMessagingUtil;
import com.android.internal.widget.LockPatternUtils;
import com.android.keyguard.ActiveUnlockConfig;
import com.android.keyguard.KeyguardBiometricLockoutLogger;
import com.android.keyguard.KeyguardDisplayManager;
import com.android.keyguard.KeyguardSecurityModel;
import com.android.keyguard.KeyguardUpdateMonitor;
import com.android.keyguard.KeyguardUpdateMonitor_Factory;
import com.android.keyguard.LockIconViewController;
import com.android.keyguard.logging.BiometricUnlockLogger;
import com.android.keyguard.logging.KeyguardUpdateMonitorLogger;
import com.android.keyguard.logging.ScrimLogger;
import com.android.keyguard.mediator.ScreenOnCoordinator;
import com.android.launcher3.icons.IconProvider;
import com.android.settingslib.bluetooth.LocalBluetoothManager;
import com.android.settingslib.devicestate.DeviceStateRotationLockSettingsManager;
import com.android.settingslib.statusbar.notification.data.repository.NotificationsSoundPolicyRepositoryImpl;
import com.android.settingslib.statusbar.notification.domain.interactor.NotificationsSoundPolicyInteractor;
import com.android.settingslib.volume.data.repository.LocalMediaRepositoryImpl;
import com.android.settingslib.volume.data.repository.MediaControllerRepositoryImpl;
import com.android.settingslib.volume.domain.interactor.LocalMediaInteractor;
import com.android.systemui.ActivityIntentHelper;
import com.android.systemui.BootCompleteCacheImpl;
import com.android.systemui.CameraProtectionLoaderImpl;
import com.android.systemui.Dependency;
import com.android.systemui.Dumpable;
import com.android.systemui.GuestResetOrExitSessionReceiver;
import com.android.systemui.GuestResumeSessionReceiver;
import com.android.systemui.GuestSessionNotification;
import com.android.systemui.InitController;
import com.android.systemui.LatencyTester;
import com.android.systemui.Prefs;
import com.android.systemui.ScreenDecorations;
import com.android.systemui.SliceBroadcastRelayHandler;
import com.android.systemui.SysUICutoutProvider;
import com.android.systemui.SystemUISecondaryUserService;
import com.android.systemui.SystemUIService;
import com.android.systemui.UiOffloadThread;
import com.android.systemui.accessibility.AccessibilityButtonModeObserver;
import com.android.systemui.accessibility.AccessibilityButtonTargetsObserver;
import com.android.systemui.accessibility.Magnification;
import com.android.systemui.accessibility.ModeSwitchesController;
import com.android.systemui.accessibility.data.repository.AccessibilityQsShortcutsRepository;
import com.android.systemui.accessibility.data.repository.AccessibilityQsShortcutsRepositoryImpl;
import com.android.systemui.accessibility.data.repository.ColorCorrectionRepositoryImpl;
import com.android.systemui.accessibility.data.repository.ColorInversionRepositoryImpl;
import com.android.systemui.accessibility.domain.interactor.AccessibilityInteractor;
import com.android.systemui.accessibility.floatingmenu.AccessibilityFloatingMenuController;
import com.android.systemui.accessibility.fontscaling.FontScalingDialogDelegate;
import com.android.systemui.accessibility.qs.QSAccessibilityModule_Companion_ProvideColorCorrectionTileViewModelFactory;
import com.android.systemui.accessibility.qs.QSAccessibilityModule_Companion_ProvideColorInversionTileViewModelFactory;
import com.android.systemui.accessibility.qs.QSAccessibilityModule_Companion_ProvideFontScalingTileViewModelFactory;
import com.android.systemui.animation.ActivityTransitionAnimator;
import com.android.systemui.animation.DialogTransitionAnimator;
import com.android.systemui.appops.AppOpsController;
import com.android.systemui.appops.AppOpsControllerImpl;
import com.android.systemui.assist.AssistLogger;
import com.android.systemui.assist.AssistModule_ProvideAssistUtilsFactory;
import com.android.systemui.assist.PhoneStateMonitor;
import com.android.systemui.assist.PhoneStateMonitor_Factory;
import com.android.systemui.assist.data.repository.AssistRepository;
import com.android.systemui.assist.domain.interactor.AssistInteractor;
import com.android.systemui.assist.ui.DefaultUiController;
import com.android.systemui.authentication.domain.interactor.AuthenticationInteractor;
import com.android.systemui.back.domain.interactor.BackActionInteractor;
import com.android.systemui.battery.BatteryMeterView;
import com.android.systemui.battery.BatteryMeterViewController;
import com.android.systemui.biometrics.AuthController;
import com.android.systemui.biometrics.AuthRippleController;
import com.android.systemui.biometrics.AuthRippleView;
import com.android.systemui.biometrics.BiometricNotificationBroadcastReceiver;
import com.android.systemui.biometrics.BiometricNotificationBroadcastReceiver_Factory;
import com.android.systemui.biometrics.BiometricNotificationDialogFactory;
import com.android.systemui.biometrics.BiometricNotificationDialogFactory_Factory;
import com.android.systemui.biometrics.BiometricNotificationService;
import com.android.systemui.biometrics.FaceAuthAccessibilityDelegate;
import com.android.systemui.biometrics.FaceHelpMessageDeferralFactory;
import com.android.systemui.biometrics.FingerprintReEnrollNotification;
import com.android.systemui.biometrics.FpsUnlockTracker;
import com.android.systemui.biometrics.UdfpsController;
import com.android.systemui.biometrics.UdfpsHapticsSimulator;
import com.android.systemui.biometrics.UdfpsKeyguardAccessibilityDelegate;
import com.android.systemui.biometrics.UdfpsShell;
import com.android.systemui.biometrics.data.repository.BiometricStatusRepositoryImpl;
import com.android.systemui.biometrics.data.repository.DisplayStateRepository;
import com.android.systemui.biometrics.data.repository.FacePropertyRepositoryImpl;
import com.android.systemui.biometrics.data.repository.FingerprintPropertyRepository;
import com.android.systemui.biometrics.domain.interactor.BiometricStatusInteractorImpl;
import com.android.systemui.biometrics.domain.interactor.DisplayStateInteractorImpl;
import com.android.systemui.biometrics.domain.interactor.FingerprintPropertyInteractor;
import com.android.systemui.biometrics.domain.interactor.SideFpsSensorInteractor;
import com.android.systemui.biometrics.domain.interactor.UdfpsOverlayInteractor;
import com.android.systemui.biometrics.udfps.SinglePointerTouchProcessor;
import com.android.systemui.biometrics.ui.binder.SideFpsOverlayViewBinder;
import com.android.systemui.bluetooth.BluetoothLogger;
import com.android.systemui.bouncer.data.repository.BouncerMessageRepositoryImpl;
import com.android.systemui.bouncer.data.repository.BouncerRepository;
import com.android.systemui.bouncer.data.repository.EmergencyServicesRepository;
import com.android.systemui.bouncer.data.repository.KeyguardBouncerRepositoryImpl;
import com.android.systemui.bouncer.data.repository.SimBouncerRepositoryImpl;
import com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor;
import com.android.systemui.bouncer.domain.interactor.BouncerActionButtonInteractor;
import com.android.systemui.bouncer.domain.interactor.BouncerInteractor;
import com.android.systemui.bouncer.domain.interactor.BouncerInteractorModule_EmergencyAffordanceManagerFactory;
import com.android.systemui.bouncer.domain.interactor.BouncerMessageAuditLogger;
import com.android.systemui.bouncer.domain.interactor.BouncerMessageInteractor;
import com.android.systemui.bouncer.domain.interactor.CountDownTimerUtil;
import com.android.systemui.bouncer.domain.interactor.PrimaryBouncerCallbackInteractor;
import com.android.systemui.bouncer.domain.interactor.PrimaryBouncerInteractor;
import com.android.systemui.bouncer.domain.interactor.SimBouncerInteractor;
import com.android.systemui.bouncer.shared.flag.ComposeBouncerFlagsImpl;
import com.android.systemui.bouncer.shared.flag.ComposeBouncerFlagsModule_ImplFactory;
import com.android.systemui.bouncer.ui.BouncerViewImpl;
import com.android.systemui.bouncer.ui.BouncerViewModule$Companion$bouncerDialogFactory$1;
import com.android.systemui.bouncer.ui.BouncerViewModule_Companion_BouncerDialogFactoryFactory;
import com.android.systemui.bouncer.ui.binder.BouncerViewBinder;
import com.android.systemui.bouncer.ui.binder.ComposeBouncerDependencies;
import com.android.systemui.bouncer.ui.binder.LegacyBouncerDependencies;
import com.android.systemui.bouncer.ui.composable.BouncerScene;
import com.android.systemui.bouncer.ui.viewmodel.BouncerViewModel;
import com.android.systemui.bouncer.ui.viewmodel.BouncerViewModelModule_ViewModelFactory;
import com.android.systemui.broadcast.BroadcastDispatcher;
import com.android.systemui.broadcast.BroadcastDispatcherStartable;
import com.android.systemui.broadcast.BroadcastSender;
import com.android.systemui.camera.CameraGestureHelper;
import com.android.systemui.camera.data.repository.CameraAutoRotateRepositoryImpl;
import com.android.systemui.camera.data.repository.CameraSensorPrivacyRepositoryImpl;
import com.android.systemui.classifier.BrightLineFalsingManager;
import com.android.systemui.classifier.FalsingCollector;
import com.android.systemui.classifier.FalsingCollectorImpl_Factory;
import com.android.systemui.classifier.FalsingCollectorNoOp;
import com.android.systemui.classifier.FalsingCoreStartable;
import com.android.systemui.classifier.FalsingDataProvider;
import com.android.systemui.classifier.FalsingManagerProxy_Factory;
import com.android.systemui.classifier.FalsingModule_ProvidesFalsingCollectorLegacyFactory;
import com.android.systemui.classifier.HistoryTracker;
import com.android.systemui.classifier.HistoryTracker_Factory;
import com.android.systemui.classifier.domain.interactor.FalsingInteractor;
import com.android.systemui.clipboardoverlay.ClipboardListener_Factory;
import com.android.systemui.clipboardoverlay.ClipboardOverlayController_Factory;
import com.android.systemui.colorextraction.SysuiColorExtractor;
import com.android.systemui.common.data.repository.PackageChangeRepositoryImpl;
import com.android.systemui.common.data.repository.PackageUpdateLogger;
import com.android.systemui.common.domain.interactor.PackageChangeInteractor;
import com.android.systemui.common.ui.data.repository.ConfigurationRepository;
import com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor;
import com.android.systemui.communal.CommunalSceneStartable;
import com.android.systemui.communal.data.repository.CommunalTutorialDisabledRepositoryImpl;
import com.android.systemui.communal.domain.interactor.CommunalInteractor;
import com.android.systemui.communal.domain.interactor.CommunalSettingsInteractor;
import com.android.systemui.communal.domain.interactor.CommunalTutorialInteractor;
import com.android.systemui.communal.log.CommunalLoggerStartable;
import com.android.systemui.communal.ui.compose.CommunalScene;
import com.android.systemui.communal.ui.view.layout.sections.CommunalTutorialIndicatorSection;
import com.android.systemui.communal.ui.viewmodel.CommunalEditModeViewModel;
import com.android.systemui.communal.ui.viewmodel.CommunalViewModel;
import com.android.systemui.communal.widgets.CommunalAppWidgetHost;
import com.android.systemui.communal.widgets.CommunalAppWidgetHostStartable;
import com.android.systemui.communal.widgets.EditWidgetsActivity;
import com.android.systemui.complication.ComplicationLayoutEngine;
import com.android.systemui.controls.controller.ControlsControllerImpl;
import com.android.systemui.controls.dagger.ControlsComponent;
import com.android.systemui.controls.management.ControlsListingController;
import com.android.systemui.controls.management.ControlsListingControllerImpl;
import com.android.systemui.controls.management.ControlsProviderSelectorActivity;
import com.android.systemui.controls.panels.SelectedComponentRepositoryImpl;
import com.android.systemui.controls.settings.ControlsSettingsRepository;
import com.android.systemui.controls.start.ControlsStartable;
import com.android.systemui.dagger.ContextComponentResolver_Factory;
import com.android.systemui.dagger.SettingsLibraryModule_ProvideLocalBluetoothControllerFactory;
import com.android.systemui.dagger.SharedLibraryModule_ProvideActivityManagerWrapperFactory;
import com.android.systemui.dagger.SharedLibraryModule_ProvideDevicePolicyManagerWrapperFactory;
import com.android.systemui.dagger.SharedLibraryModule_ProvideTaskStackChangeListenersFactory;
import com.android.systemui.dagger.SystemUIModule_ProvideBubblesManagerFactory;
import com.android.systemui.dagger.SystemUIModule_ProvideSystemUserMonitorFactory;
import com.android.systemui.decor.FaceScanningProviderFactory;
import com.android.systemui.decor.PrivacyDotDecorProviderFactory;
import com.android.systemui.demomode.DemoModeController;
import com.android.systemui.demomode.dagger.DemoModeModule_ProvideDemoModeControllerFactory;
import com.android.systemui.deviceentry.data.repository.DeviceEntryFaceAuthRepositoryImpl;
import com.android.systemui.deviceentry.data.repository.FaceWakeUpTriggersConfig;
import com.android.systemui.deviceentry.data.repository.FaceWakeUpTriggersConfigImpl;
import com.android.systemui.deviceentry.domain.interactor.AuthRippleInteractor;
import com.android.systemui.deviceentry.domain.interactor.BiometricMessageInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryBiometricAuthInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryBiometricSettingsInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryFaceAuthInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryFingerprintAuthInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryHapticsInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntrySourceInteractor;
import com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor;
import com.android.systemui.deviceentry.domain.interactor.FaceHelpMessageDeferralInteractor;
import com.android.systemui.deviceentry.domain.interactor.OccludingAppDeviceEntryInteractor;
import com.android.systemui.deviceentry.domain.interactor.SystemUIDeviceEntryFaceAuthInteractor;
import com.android.systemui.deviceentry.ui.binder.LiftToRunFaceAuthBinder;
import com.android.systemui.deviceentry.ui.viewmodel.UdfpsAccessibilityOverlayViewModel;
import com.android.systemui.display.data.repository.DisplayMetricsRepository;
import com.android.systemui.display.data.repository.DisplayRepository;
import com.android.systemui.display.domain.interactor.ConnectedDisplayInteractorImpl;
import com.android.systemui.display.ui.viewmodel.ConnectingDisplayViewModel;
import com.android.systemui.dock.DockManager;
import com.android.systemui.doze.AlwaysOnDisplayPolicy;
import com.android.systemui.doze.DozeLog;
import com.android.systemui.doze.DozeLogger;
import com.android.systemui.doze.DozeService;
import com.android.systemui.dreams.AssistantAttentionMonitor;
import com.android.systemui.dreams.DreamMonitor;
import com.android.systemui.dreams.DreamOverlayCallbackController;
import com.android.systemui.dreams.DreamOverlayLifecycleOwner;
import com.android.systemui.dreams.DreamOverlayService;
import com.android.systemui.dreams.DreamOverlayStateController;
import com.android.systemui.dreams.DreamOverlayStatusBarItemsProvider;
import com.android.systemui.dreams.homecontrols.HomeControlsDreamService;
import com.android.systemui.dreams.homecontrols.HomeControlsDreamStartable;
import com.android.systemui.dreams.homecontrols.domain.interactor.HomeControlsComponentInteractor;
import com.android.systemui.dreams.touch.scrim.BouncerlessScrimController;
import com.android.systemui.dreams.ui.viewmodel.DreamOverlayViewModel;
import com.android.systemui.dump.DumpManager;
import com.android.systemui.dump.LogBufferEulogizer;
import com.android.systemui.dump.SystemUIAuxiliaryDumpService;
import com.android.systemui.dump.SystemUIConfigDumpable;
import com.android.systemui.flags.FeatureFlags;
import com.android.systemui.flags.FeatureFlagsClassic;
import com.android.systemui.flags.FeatureFlagsClassicRelease;
import com.android.systemui.flags.FlagDependencies;
import com.android.systemui.flags.FlagDependenciesNotifier;
import com.android.systemui.flags.FlagsCommonModule_ProvidesAllFlagsFactory;
import com.android.systemui.flags.RestartDozeListener;
import com.android.systemui.flags.ServerFlagReaderImpl;
import com.android.systemui.flags.ServerFlagReaderModule_BindsReaderFactory;
import com.android.systemui.flags.SystemPropertiesHelper;
import com.android.systemui.flags.UnreleasedFlag;
import com.android.systemui.fragments.FragmentService;
import com.android.systemui.globalactions.GlobalActionsComponent;
import com.android.systemui.globalactions.GlobalActionsDialogLite;
import com.android.systemui.globalactions.GlobalActionsImpl;
import com.android.systemui.globalactions.data.repository.GlobalActionsRepository;
import com.android.systemui.globalactions.domain.interactor.GlobalActionsInteractor;
import com.android.systemui.inputmethod.data.repository.InputMethodRepositoryImpl;
import com.android.systemui.inputmethod.domain.interactor.InputMethodInteractor;
import com.android.systemui.keyboard.KeyboardUI;
import com.android.systemui.keyboard.PhysicalKeyboardCoreStartable;
import com.android.systemui.keyboard.backlight.domain.interactor.KeyboardBacklightInteractor;
import com.android.systemui.keyboard.backlight.ui.KeyboardBacklightDialogCoordinator;
import com.android.systemui.keyboard.backlight.ui.viewmodel.BacklightDialogViewModel;
import com.android.systemui.keyboard.data.repository.KeyboardRepositoryImpl;
import com.android.systemui.keyboard.stickykeys.StickyKeysLogger;
import com.android.systemui.keyboard.stickykeys.data.repository.StickyKeysRepositoryImpl;
import com.android.systemui.keyboard.stickykeys.ui.StickyKeyDialogFactory;
import com.android.systemui.keyboard.stickykeys.ui.StickyKeysIndicatorCoordinator;
import com.android.systemui.keyevent.data.repository.KeyEventRepositoryImpl;
import com.android.systemui.keyevent.domain.interactor.KeyEventInteractor;
import com.android.systemui.keyevent.domain.interactor.SysUIKeyEventHandler;
import com.android.systemui.keyguard.DismissCallbackRegistry;
import com.android.systemui.keyguard.KeyguardLifecyclesDispatcher;
import com.android.systemui.keyguard.KeyguardService;
import com.android.systemui.keyguard.KeyguardUnlockAnimationController;
import com.android.systemui.keyguard.KeyguardViewConfigurator;
import com.android.systemui.keyguard.KeyguardViewMediator;
import com.android.systemui.keyguard.ResourceTrimmer;
import com.android.systemui.keyguard.ScreenLifecycle;
import com.android.systemui.keyguard.WakefulnessLifecycle;
import com.android.systemui.keyguard.WindowManagerLockscreenVisibilityManager;
import com.android.systemui.keyguard.dagger.KeyguardModule_NewKeyguardViewMediatorFactory;
import com.android.systemui.keyguard.dagger.KeyguardModule_ProvidesThreadAssertFactory;
import com.android.systemui.keyguard.data.quickaffordance.MuteQuickAffordanceCoreStartable;
import com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl;
import com.android.systemui.keyguard.data.repository.DeviceEntryFingerprintAuthRepository;
import com.android.systemui.keyguard.data.repository.KeyguardQuickAffordanceRepository;
import com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl;
import com.android.systemui.keyguard.data.repository.KeyguardSmartspaceRepository;
import com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl;
import com.android.systemui.keyguard.data.repository.TrustRepositoryImpl;
import com.android.systemui.keyguard.domain.interactor.BiometricUnlockInteractor;
import com.android.systemui.keyguard.domain.interactor.BurnInInteractor;
import com.android.systemui.keyguard.domain.interactor.DeviceEntrySideFpsOverlayInteractor;
import com.android.systemui.keyguard.domain.interactor.DozeInteractor;
import com.android.systemui.keyguard.domain.interactor.FromAlternateBouncerTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromDozingTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromDreamingLockscreenHostedTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromGlanceableHubTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromGoneTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.FromOccludedTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardBottomAreaInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardClockInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardDismissActionInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardDismissInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardKeyEventInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardSmartspaceInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardSurfaceBehindInteractor;
import com.android.systemui.keyguard.domain.interactor.KeyguardTransitionAuditLogger;
import com.android.systemui.keyguard.domain.interactor.KeyguardTransitionCoreStartable;
import com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor;
import com.android.systemui.keyguard.domain.interactor.NaturalScrollingSettingObserver;
import com.android.systemui.keyguard.domain.interactor.WindowManagerLockscreenVisibilityInteractor;
import com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow;
import com.android.systemui.keyguard.ui.SwipeUpAnywhereGestureHandler;
import com.android.systemui.keyguard.ui.binder.KeyguardBlueprintViewBinder;
import com.android.systemui.keyguard.ui.binder.KeyguardDismissActionBinder;
import com.android.systemui.keyguard.ui.binder.KeyguardDismissBinder;
import com.android.systemui.keyguard.ui.binder.KeyguardSurfaceBehindParamsApplier;
import com.android.systemui.keyguard.ui.binder.SideFpsProgressBarViewBinder;
import com.android.systemui.keyguard.ui.preview.KeyguardRemotePreviewManager;
import com.android.systemui.keyguard.ui.view.KeyguardRootView;
import com.android.systemui.keyguard.ui.view.SideFpsProgressBar;
import com.android.systemui.keyguard.ui.view.layout.blueprints.ShortcutsBesideUdfpsKeyguardBlueprint;
import com.android.systemui.keyguard.ui.view.layout.blueprints.SplitShadeKeyguardBlueprint;
import com.android.systemui.keyguard.ui.view.layout.sections.AlignShortcutsToUdfpsSection;
import com.android.systemui.keyguard.ui.view.layout.sections.AodBurnInSection;
import com.android.systemui.keyguard.ui.view.layout.sections.AodNotificationIconsSection;
import com.android.systemui.keyguard.ui.view.layout.sections.ClockSection;
import com.android.systemui.keyguard.ui.view.layout.sections.DefaultDeviceEntrySection;
import com.android.systemui.keyguard.ui.view.layout.sections.DefaultIndicationAreaSection;
import com.android.systemui.keyguard.ui.view.layout.sections.DefaultNotificationStackScrollLayoutSection;
import com.android.systemui.keyguard.ui.view.layout.sections.DefaultSettingsPopupMenuSection;
import com.android.systemui.keyguard.ui.view.layout.sections.DefaultStatusBarSection;
import com.android.systemui.keyguard.ui.view.layout.sections.DefaultStatusViewSection;
import com.android.systemui.keyguard.ui.view.layout.sections.DefaultUdfpsAccessibilityOverlaySection;
import com.android.systemui.keyguard.ui.view.layout.sections.KeyguardSliceViewSection;
import com.android.systemui.keyguard.ui.view.layout.sections.SmartspaceSection;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerDependencies;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToDozingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AlternateBouncerToPrimaryBouncerTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodAlphaViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodBurnInViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.AodToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DeviceEntryBackgroundViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DeviceEntryForegroundViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DeviceEntryIconViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DozingToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DozingToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DozingToPrimaryBouncerTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DreamingToGlanceableHubTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.DreamingToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GlanceableHubToDreamingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GlanceableHubToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToDozingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToDreamingLockscreenHostedTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToDreamingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.GoneToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardBottomAreaViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardClockViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardLongPressViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardRootViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardSmartspaceViewModel;
import com.android.systemui.keyguard.ui.viewmodel.KeyguardSurfaceBehindViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenContentViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToDozingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToDreamingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToGlanceableHubTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToOccludedTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.LockscreenToPrimaryBouncerTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludedToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludedToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.OccludingAppDeviceEntryMessageViewModel;
import com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToAodTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToDozingTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToGoneTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToLockscreenTransitionViewModel;
import com.android.systemui.keyguard.ui.viewmodel.SideFpsProgressBarViewModel;
import com.android.systemui.keyguard.ui.viewmodel.WindowManagerLockscreenVisibilityViewModel;
import com.android.systemui.keyguard.util.IndicationHelper;
import com.android.systemui.log.BouncerLogger;
import com.android.systemui.log.FaceAuthenticationLogger;
import com.android.systemui.log.LogBuffer;
import com.android.systemui.log.LogBufferFactory;
import com.android.systemui.log.LogcatEchoTracker;
import com.android.systemui.log.ScreenDecorationsLogger;
import com.android.systemui.log.SessionTracker;
import com.android.systemui.log.SideFpsLogger;
import com.android.systemui.log.dagger.LogModule_ProvideBiometricLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideBouncerLogFactory;
import com.android.systemui.log.dagger.LogModule_ProvideBroadcastDispatcherLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideCarrierTextManagerLogFactory;
import com.android.systemui.log.dagger.LogModule_ProvideCollapsedSbFragmentLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideDeviceStateAutoRotationLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideDisableFlagsRepositoryLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideDisplayMetricsRepoLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideDozeLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyboardLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardMediaControllerLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideKeyguardUpdateMonitorLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideLSShadeTransitionControllerBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideLogcatEchoTrackerFactory;
import com.android.systemui.log.dagger.LogModule_ProvideMediaBrowserBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideMediaMuteAwaitLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideMonitorTableLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotifInflationLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotifInteractionLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationHeadsUpLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationInterruptLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationLockScreenLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationRemoteInputLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationRenderLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideNotificationsLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvidePackageChangeRepoLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvidePrivacyLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideQBluetoothTileDialogLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideQSConfigLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideQSFragmentDisableLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideQuickSettingsLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideQuickSettingsTilesLogBufferCacheFactory;
import com.android.systemui.log.dagger.LogModule_ProvideScrimLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideSensitiveNotificationProtectionLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideShadeLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideStatusBarNetworkControllerBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideSwipeUpLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvideToastLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProviderBluetoothLogBufferFactory;
import com.android.systemui.log.dagger.LogModule_ProvidesMediaTimeoutListenerLogBufferFactory;
import com.android.systemui.log.echo.LogcatEchoTrackerDebug;
import com.android.systemui.log.table.TableLogBuffer;
import com.android.systemui.log.table.TableLogBufferFactory;
import com.android.systemui.media.RingtonePlayer;
import com.android.systemui.media.controls.domain.pipeline.MediaDataCombineLatest;
import com.android.systemui.media.controls.domain.pipeline.MediaDataManager;
import com.android.systemui.media.controls.domain.pipeline.MediaTimeoutListener;
import com.android.systemui.media.controls.domain.pipeline.MediaTimeoutLogger;
import com.android.systemui.media.controls.domain.resume.MediaResumeListener;
import com.android.systemui.media.controls.domain.resume.ResumeMediaBrowserLogger;
import com.android.systemui.media.controls.shared.model.SmartspaceMediaDataProvider;
import com.android.systemui.media.controls.ui.controller.KeyguardMediaController;
import com.android.systemui.media.controls.ui.controller.MediaCarouselController;
import com.android.systemui.media.controls.ui.controller.MediaHierarchyManager;
import com.android.systemui.media.controls.ui.controller.MediaHostStatesManager;
import com.android.systemui.media.controls.ui.view.MediaHost;
import com.android.systemui.media.controls.util.MediaControllerFactory;
import com.android.systemui.media.controls.util.MediaFeatureFlag;
import com.android.systemui.media.controls.util.MediaFlags;
import com.android.systemui.media.controls.util.MediaSessionLegacyHelperWrapper;
import com.android.systemui.media.controls.util.MediaUiEventLogger;
import com.android.systemui.media.dagger.MediaModule_ProvideMediaTttReceiverLogBufferFactory;
import com.android.systemui.media.dagger.MediaModule_ProvideMediaTttSenderLogBufferFactory;
import com.android.systemui.media.dagger.MediaModule_ProvidesKeyguardMediaHostFactory;
import com.android.systemui.media.dagger.MediaModule_ProvidesQSMediaHostFactory;
import com.android.systemui.media.dagger.MediaModule_ProvidesQuickQSMediaHostFactory;
import com.android.systemui.media.dialog.MediaOutputDialogReceiver;
import com.android.systemui.media.dialog.MediaOutputSwitcherDialogUI;
import com.android.systemui.media.muteawait.MediaMuteAwaitConnectionCli;
import com.android.systemui.media.muteawait.MediaMuteAwaitConnectionManagerFactory;
import com.android.systemui.media.muteawait.MediaMuteAwaitLogger;
import com.android.systemui.media.taptotransfer.MediaTttCommandLineHelper;
import com.android.systemui.media.taptotransfer.MediaTttFlags;
import com.android.systemui.media.taptotransfer.receiver.MediaTttChipControllerReceiver;
import com.android.systemui.media.taptotransfer.receiver.MediaTttReceiverLogger;
import com.android.systemui.media.taptotransfer.receiver.MediaTttReceiverUiEventLogger;
import com.android.systemui.media.taptotransfer.sender.MediaTttSenderCoordinator;
import com.android.systemui.media.taptotransfer.sender.MediaTttSenderLogger;
import com.android.systemui.media.taptotransfer.sender.MediaTttSenderUiEventLogger;
import com.android.systemui.mediaprojection.MediaProjectionMetricsLogger;
import com.android.systemui.mediaprojection.devicepolicy.ScreenCaptureDevicePolicyResolver;
import com.android.systemui.mediaprojection.taskswitcher.data.repository.ActivityTaskManagerTasksRepository;
import com.android.systemui.mediaprojection.taskswitcher.data.repository.MediaProjectionManagerRepository;
import com.android.systemui.mediaprojection.taskswitcher.domain.interactor.TaskSwitchInteractor;
import com.android.systemui.mediaprojection.taskswitcher.ui.TaskSwitcherNotificationCoordinator;
import com.android.systemui.model.SysUiState;
import com.android.systemui.motiontool.MotionToolStartable;
import com.android.systemui.navigationbar.NavigationBarControllerImpl;
import com.android.systemui.navigationbar.NavigationModeController;
import com.android.systemui.notetask.NoteTaskBubblesController;
import com.android.systemui.notetask.NoteTaskController;
import com.android.systemui.notetask.NoteTaskControllerUpdateService;
import com.android.systemui.people.widget.LaunchConversationActivity;
import com.android.systemui.people.widget.PeopleSpaceWidgetManager;
import com.android.systemui.people.widget.PeopleSpaceWidgetPinnedReceiver;
import com.android.systemui.people.widget.PeopleSpaceWidgetProvider_Factory;
import com.android.systemui.plugins.ActivityStarter;
import com.android.systemui.plugins.BcSmartspaceConfigPlugin;
import com.android.systemui.plugins.BcSmartspaceDataPlugin;
import com.android.systemui.plugins.DarkIconDispatcher;
import com.android.systemui.plugins.FalsingManager;
import com.android.systemui.plugins.GlobalActions;
import com.android.systemui.plugins.PluginDependencyProvider;
import com.android.systemui.plugins.PluginManager;
import com.android.systemui.plugins.qs.QSFactory;
import com.android.systemui.plugins.statusbar.StatusBarStateController;
import com.android.systemui.power.EnhancedEstimates;
import com.android.systemui.power.PowerUI;
import com.android.systemui.power.data.repository.PowerRepositoryImpl;
import com.android.systemui.power.domain.interactor.PowerInteractor;
import com.android.systemui.privacy.AppOpsPrivacyItemMonitor;
import com.android.systemui.privacy.PrivacyConfig;
import com.android.systemui.privacy.PrivacyDialogController;
import com.android.systemui.privacy.PrivacyDialogControllerV2;
import com.android.systemui.privacy.PrivacyItemController;
import com.android.systemui.privacy.logging.PrivacyLogger;
import com.android.systemui.process.ProcessWrapper;
import com.android.systemui.qrcodescanner.controller.QRCodeScannerController;
import com.android.systemui.qs.AutoAddTracker;
import com.android.systemui.qs.FgsManagerController;
import com.android.systemui.qs.FgsManagerControllerImpl;
import com.android.systemui.qs.FooterActionsController;
import com.android.systemui.qs.QSFragmentLegacy;
import com.android.systemui.qs.QSFragmentStartable;
import com.android.systemui.qs.QSHost;
import com.android.systemui.qs.QSHostAdapter;
import com.android.systemui.qs.QSImpl;
import com.android.systemui.qs.QSSecurityFooterUtils;
import com.android.systemui.qs.QSSecurityFooterUtils_Factory;
import com.android.systemui.qs.QSTileHost;
import com.android.systemui.qs.QsEventLoggerImpl;
import com.android.systemui.qs.ReduceBrightColorsController;
import com.android.systemui.qs.dagger.QSFlagsModule;
import com.android.systemui.qs.external.CustomTileStatePersisterImpl;
import com.android.systemui.qs.external.TileServiceRequestController;
import com.android.systemui.qs.external.TileServices;
import com.android.systemui.qs.footer.data.repository.ForegroundServicesRepositoryImpl;
import com.android.systemui.qs.footer.domain.interactor.FooterActionsInteractor;
import com.android.systemui.qs.footer.domain.interactor.FooterActionsInteractorImpl;
import com.android.systemui.qs.footer.ui.binder.FooterActionsViewBinder;
import com.android.systemui.qs.footer.ui.viewmodel.FooterActionsViewModel;
import com.android.systemui.qs.logging.QSLogger;
import com.android.systemui.qs.pipeline.dagger.QSAutoAddModule_Companion_ProvideQSAutoAddLogBufferFactory;
import com.android.systemui.qs.pipeline.dagger.QSPipelineModule_Companion_ProvideQSTileListLogBufferFactory;
import com.android.systemui.qs.pipeline.dagger.QSPipelineModule_Companion_ProvidesQSRestoreLogBufferFactory;
import com.android.systemui.qs.pipeline.data.model.RestoreProcessor;
import com.android.systemui.qs.pipeline.data.repository.AutoAddSettingRepository;
import com.android.systemui.qs.pipeline.data.repository.CustomTileAddedSharedPrefsRepository;
import com.android.systemui.qs.pipeline.data.repository.DefaultTilesQSHostRepository;
import com.android.systemui.qs.pipeline.data.repository.InstalledTilesComponentRepository;
import com.android.systemui.qs.pipeline.data.repository.InstalledTilesComponentRepositoryImpl;
import com.android.systemui.qs.pipeline.data.repository.MinimumTilesResourceRepository;
import com.android.systemui.qs.pipeline.data.repository.QSSettingsRestoredBroadcastRepository;
import com.android.systemui.qs.pipeline.data.repository.QSSettingsRestoredRepository;
import com.android.systemui.qs.pipeline.data.repository.TileSpecSettingsRepository;
import com.android.systemui.qs.pipeline.data.restoreprocessors.WorkTileRestoreProcessor;
import com.android.systemui.qs.pipeline.domain.autoaddable.CastAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.DataSaverAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.DeviceControlsAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.HotspotAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.NightDisplayAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.ReduceBrightColorsAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.WalletAutoAddable;
import com.android.systemui.qs.pipeline.domain.autoaddable.WorkTileAutoAddable;
import com.android.systemui.qs.pipeline.domain.interactor.AccessibilityTilesInteractor;
import com.android.systemui.qs.pipeline.domain.interactor.AutoAddInteractor;
import com.android.systemui.qs.pipeline.domain.interactor.CurrentTilesInteractor;
import com.android.systemui.qs.pipeline.domain.interactor.CurrentTilesInteractorImpl;
import com.android.systemui.qs.pipeline.domain.interactor.PanelInteractorImpl;
import com.android.systemui.qs.pipeline.domain.interactor.RestoreReconciliationInteractor;
import com.android.systemui.qs.pipeline.domain.startable.QSPipelineCoreStartable;
import com.android.systemui.qs.pipeline.shared.QSPipelineFlagsRepository;
import com.android.systemui.qs.tileimpl.QSFactoryImpl;
import com.android.systemui.qs.tiles.AirplaneModeTile;
import com.android.systemui.qs.tiles.AlarmTile;
import com.android.systemui.qs.tiles.BluetoothTile;
import com.android.systemui.qs.tiles.CameraToggleTile_Factory;
import com.android.systemui.qs.tiles.CastTile;
import com.android.systemui.qs.tiles.ColorCorrectionTile;
import com.android.systemui.qs.tiles.ColorInversionTile;
import com.android.systemui.qs.tiles.DataSaverTile;
import com.android.systemui.qs.tiles.DeviceControlsTile;
import com.android.systemui.qs.tiles.DndTile;
import com.android.systemui.qs.tiles.DreamTile;
import com.android.systemui.qs.tiles.FlashlightTile;
import com.android.systemui.qs.tiles.FontScalingTile;
import com.android.systemui.qs.tiles.HotspotTile;
import com.android.systemui.qs.tiles.LocationTile;
import com.android.systemui.qs.tiles.MicrophoneToggleTile_Factory;
import com.android.systemui.qs.tiles.NfcTile;
import com.android.systemui.qs.tiles.NightDisplayTile;
import com.android.systemui.qs.tiles.OneHandedModeTile;
import com.android.systemui.qs.tiles.QRCodeScannerTile;
import com.android.systemui.qs.tiles.QuickAccessWalletTile;
import com.android.systemui.qs.tiles.RecordIssueTile;
import com.android.systemui.qs.tiles.ReduceBrightColorsTile;
import com.android.systemui.qs.tiles.ScreenRecordTile;
import com.android.systemui.qs.tiles.TileJavaAdapter;
import com.android.systemui.qs.tiles.UiModeNightTile;
import com.android.systemui.qs.tiles.UserDetailView;
import com.android.systemui.qs.tiles.WorkModeTile;
import com.android.systemui.qs.tiles.base.actions.QSTileIntentUserInputHandlerImpl;
import com.android.systemui.qs.tiles.base.analytics.QSTileAnalytics;
import com.android.systemui.qs.tiles.base.interactor.DisabledByPolicyInteractorImpl;
import com.android.systemui.qs.tiles.base.logging.QSTileLogger;
import com.android.systemui.qs.tiles.dialog.InternetDialogManager;
import com.android.systemui.qs.tiles.dialog.WifiStateWorker;
import com.android.systemui.qs.tiles.dialog.bluetooth.BluetoothAutoOnInteractor;
import com.android.systemui.qs.tiles.dialog.bluetooth.BluetoothAutoOnRepository;
import com.android.systemui.qs.tiles.dialog.bluetooth.BluetoothStateInteractor;
import com.android.systemui.qs.tiles.dialog.bluetooth.BluetoothTileDialogLogger;
import com.android.systemui.qs.tiles.dialog.bluetooth.BluetoothTileDialogRepository;
import com.android.systemui.qs.tiles.dialog.bluetooth.BluetoothTileDialogViewModel;
import com.android.systemui.qs.tiles.dialog.bluetooth.DeviceItemInteractor;
import com.android.systemui.qs.tiles.impl.custom.domain.CustomTileMapper;
import com.android.systemui.qs.tiles.impl.fontscaling.domain.interactor.FontScalingTileDataInteractor;
import com.android.systemui.qs.tiles.viewmodel.QSTileConfigProviderImpl;
import com.android.systemui.qs.ui.adapter.QSSceneAdapterImpl;
import com.android.systemui.qs.ui.composable.QuickSettingsScene;
import com.android.systemui.qs.ui.viewmodel.QuickSettingsSceneViewModel;
import com.android.systemui.qs.user.UserSwitchDialogController;
import com.android.systemui.reardisplay.RearDisplayDialogController;
import com.android.systemui.recents.OverviewProxyRecentsImpl;
import com.android.systemui.recents.OverviewProxyService;
import com.android.systemui.recents.Recents;
import com.android.systemui.recents.ScreenPinningRequest;
import com.android.systemui.retail.data.repository.RetailModeSettingsRepository;
import com.android.systemui.retail.domain.interactor.RetailModeInteractorImpl;
import com.android.systemui.rotationlock.RotationLockNewModule_Companion_ProvideRotationTileViewModelFactory;
import com.android.systemui.scene.EmptySceneModule_EmptySceneSetFactory;
import com.android.systemui.scene.LockscreenSceneModule_Companion_ProvidesLockscreenBlueprintsFactory;
import com.android.systemui.scene.data.repository.WindowRootViewVisibilityRepository;
import com.android.systemui.scene.domain.interactor.PanelExpansionInteractor;
import com.android.systemui.scene.domain.interactor.SceneInteractor;
import com.android.systemui.scene.domain.interactor.WindowRootViewVisibilityInteractor;
import com.android.systemui.scene.domain.startable.SceneContainerStartable;
import com.android.systemui.scene.shared.flag.SceneContainerFlags;
import com.android.systemui.scene.shared.logger.SceneLogger;
import com.android.systemui.scene.ui.composable.ComposableScene;
import com.android.systemui.scene.ui.view.WindowRootView;
import com.android.systemui.scene.ui.viewmodel.SceneContainerViewModel;
import com.android.systemui.screenrecord.RecordingController;
import com.android.systemui.screenrecord.RecordingService;
import com.android.systemui.screenshot.ActionProxyReceiver;
import com.android.systemui.screenshot.AssistContentRequester;
import com.android.systemui.screenshot.DeleteScreenshotReceiver;
import com.android.systemui.screenshot.ImageCaptureImpl;
import com.android.systemui.screenshot.RequestProcessor;
import com.android.systemui.screenshot.ScreenshotPolicyImpl;
import com.android.systemui.screenshot.ScreenshotProxyService;
import com.android.systemui.screenshot.ScreenshotSmartActions;
import com.android.systemui.screenshot.ScreenshotSoundControllerImpl;
import com.android.systemui.screenshot.ScreenshotSoundProviderImpl;
import com.android.systemui.screenshot.SmartActionsReceiver;
import com.android.systemui.screenshot.TakeScreenshotExecutor;
import com.android.systemui.screenshot.TakeScreenshotService;
import com.android.systemui.screenshot.TimeoutHandler;
import com.android.systemui.screenshot.appclips.AppClipsScreenshotHelperService;
import com.android.systemui.screenshot.appclips.AppClipsService;
import com.android.systemui.security.data.repository.SecurityRepositoryImpl;
import com.android.systemui.sensorprivacy.SensorUseStartedActivity;
import com.android.systemui.settings.DisplayTracker;
import com.android.systemui.settings.MultiUserUtilsModule_ProvideDisplayTrackerFactory;
import com.android.systemui.settings.MultiUserUtilsModule_ProvideUserTrackerFactory;
import com.android.systemui.settings.SecureSettingsRepositoryModule_ProvideSecureSettingsRepositoryFactory;
import com.android.systemui.settings.UserFileManager;
import com.android.systemui.settings.UserTracker;
import com.android.systemui.shade.CameraLauncher;
import com.android.systemui.shade.CombinedShadeHeadersConstraintManagerImpl;
import com.android.systemui.shade.LargeScreenHeaderHelper;
import com.android.systemui.shade.LockscreenHostedDreamGestureListener;
import com.android.systemui.shade.NotificationPanelView;
import com.android.systemui.shade.NotificationPanelViewController;
import com.android.systemui.shade.NotificationShadeWindowControllerImpl;
import com.android.systemui.shade.NotificationShadeWindowView;
import com.android.systemui.shade.NotificationShadeWindowViewController;
import com.android.systemui.shade.NotificationsQSContainerController;
import com.android.systemui.shade.NotificationsQuickSettingsContainer;
import com.android.systemui.shade.PulsingGestureListener;
import com.android.systemui.shade.QuickSettingsController;
import com.android.systemui.shade.ShadeController;
import com.android.systemui.shade.ShadeExpansionStateManager;
import com.android.systemui.shade.ShadeHeaderController;
import com.android.systemui.shade.ShadeLockscreenInteractor;
import com.android.systemui.shade.ShadeLogger;
import com.android.systemui.shade.ShadeModule_Companion_ProvideShadeAnimationInteractorFactory;
import com.android.systemui.shade.ShadeModule_Companion_ProvideShadeLockscreenInteractorFactory;
import com.android.systemui.shade.ShadeViewController;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesBatteryMeterViewControllerFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesBatteryMeterViewFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesKeyguardRootViewFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesLightRevealScrimFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesNotificationPanelViewFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesNotificationShadeWindowViewFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesNotificationStackScrollLayoutFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesNotificationsQuickSettingsContainerFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesOngoingPrivacyChipFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesShadeHeaderViewFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesSharedNotificationContainerFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesStatusIconContainerFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesTapAgainViewFactory;
import com.android.systemui.shade.ShadeViewProviderModule_Companion_ProvidesWindowRootViewFactory;
import com.android.systemui.shade.data.repository.PrivacyChipRepositoryImpl;
import com.android.systemui.shade.data.repository.ShadeAnimationRepository;
import com.android.systemui.shade.data.repository.ShadeHeaderClockRepository;
import com.android.systemui.shade.data.repository.ShadeRepository;
import com.android.systemui.shade.domain.interactor.BaseShadeInteractor;
import com.android.systemui.shade.domain.interactor.PrivacyChipInteractor;
import com.android.systemui.shade.domain.interactor.ShadeAnimationInteractor;
import com.android.systemui.shade.domain.interactor.ShadeAnimationInteractorLegacyImpl;
import com.android.systemui.shade.domain.interactor.ShadeAnimationInteractorSceneContainerImpl;
import com.android.systemui.shade.domain.interactor.ShadeHeaderClockInteractor;
import com.android.systemui.shade.domain.interactor.ShadeInteractor;
import com.android.systemui.shade.domain.interactor.ShadeInteractorImpl;
import com.android.systemui.shade.domain.interactor.ShadeLockscreenInteractorImpl;
import com.android.systemui.shade.transition.LargeScreenPortraitShadeInterpolator;
import com.android.systemui.shade.transition.LargeScreenShadeInterpolator;
import com.android.systemui.shade.transition.LargeScreenShadeInterpolatorImpl;
import com.android.systemui.shade.transition.ScrimShadeTransitionController;
import com.android.systemui.shade.transition.ShadeTransitionController;
import com.android.systemui.shade.transition.SplitShadeInterpolator;
import com.android.systemui.shade.ui.composable.ShadeScene;
import com.android.systemui.shade.ui.viewmodel.ShadeHeaderViewModel;
import com.android.systemui.shade.ui.viewmodel.ShadeSceneViewModel;
import com.android.systemui.shared.condition.Monitor;
import com.android.systemui.shared.notifications.data.repository.NotificationSettingsRepository;
import com.android.systemui.shared.settings.data.repository.SecureSettingsRepositoryImpl;
import com.android.systemui.shared.system.ActivityManagerWrapper;
import com.android.systemui.shared.system.DevicePolicyManagerWrapper;
import com.android.systemui.shared.system.TaskStackChangeListeners;
import com.android.systemui.shared.system.UncaughtExceptionPreHandlerManager;
import com.android.systemui.shortcut.ShortcutKeyDispatcher;
import com.android.systemui.statusbar.ActionClickLogger;
import com.android.systemui.statusbar.BlurUtils;
import com.android.systemui.statusbar.CommandQueue;
import com.android.systemui.statusbar.ImmersiveModeConfirmation;
import com.android.systemui.statusbar.KeyboardShortcutsReceiver;
import com.android.systemui.statusbar.KeyguardIndicationController;
import com.android.systemui.statusbar.LightRevealScrim;
import com.android.systemui.statusbar.LockscreenShadeScrimTransitionController;
import com.android.systemui.statusbar.LockscreenShadeTransitionController;
import com.android.systemui.statusbar.NotificationClickNotifier;
import com.android.systemui.statusbar.NotificationInsetsImpl;
import com.android.systemui.statusbar.NotificationInteractionTracker;
import com.android.systemui.statusbar.NotificationListener;
import com.android.systemui.statusbar.NotificationLockscreenUserManager;
import com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl;
import com.android.systemui.statusbar.NotificationMediaManager;
import com.android.systemui.statusbar.NotificationRemoteInputManager;
import com.android.systemui.statusbar.NotificationShadeDepthController;
import com.android.systemui.statusbar.NotificationShadeWindowController;
import com.android.systemui.statusbar.PulseExpansionHandler;
import com.android.systemui.statusbar.QsFrameTranslateImpl;
import com.android.systemui.statusbar.RemoteInputNotificationRebuilder;
import com.android.systemui.statusbar.SmartReplyController;
import com.android.systemui.statusbar.StatusBarStateControllerImpl;
import com.android.systemui.statusbar.SysuiStatusBarStateController;
import com.android.systemui.statusbar.VibratorHelper;
import com.android.systemui.statusbar.commandline.CommandRegistry;
import com.android.systemui.statusbar.connectivity.AccessPointControllerImpl;
import com.android.systemui.statusbar.connectivity.CallbackHandler;
import com.android.systemui.statusbar.connectivity.CallbackHandler_Factory;
import com.android.systemui.statusbar.connectivity.ConnectivityModule_Companion_BindInternetTileFactory;
import com.android.systemui.statusbar.connectivity.ConnectivityModule_Companion_ProvideAirplaneModeTileViewModelFactory;
import com.android.systemui.statusbar.connectivity.ConnectivityModule_Companion_ProvideDataSaverTileViewModelFactory;
import com.android.systemui.statusbar.connectivity.MobileSignalControllerFactory;
import com.android.systemui.statusbar.connectivity.NetworkController;
import com.android.systemui.statusbar.connectivity.NetworkControllerImpl;
import com.android.systemui.statusbar.connectivity.WifiPickerTrackerFactory;
import com.android.systemui.statusbar.connectivity.ui.MobileContextProvider;
import com.android.systemui.statusbar.core.StatusBarInitializer;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule$2;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideActivityTransitionAnimatorFactory;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideAnimationFeatureFlagsFactory;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideCommandQueueFactory;
import com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideDialogTransitionAnimatorFactory;
import com.android.systemui.statusbar.data.repository.KeyguardStatusBarRepositoryImpl;
import com.android.systemui.statusbar.data.repository.NotificationListenerSettingsRepository;
import com.android.systemui.statusbar.data.repository.RemoteInputRepositoryImpl;
import com.android.systemui.statusbar.data.repository.StatusBarModeRepositoryImpl;
import com.android.systemui.statusbar.disableflags.DisableFlagsLogger;
import com.android.systemui.statusbar.disableflags.data.repository.DisableFlagsRepositoryImpl;
import com.android.systemui.statusbar.domain.interactor.KeyguardStatusBarInteractor;
import com.android.systemui.statusbar.events.PrivacyDotViewController;
import com.android.systemui.statusbar.events.StatusBarEventsModule_Companion_ProvideSystemStatusAnimationSchedulerLogBufferFactory;
import com.android.systemui.statusbar.events.SystemEventCoordinator;
import com.android.systemui.statusbar.events.SystemStatusAnimationSchedulerImpl;
import com.android.systemui.statusbar.events.SystemStatusAnimationSchedulerLogger;
import com.android.systemui.statusbar.gesture.GenericGestureDetector;
import com.android.systemui.statusbar.gesture.GesturePointerEventDetector;
import com.android.systemui.statusbar.gesture.GesturePointerEventListener;
import com.android.systemui.statusbar.gesture.SwipeStatusBarAwayGestureHandler;
import com.android.systemui.statusbar.gesture.SwipeUpGestureHandler;
import com.android.systemui.statusbar.gesture.SwipeUpGestureLogger;
import com.android.systemui.statusbar.gesture.TapGestureDetector;
import com.android.systemui.statusbar.lockscreen.LockscreenSmartspaceController;
import com.android.systemui.statusbar.notification.AnimatedImageNotificationManager;
import com.android.systemui.statusbar.notification.AssistantFeedbackController;
import com.android.systemui.statusbar.notification.ColorUpdateLogger;
import com.android.systemui.statusbar.notification.ConversationNotificationManager;
import com.android.systemui.statusbar.notification.DynamicPrivacyController;
import com.android.systemui.statusbar.notification.DynamicPrivacyController_Factory;
import com.android.systemui.statusbar.notification.InstantAppNotifier;
import com.android.systemui.statusbar.notification.NotifPipelineFlags;
import com.android.systemui.statusbar.notification.NotificationLaunchAnimatorControllerProvider;
import com.android.systemui.statusbar.notification.NotificationSectionsFeatureManager;
import com.android.systemui.statusbar.notification.NotificationWakeUpCoordinator;
import com.android.systemui.statusbar.notification.RemoteInputControllerLogger;
import com.android.systemui.statusbar.notification.VisibilityLocationProvider;
import com.android.systemui.statusbar.notification.collection.NotifCollection;
import com.android.systemui.statusbar.notification.collection.NotifInflaterImpl;
import com.android.systemui.statusbar.notification.collection.NotifLiveDataStoreImpl;
import com.android.systemui.statusbar.notification.collection.NotifPipeline;
import com.android.systemui.statusbar.notification.collection.NotifPipelineChoreographerImpl;
import com.android.systemui.statusbar.notification.collection.ShadeListBuilder;
import com.android.systemui.statusbar.notification.collection.TargetSdkResolver;
import com.android.systemui.statusbar.notification.collection.coordinator.NotifCoordinatorsImpl;
import com.android.systemui.statusbar.notification.collection.coordinator.ShadeEventCoordinator;
import com.android.systemui.statusbar.notification.collection.coordinator.VisualStabilityCoordinator;
import com.android.systemui.statusbar.notification.collection.inflation.BindEventManagerImpl;
import com.android.systemui.statusbar.notification.collection.inflation.NotifUiAdjustmentProvider;
import com.android.systemui.statusbar.notification.collection.inflation.NotificationRowBinderImpl;
import com.android.systemui.statusbar.notification.collection.inflation.OnUserInteractionCallbackImpl;
import com.android.systemui.statusbar.notification.collection.init.NotifPipelineInitializer;
import com.android.systemui.statusbar.notification.collection.notifcollection.CommonNotifCollection;
import com.android.systemui.statusbar.notification.collection.provider.DebugModeFilterProvider;
import com.android.systemui.statusbar.notification.collection.provider.HighPriorityProvider;
import com.android.systemui.statusbar.notification.collection.provider.LaunchFullScreenIntentProvider;
import com.android.systemui.statusbar.notification.collection.provider.NotificationDismissibilityProviderImpl;
import com.android.systemui.statusbar.notification.collection.provider.NotificationVisibilityProviderImpl;
import com.android.systemui.statusbar.notification.collection.provider.SectionHeaderVisibilityProvider;
import com.android.systemui.statusbar.notification.collection.provider.SectionStyleProvider;
import com.android.systemui.statusbar.notification.collection.provider.VisibilityLocationProviderDelegator;
import com.android.systemui.statusbar.notification.collection.provider.VisualStabilityProvider;
import com.android.systemui.statusbar.notification.collection.render.GroupExpansionManagerImpl;
import com.android.systemui.statusbar.notification.collection.render.GroupMembershipManagerImpl;
import com.android.systemui.statusbar.notification.collection.render.MediaContainerController;
import com.android.systemui.statusbar.notification.collection.render.NotifViewBarn;
import com.android.systemui.statusbar.notification.collection.render.NotificationVisibilityProvider;
import com.android.systemui.statusbar.notification.collection.render.RenderStageManager;
import com.android.systemui.statusbar.notification.collection.render.SectionHeaderNodeControllerImpl;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesAlertingHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesIncomingHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesPeopleHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationSectionHeadersModule_ProvidesSilentHeaderSubcomponentFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationStatsLoggerModule_Companion_ProvideCoreStartableFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationStatsLoggerModule_Companion_ProvideLegacyLoggerOptionalFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationsModule_ProvideListContainerFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationsModule_ProvideNotificationTransitionAnimatorControllerProviderFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationsModule_ProvideNotificationsControllerFactory;
import com.android.systemui.statusbar.notification.dagger.NotificationsModule_ProvideVisualInterruptionDecisionProviderFactory;
import com.android.systemui.statusbar.notification.data.NotificationSettingsRepositoryModule_ProvideNotificationSettingsRepositoryFactory;
import com.android.systemui.statusbar.notification.data.repository.ActiveNotificationListRepository;
import com.android.systemui.statusbar.notification.data.repository.HeadsUpNotificationIconViewStateRepository;
import com.android.systemui.statusbar.notification.data.repository.HeadsUpNotificationRepositoryImpl;
import com.android.systemui.statusbar.notification.data.repository.NotificationLaunchAnimationRepository;
import com.android.systemui.statusbar.notification.data.repository.NotificationsKeyguardViewStateRepository;
import com.android.systemui.statusbar.notification.domain.interactor.ActiveNotificationsInteractor;
import com.android.systemui.statusbar.notification.domain.interactor.HeadsUpNotificationInteractor;
import com.android.systemui.statusbar.notification.domain.interactor.NotificationAlertsInteractor;
import com.android.systemui.statusbar.notification.domain.interactor.NotificationLaunchAnimationInteractor;
import com.android.systemui.statusbar.notification.domain.interactor.NotificationSettingsInteractorModule_ProvideNotificationSettingsInteractorFactory;
import com.android.systemui.statusbar.notification.domain.interactor.NotificationsKeyguardInteractor;
import com.android.systemui.statusbar.notification.domain.interactor.SeenNotificationsInteractor;
import com.android.systemui.statusbar.notification.footer.ui.viewmodel.FooterViewModelModule_ProvideOptionalFactory;
import com.android.systemui.statusbar.notification.icon.IconBuilder;
import com.android.systemui.statusbar.notification.icon.IconManager;
import com.android.systemui.statusbar.notification.icon.ui.viewbinder.NotificationIconAreaControllerViewBinderWrapperImpl;
import com.android.systemui.statusbar.notification.icon.ui.viewbinder.StatusBarIconViewBindingFailureTracker;
import com.android.systemui.statusbar.notification.icon.ui.viewmodel.NotificationIconContainerAlwaysOnDisplayViewModel;
import com.android.systemui.statusbar.notification.init.NotificationsController;
import com.android.systemui.statusbar.notification.init.NotificationsControllerImpl;
import com.android.systemui.statusbar.notification.init.NotificationsControllerStub;
import com.android.systemui.statusbar.notification.interruption.AvalancheProvider;
import com.android.systemui.statusbar.notification.interruption.HeadsUpViewBinder;
import com.android.systemui.statusbar.notification.interruption.KeyguardNotificationVisibilityProviderImpl;
import com.android.systemui.statusbar.notification.interruption.NotificationInterruptLogger;
import com.android.systemui.statusbar.notification.interruption.NotificationInterruptStateProviderImpl;
import com.android.systemui.statusbar.notification.interruption.VisualInterruptionDecisionProvider;
import com.android.systemui.statusbar.notification.logging.NotificationMemoryDumper;
import com.android.systemui.statusbar.notification.logging.NotificationMemoryLogger;
import com.android.systemui.statusbar.notification.logging.NotificationMemoryMonitor;
import com.android.systemui.statusbar.notification.logging.NotificationPanelLoggerImpl;
import com.android.systemui.statusbar.notification.people.NotificationPersonExtractorPluginBoundary;
import com.android.systemui.statusbar.notification.people.PeopleNotificationIdentifierImpl;
import com.android.systemui.statusbar.notification.row.BigPictureStatsManager;
import com.android.systemui.statusbar.notification.row.ChannelEditorDialog;
import com.android.systemui.statusbar.notification.row.ChannelEditorDialogController;
import com.android.systemui.statusbar.notification.row.NotifBindPipeline;
import com.android.systemui.statusbar.notification.row.NotifInflationErrorManager;
import com.android.systemui.statusbar.notification.row.NotifRemoteViewCache;
import com.android.systemui.statusbar.notification.row.NotifRemoteViewCacheImpl;
import com.android.systemui.statusbar.notification.row.NotifRemoteViewsFactoryContainerImpl;
import com.android.systemui.statusbar.notification.row.NotificationContentInflater;
import com.android.systemui.statusbar.notification.row.NotificationGutsManager;
import com.android.systemui.statusbar.notification.row.NotificationSettingsController;
import com.android.systemui.statusbar.notification.row.RowContentBindStage;
import com.android.systemui.statusbar.notification.shelf.domain.interactor.NotificationShelfInteractor;
import com.android.systemui.statusbar.notification.shelf.ui.viewmodel.NotificationShelfViewModel;
import com.android.systemui.statusbar.notification.stack.AmbientState;
import com.android.systemui.statusbar.notification.stack.NotificationRoundnessManager;
import com.android.systemui.statusbar.notification.stack.NotificationRoundnessManager_Factory;
import com.android.systemui.statusbar.notification.stack.NotificationSectionsManager;
import com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout;
import com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayoutController;
import com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayoutController_Factory;
import com.android.systemui.statusbar.notification.stack.NotificationStackSizeCalculator;
import com.android.systemui.statusbar.notification.stack.NotificationTargetsHelper;
import com.android.systemui.statusbar.notification.stack.domain.interactor.HideNotificationsInteractor;
import com.android.systemui.statusbar.notification.stack.domain.interactor.NotificationStackAppearanceInteractor;
import com.android.systemui.statusbar.notification.stack.domain.interactor.NotificationStackInteractor$special$$inlined$map$1;
import com.android.systemui.statusbar.notification.stack.domain.interactor.SharedNotificationContainerInteractor;
import com.android.systemui.statusbar.notification.stack.ui.view.NotificationStatsLoggerImpl;
import com.android.systemui.statusbar.notification.stack.ui.view.SharedNotificationContainer;
import com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationLoggerViewModel;
import com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationStackAppearanceViewModel;
import com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationsPlaceholderViewModel;
import com.android.systemui.statusbar.notification.stack.ui.viewmodel.SharedNotificationContainerViewModel;
import com.android.systemui.statusbar.phone.AutoHideController;
import com.android.systemui.statusbar.phone.BiometricUnlockController;
import com.android.systemui.statusbar.phone.CentralSurfaces;
import com.android.systemui.statusbar.phone.CentralSurfacesCommandQueueCallbacks_Factory;
import com.android.systemui.statusbar.phone.ConfigurationControllerImpl;
import com.android.systemui.statusbar.phone.ConfigurationControllerStartable;
import com.android.systemui.statusbar.phone.DarkIconDispatcherImpl;
import com.android.systemui.statusbar.phone.DozeParameters;
import com.android.systemui.statusbar.phone.DozeParameters_Factory;
import com.android.systemui.statusbar.phone.DozeScrimController;
import com.android.systemui.statusbar.phone.DozeServiceHost;
import com.android.systemui.statusbar.phone.HeadsUpManagerPhone;
import com.android.systemui.statusbar.phone.KeyguardBottomAreaView;
import com.android.systemui.statusbar.phone.KeyguardBypassController;
import com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm;
import com.android.systemui.statusbar.phone.KeyguardDismissUtil;
import com.android.systemui.statusbar.phone.LSShadeTransitionLogger;
import com.android.systemui.statusbar.phone.LegacyNotificationIconAreaControllerImpl;
import com.android.systemui.statusbar.phone.LetterboxAppearanceCalculator;
import com.android.systemui.statusbar.phone.LetterboxBackgroundProvider;
import com.android.systemui.statusbar.phone.LightBarController;
import com.android.systemui.statusbar.phone.LockscreenGestureLogger;
import com.android.systemui.statusbar.phone.ManagedProfileControllerImpl;
import com.android.systemui.statusbar.phone.NotificationIconAreaController;
import com.android.systemui.statusbar.phone.NotificationListenerWithPlugins;
import com.android.systemui.statusbar.phone.ScreenOffAnimationController;
import com.android.systemui.statusbar.phone.ScrimController;
import com.android.systemui.statusbar.phone.StatusBarContentInsetsProvider;
import com.android.systemui.statusbar.phone.StatusBarHeadsUpChangeListener;
import com.android.systemui.statusbar.phone.StatusBarHideIconsForBouncerManager;
import com.android.systemui.statusbar.phone.StatusBarIconController;
import com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager;
import com.android.systemui.statusbar.phone.StatusBarLocationPublisher;
import com.android.systemui.statusbar.phone.StatusBarNotificationActivityStarter_Factory;
import com.android.systemui.statusbar.phone.StatusBarNotificationPresenter;
import com.android.systemui.statusbar.phone.StatusBarNotificationPresenter_Factory;
import com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback;
import com.android.systemui.statusbar.phone.StatusBarSignalPolicy;
import com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager;
import com.android.systemui.statusbar.phone.SystemUIDialog;
import com.android.systemui.statusbar.phone.SystemUIDialogManager;
import com.android.systemui.statusbar.phone.TapAgainView;
import com.android.systemui.statusbar.phone.TapAgainViewController;
import com.android.systemui.statusbar.phone.TapAgainViewController_Factory;
import com.android.systemui.statusbar.phone.UnlockedScreenOffAnimationController;
import com.android.systemui.statusbar.phone.data.repository.DarkIconRepositoryImpl;
import com.android.systemui.statusbar.phone.domain.interactor.LightsOutInteractor;
import com.android.systemui.statusbar.phone.fragment.CollapsedStatusBarFragment;
import com.android.systemui.statusbar.phone.fragment.CollapsedStatusBarFragmentStartable;
import com.android.systemui.statusbar.phone.ongoingcall.OngoingCallController;
import com.android.systemui.statusbar.phone.ongoingcall.OngoingCallLogger;
import com.android.systemui.statusbar.phone.ongoingcall.data.repository.OngoingCallRepository;
import com.android.systemui.statusbar.pipeline.StatusBarPipelineFlags;
import com.android.systemui.statusbar.pipeline.airplane.data.repository.AirplaneModeRepository;
import com.android.systemui.statusbar.pipeline.airplane.domain.interactor.AirplaneModeInteractor;
import com.android.systemui.statusbar.pipeline.airplane.ui.viewmodel.AirplaneModeViewModelImpl;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideFirstMobileSubShowingNetworkTypeIconProviderFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideMobileViewLogBufferFactory;
import com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideVerboseMobileViewLogBufferFactory;
import com.android.systemui.statusbar.pipeline.ethernet.domain.EthernetInteractor;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.CarrierConfigCoreStartable;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.CarrierConfigRepository;
import com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileConnectionsRepository;
import com.android.systemui.statusbar.pipeline.mobile.domain.interactor.MobileIconsInteractorImpl;
import com.android.systemui.statusbar.pipeline.mobile.ui.MobileUiAdapter;
import com.android.systemui.statusbar.pipeline.mobile.ui.MobileViewLogger;
import com.android.systemui.statusbar.pipeline.mobile.ui.VerboseMobileViewLogger;
import com.android.systemui.statusbar.pipeline.mobile.ui.viewmodel.MobileIconsViewModel;
import com.android.systemui.statusbar.pipeline.mobile.util.MobileMappingsProxyImpl;
import com.android.systemui.statusbar.pipeline.shared.ConnectivityConstants;
import com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl;
import com.android.systemui.statusbar.pipeline.shared.ui.binder.CollapsedStatusBarViewBinderImpl;
import com.android.systemui.statusbar.pipeline.shared.ui.viewmodel.CollapsedStatusBarViewModel;
import com.android.systemui.statusbar.pipeline.shared.ui.viewmodel.CollapsedStatusBarViewModelImpl;
import com.android.systemui.statusbar.pipeline.shared.ui.viewmodel.InternetTileViewModel;
import com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepository;
import com.android.systemui.statusbar.pipeline.wifi.domain.interactor.WifiInteractorImpl;
import com.android.systemui.statusbar.pipeline.wifi.shared.WifiConstants;
import com.android.systemui.statusbar.pipeline.wifi.ui.WifiUiAdapter;
import com.android.systemui.statusbar.pipeline.wifi.ui.viewmodel.WifiViewModel;
import com.android.systemui.statusbar.policy.AccessibilityManagerWrapper;
import com.android.systemui.statusbar.policy.BatteryController;
import com.android.systemui.statusbar.policy.BatteryControllerLogger;
import com.android.systemui.statusbar.policy.BluetoothControllerImpl;
import com.android.systemui.statusbar.policy.CastController;
import com.android.systemui.statusbar.policy.CastControllerImpl;
import com.android.systemui.statusbar.policy.ConfigurationController;
import com.android.systemui.statusbar.policy.DataSaverControllerImpl;
import com.android.systemui.statusbar.policy.DeviceControlsControllerImpl;
import com.android.systemui.statusbar.policy.DevicePostureControllerImpl;
import com.android.systemui.statusbar.policy.DeviceProvisionedController;
import com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl;
import com.android.systemui.statusbar.policy.DeviceStateRotationLockSettingController;
import com.android.systemui.statusbar.policy.ExtensionControllerImpl;
import com.android.systemui.statusbar.policy.FlashlightController;
import com.android.systemui.statusbar.policy.HeadsUpManager;
import com.android.systemui.statusbar.policy.HotspotController;
import com.android.systemui.statusbar.policy.HotspotControllerImpl;
import com.android.systemui.statusbar.policy.IndividualSensorPrivacyControllerImpl;
import com.android.systemui.statusbar.policy.KeyguardStateController;
import com.android.systemui.statusbar.policy.KeyguardStateControllerImpl;
import com.android.systemui.statusbar.policy.LocationController;
import com.android.systemui.statusbar.policy.LocationControllerImpl;
import com.android.systemui.statusbar.policy.NextAlarmController;
import com.android.systemui.statusbar.policy.NextAlarmControllerImpl;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideAlarmTileViewModelFactory;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideFlashlightTileViewModelFactory;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideLocationTileViewModelFactory;
import com.android.systemui.statusbar.policy.PolicyModule_Companion_ProvideUiModeNightTileViewModelFactory;
import com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler;
import com.android.systemui.statusbar.policy.RemoteInputUriController;
import com.android.systemui.statusbar.policy.RotationLockController;
import com.android.systemui.statusbar.policy.RotationLockControllerImpl;
import com.android.systemui.statusbar.policy.SecurityController;
import com.android.systemui.statusbar.policy.SecurityControllerImpl;
import com.android.systemui.statusbar.policy.SensitiveNotificationProtectionController;
import com.android.systemui.statusbar.policy.SensitiveNotificationProtectionControllerImpl;
import com.android.systemui.statusbar.policy.SmartReplyConstants;
import com.android.systemui.statusbar.policy.SplitShadeStateControllerImpl;
import com.android.systemui.statusbar.policy.UserInfoControllerImpl;
import com.android.systemui.statusbar.policy.UserSwitcherController;
import com.android.systemui.statusbar.policy.WalletControllerImpl;
import com.android.systemui.statusbar.policy.ZenModeController;
import com.android.systemui.statusbar.policy.bluetooth.BluetoothRepositoryImpl;
import com.android.systemui.statusbar.policy.dagger.StatusBarPolicyModule_ProvideAccessPointControllerImplFactory;
import com.android.systemui.statusbar.policy.dagger.StatusBarPolicyModule_ProvideAutoRotateSettingsManagerFactory;
import com.android.systemui.statusbar.policy.dagger.StatusBarPolicyModule_ProvideBatteryControllerLogFactory;
import com.android.systemui.statusbar.policy.dagger.StatusBarPolicyModule_ProvideDataSaverControllerFactory;
import com.android.systemui.statusbar.policy.data.repository.UserSetupRepositoryImpl;
import com.android.systemui.statusbar.policy.domain.interactor.DeviceProvisioningInteractor;
import com.android.systemui.statusbar.ui.viewmodel.KeyguardStatusBarViewModel;
import com.android.systemui.statusbar.window.StatusBarWindowController;
import com.android.systemui.statusbar.window.StatusBarWindowModule_ProvidesStatusBarWindowViewFactory;
import com.android.systemui.statusbar.window.StatusBarWindowStateController;
import com.android.systemui.statusbar.window.StatusBarWindowView;
import com.android.systemui.stylus.StylusManager;
import com.android.systemui.stylus.StylusUsiPowerStartable;
import com.android.systemui.stylus.StylusUsiPowerUI;
import com.android.systemui.telephony.TelephonyCallback_Factory;
import com.android.systemui.telephony.TelephonyListenerManager;
import com.android.systemui.telephony.TelephonyListenerManager_Factory;
import com.android.systemui.telephony.data.repository.TelephonyRepositoryImpl;
import com.android.systemui.telephony.domain.interactor.TelephonyInteractor;
import com.android.systemui.telephony.ui.activity.SwitchToManagedProfileForCallActivity;
import com.android.systemui.temporarydisplay.TemporaryViewLogger;
import com.android.systemui.temporarydisplay.TemporaryViewUiEventLogger;
import com.android.systemui.temporarydisplay.chipbar.ChipbarAnimator;
import com.android.systemui.temporarydisplay.chipbar.ChipbarCoordinator;
import com.android.systemui.temporarydisplay.chipbar.ChipbarLogger;
import com.android.systemui.temporarydisplay.chipbar.SwipeChipbarAwayGestureHandler;
import com.android.systemui.temporarydisplay.dagger.TemporaryDisplayModule_Companion_ProvideChipbarLogBufferFactory;
import com.android.systemui.theme.ThemeOverlayApplier;
import com.android.systemui.toast.ToastFactory;
import com.android.systemui.toast.ToastLogger;
import com.android.systemui.toast.ToastUI;
import com.android.systemui.touch.TouchInsetManager;
import com.android.systemui.tuner.TunerService;
import com.android.systemui.tuner.TunerServiceImpl;
import com.android.systemui.unfold.DisplaySwitchLatencyLogger;
import com.android.systemui.unfold.DisplaySwitchLatencyTracker;
import com.android.systemui.unfold.UnfoldInitializationStartable;
import com.android.systemui.unfold.UnfoldTraceLogger;
import com.android.systemui.unfold.UnfoldTransitionProgressProvider;
import com.android.systemui.unfold.data.repository.FoldStateRepositoryImpl;
import com.android.systemui.unfold.data.repository.UnfoldTransitionRepositoryImpl;
import com.android.systemui.unfold.domain.interactor.UnfoldTransitionInteractorImpl;
import com.android.systemui.unfold.system.DeviceStateRepositoryImpl;
import com.android.systemui.unfold.updates.DeviceFoldStateProvider;
import com.android.systemui.unfold.util.NaturalRotationUnfoldProgressProvider;
import com.android.systemui.unfold.util.ScopedUnfoldTransitionProgressProvider;
import com.android.systemui.usb.StorageNotification;
import com.android.systemui.user.data.repository.UserRepositoryImpl;
import com.android.systemui.user.data.repository.UserSwitcherRepositoryImpl;
import com.android.systemui.user.domain.interactor.GuestUserInteractor;
import com.android.systemui.user.domain.interactor.HeadlessSystemUserModeImpl;
import com.android.systemui.user.domain.interactor.RefreshUsersScheduler;
import com.android.systemui.user.domain.interactor.SelectedUserInteractor;
import com.android.systemui.user.domain.interactor.UserSwitcherInteractor;
import com.android.systemui.user.ui.dialog.UserSwitcherDialogCoordinator;
import com.android.systemui.user.ui.viewmodel.UserSwitcherViewModel;
import com.android.systemui.util.ActivityTaskManagerProxy;
import com.android.systemui.util.BackupManagerProxy;
import com.android.systemui.util.CarrierConfigTracker;
import com.android.systemui.util.DeviceConfigProxy;
import com.android.systemui.util.EventLogImpl;
import com.android.systemui.util.InitializationChecker;
import com.android.systemui.util.NotificationChannels;
import com.android.systemui.util.RingerModeTrackerImpl;
import com.android.systemui.util.ViewController;
import com.android.systemui.util.WallpaperController;
import com.android.systemui.util.concurrency.DelayableExecutor;
import com.android.systemui.util.concurrency.ExecutionImpl;
import com.android.systemui.util.concurrency.ExecutorImpl;
import com.android.systemui.util.concurrency.GlobalConcurrencyModule_ProvideMainLooperFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBackgroundDelayableExecutorFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBackgroundExecutorFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBgHandlerFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBgLooperFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBroadcastRunningExecutorFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBroadcastRunningLooperFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideLongRunningLooperFactory;
import com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideTimeTickHandlerFactory;
import com.android.systemui.util.io.Files;
import com.android.systemui.util.kotlin.JavaAdapter;
import com.android.systemui.util.kotlin.SysUICoroutinesModule_BgDispatcherFactory;
import com.android.systemui.util.leak.LeakDetector;
import com.android.systemui.util.leak.LeakModule_ProvidesLeakDetectorFactory;
import com.android.systemui.util.leak.TrackedCollections_Factory;
import com.android.systemui.util.sensors.AsyncSensorManager;
import com.android.systemui.util.sensors.ProximitySensor;
import com.android.systemui.util.settings.GlobalSettingsImpl;
import com.android.systemui.util.settings.SecureSettings;
import com.android.systemui.util.settings.SecureSettingsImpl_Factory;
import com.android.systemui.util.settings.SystemSettingsImpl;
import com.android.systemui.util.settings.repository.UserAwareSecureSettingsRepositoryImpl;
import com.android.systemui.util.time.SystemClock;
import com.android.systemui.util.time.SystemClockImpl;
import com.android.systemui.util.view.ViewUtil;
import com.android.systemui.util.wakelock.WakeLock;
import com.android.systemui.util.wrapper.BuildInfo;
import com.android.systemui.util.wrapper.RotationPolicyWrapperImpl;
import com.android.systemui.utils.UserRestrictionChecker;
import com.android.systemui.volume.VolumeDialogComponent;
import com.android.systemui.volume.VolumeDialogControllerImpl;
import com.android.systemui.volume.VolumePanelDialogReceiver;
import com.android.systemui.volume.VolumePanelFactory;
import com.android.systemui.volume.VolumeUI;
import com.android.systemui.volume.panel.component.anc.data.repository.AncSliceRepositoryImpl;
import com.android.systemui.volume.panel.ui.activity.VolumePanelActivity;
import com.android.systemui.volume.panel.ui.viewmodel.VolumePanelViewModel;
import com.android.systemui.wallet.controller.QuickAccessWalletController;
import com.android.systemui.wallet.controller.WalletContextualLocationsService;
import com.android.systemui.wallet.controller.WalletContextualSuggestionsController;
import com.android.systemui.wallpapers.ImageWallpaper;
import com.android.systemui.wallpapers.data.repository.WallpaperRepositoryImpl;
import com.android.systemui.wmshell.WMShell;
import com.android.window.flags.Flags;
import com.android.wm.shell.ProtoLogController;
import com.android.wm.shell.RootDisplayAreaOrganizer;
import com.android.wm.shell.RootTaskDisplayAreaOrganizer;
import com.android.wm.shell.ShellTaskOrganizer;
import com.android.wm.shell.WindowManagerShellWrapper;
import com.android.wm.shell.animation.FlingAnimationUtils;
import com.android.wm.shell.back.BackAnimationBackground;
import com.android.wm.shell.back.BackAnimationController;
import com.android.wm.shell.back.CrossActivityBackAnimation;
import com.android.wm.shell.back.CrossTaskBackAnimation;
import com.android.wm.shell.back.CustomizeActivityAnimation;
import com.android.wm.shell.back.ShellBackAnimationRegistry;
import com.android.wm.shell.bubbles.BubbleController;
import com.android.wm.shell.bubbles.BubbleData;
import com.android.wm.shell.bubbles.BubbleEducationController;
import com.android.wm.shell.bubbles.BubbleLogger;
import com.android.wm.shell.bubbles.BubblePositioner;
import com.android.wm.shell.common.DevicePostureController;
import com.android.wm.shell.common.DisplayController;
import com.android.wm.shell.common.DisplayImeController;
import com.android.wm.shell.common.DisplayInsetsController;
import com.android.wm.shell.common.DisplayLayout;
import com.android.wm.shell.common.DockStateReader;
import com.android.wm.shell.common.FloatingContentCoordinator;
import com.android.wm.shell.common.LaunchAdjacentController;
import com.android.wm.shell.common.MultiInstanceHelper;
import com.android.wm.shell.common.ShellExecutor;
import com.android.wm.shell.common.SyncTransactionQueue;
import com.android.wm.shell.common.SystemWindows;
import com.android.wm.shell.common.TabletopModeController;
import com.android.wm.shell.common.TaskStackListenerImpl;
import com.android.wm.shell.common.TransactionPool;
import com.android.wm.shell.common.pip.PhonePipKeepClearAlgorithm;
import com.android.wm.shell.common.pip.PhoneSizeSpecSource;
import com.android.wm.shell.common.pip.PipAppOpsListener;
import com.android.wm.shell.common.pip.PipBoundsAlgorithm;
import com.android.wm.shell.common.pip.PipBoundsState;
import com.android.wm.shell.common.pip.PipDisplayLayoutState;
import com.android.wm.shell.common.pip.PipMediaController;
import com.android.wm.shell.common.pip.PipPerfHintController;
import com.android.wm.shell.common.pip.PipSnapAlgorithm;
import com.android.wm.shell.common.pip.PipUiEventLogger;
import com.android.wm.shell.common.pip.PipUtils;
import com.android.wm.shell.compatui.CompatUIConfiguration;
import com.android.wm.shell.compatui.CompatUIShellCommandHandler;
import com.android.wm.shell.dagger.WMShellBaseModule$$ExternalSyntheticLambda0;
import com.android.wm.shell.dagger.WMShellBaseModule$$ExternalSyntheticLambda5;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideActivityEmbeddingControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideCompatUIControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideDesktopTaskRepositoryFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideDisplayControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideDisplayImeControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideDisplayInsetsControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideDisplayLayoutFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideFloatingContentCoordinatorFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideFreeformComponentsFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideFullscreenTaskListenerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideHideDisplayCutoutControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideHomeTransitionObserverFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideIconProviderFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideIndependentShellComponentsToCreateFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideLaunchAdjacentControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideMultiInstanceHelperFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideOneHandedFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvidePhonePipKeepClearAlgorithmFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideRecentTasksControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideRootTaskDisplayAreaOrganizerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellCommandHandlerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellInitFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellSysuiCallbacksFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideShellTaskOrganizerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideStartingWindowTypeAlgorithmFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideSyncTransactionQueueFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideTaskViewTransitionsFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideTransactionPoolFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideTransitionsFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideUnfoldControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideUnfoldTransitionHandlerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvideWindowManagerShellWrapperFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProviderTaskStackListenerImplFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvidesDesktopTasksControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvidesOneHandedControllerFactory;
import com.android.wm.shell.dagger.WMShellBaseModule_ProvidesSplitScreenControllerFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideSharedBackgroundExecutorFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideSharedBackgroundHandlerFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideShellAnimationExecutorFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideShellMainChoreographerFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideShellMainExecutorFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideShellMainHandlerFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideSplashScreenExecutorFactory;
import com.android.wm.shell.dagger.WMShellConcurrencyModule_ProvideSysUIMainExecutorFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideBubbleControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideBubbleDataFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideBubbleEducationProviderFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideBubbleLoggerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideBubblePositionerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideDesktopModeTaskRepositoryFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideDesktopTasksControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideDragAndDropControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideDragToDesktopTransitionHandlerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideEnterDesktopModeTaskTransitionHandlerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideExitDesktopTaskTransitionHandlerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideFreeformComponentsFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideFreeformTaskListenerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideGlobalDragListenerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideOneHandedControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideRecentsTransitionHandlerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideSplitScreenControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideSplitTaskUnfoldAnimatorBaseFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideToggleResizeDesktopTaskTransitionHandlerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideUnfoldAnimationControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideUnfoldBackgroundControllerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideUnfoldTransitionHandlerFactory;
import com.android.wm.shell.dagger.WMShellModule_ProvideWindowDecorViewModelFactory;
import com.android.wm.shell.dagger.pip.Pip1Module_ProvidePip1Factory;
import com.android.wm.shell.dagger.pip.Pip1Module_ProvidePipAppOpsListenerFactory;
import com.android.wm.shell.dagger.pip.Pip2Module_ProvidePipControllerFactory;
import com.android.wm.shell.dagger.pip.PipModule_ProvidePipTransitionControllerFactory;
import com.android.wm.shell.desktopmode.DesktopModeTaskRepository;
import com.android.wm.shell.desktopmode.DragToDesktopTransitionHandler;
import com.android.wm.shell.desktopmode.EnterDesktopTaskTransitionHandler;
import com.android.wm.shell.desktopmode.ExitDesktopTaskTransitionHandler;
import com.android.wm.shell.desktopmode.ToggleResizeDesktopTaskTransitionHandler;
import com.android.wm.shell.displayareahelper.DisplayAreaHelperController;
import com.android.wm.shell.draganddrop.DragAndDropController;
import com.android.wm.shell.draganddrop.GlobalDragListener;
import com.android.wm.shell.freeform.FreeformComponents;
import com.android.wm.shell.freeform.FreeformTaskListener;
import com.android.wm.shell.freeform.FreeformTaskTransitionHandler;
import com.android.wm.shell.freeform.FreeformTaskTransitionObserver;
import com.android.wm.shell.fullscreen.FullscreenTaskListener;
import com.android.wm.shell.keyguard.KeyguardTransitionHandler;
import com.android.wm.shell.keyguard.KeyguardTransitions;
import com.android.wm.shell.onehanded.OneHandedController;
import com.android.wm.shell.pip.PipAnimationController;
import com.android.wm.shell.pip.PipParamsChangedForwarder;
import com.android.wm.shell.pip.PipSurfaceTransactionHelper;
import com.android.wm.shell.pip.PipTaskOrganizer;
import com.android.wm.shell.pip.PipTransition;
import com.android.wm.shell.pip.PipTransitionController;
import com.android.wm.shell.pip.PipTransitionState;
import com.android.wm.shell.pip.phone.PhonePipMenuController;
import com.android.wm.shell.pip.phone.PipMotionHelper;
import com.android.wm.shell.pip.phone.PipTouchHandler;
import com.android.wm.shell.pip2.phone.PipScheduler;
import com.android.wm.shell.recents.RecentsTransitionHandler;
import com.android.wm.shell.splitscreen.SplitScreenController;
import com.android.wm.shell.startingsurface.StartingWindowController;
import com.android.wm.shell.startingsurface.phone.PhoneStartingWindowTypeAlgorithm;
import com.android.wm.shell.sysui.ShellCommandHandler;
import com.android.wm.shell.sysui.ShellController;
import com.android.wm.shell.sysui.ShellInit;
import com.android.wm.shell.taskview.TaskViewFactoryController;
import com.android.wm.shell.taskview.TaskViewTransitions;
import com.android.wm.shell.transition.DefaultMixedHandler;
import com.android.wm.shell.transition.HomeTransitionObserver;
import com.android.wm.shell.transition.Transitions;
import com.android.wm.shell.unfold.ShellUnfoldProgressProvider;
import com.android.wm.shell.unfold.UnfoldAnimationController;
import com.android.wm.shell.unfold.UnfoldBackgroundController;
import com.android.wm.shell.unfold.UnfoldTransitionHandler;
import com.android.wm.shell.unfold.animation.FullscreenUnfoldTaskAnimator;
import com.android.wm.shell.unfold.animation.SplitTaskUnfoldAnimator;
import com.android.wm.shell.windowdecor.WindowDecorViewModel;
import com.google.android.systemui.GoogleServices;
import com.google.android.systemui.assist.AssistManagerGoogle;
import com.google.android.systemui.assist.GoogleAssistLogger;
import com.google.android.systemui.assist.OpaEnabledDispatcher;
import com.google.android.systemui.assist.OpaEnabledReceiver;
import com.google.android.systemui.assist.OpaEnabledSettings;
import com.google.android.systemui.assist.uihints.AssistantPresenceHandler;
import com.google.android.systemui.assist.uihints.AssistantPresenceHandler_Factory;
import com.google.android.systemui.assist.uihints.AssistantUIHintsModule_ProvideParentViewGroupFactory;
import com.google.android.systemui.assist.uihints.AssistantWarmer;
import com.google.android.systemui.assist.uihints.ConfigurationHandler;
import com.google.android.systemui.assist.uihints.FlingVelocityWrapper_Factory;
import com.google.android.systemui.assist.uihints.GlowController;
import com.google.android.systemui.assist.uihints.GlowController_Factory;
import com.google.android.systemui.assist.uihints.GoBackHandler_Factory;
import com.google.android.systemui.assist.uihints.GoogleDefaultUiController;
import com.google.android.systemui.assist.uihints.IconController;
import com.google.android.systemui.assist.uihints.IconController_Factory;
import com.google.android.systemui.assist.uihints.LightnessProvider_Factory;
import com.google.android.systemui.assist.uihints.NavBarFadeController;
import com.google.android.systemui.assist.uihints.NavBarFader;
import com.google.android.systemui.assist.uihints.NgaMessageHandler;
import com.google.android.systemui.assist.uihints.NgaMessageHandler_Factory;
import com.google.android.systemui.assist.uihints.NgaUiController;
import com.google.android.systemui.assist.uihints.NgaUiController_Factory;
import com.google.android.systemui.assist.uihints.OverlappedElementController_Factory;
import com.google.android.systemui.assist.uihints.OverlayUiHost_Factory;
import com.google.android.systemui.assist.uihints.ScrimController_Factory;
import com.google.android.systemui.assist.uihints.SwipeHandler_Factory;
import com.google.android.systemui.assist.uihints.TimeoutManager_Factory;
import com.google.android.systemui.assist.uihints.TouchInsideHandler;
import com.google.android.systemui.assist.uihints.TouchInsideHandler_Factory;
import com.google.android.systemui.assist.uihints.TranscriptionController;
import com.google.android.systemui.assist.uihints.TranscriptionController_Factory;
import com.google.android.systemui.assist.uihints.edgelights.EdgeLightsController;
import com.google.android.systemui.columbus.ColumbusManager;
import com.google.android.systemui.columbus.ColumbusStarterImpl;
import com.google.android.systemui.columbus.dagger.ColumbusModule_ProvideColumbusStarterFactory;
import com.google.android.systemui.columbus.dagger.ColumbusModule_ProvideGestureSensorFactory;
import com.google.android.systemui.columbus.dagger.ColumbusModule_ProvideQuickTapWakeLockFactory;
import com.google.android.systemui.columbus.fetchers.ActionFetcher;
import com.google.android.systemui.columbus.fetchers.BroadcastFetcher;
import com.google.android.systemui.columbus.fetchers.ColumbusSettingsFetcher;
import com.google.android.systemui.columbus.fetchers.ContentFetcher;
import com.google.android.systemui.columbus.fetchers.GateFetcher;
import com.google.android.systemui.columbus.fetchers.UserFetcher;
import com.google.android.systemui.columbus.legacy.ColumbusContentObserver;
import com.google.android.systemui.columbus.legacy.ColumbusModule_ProvideColumbusActionsFactory;
import com.google.android.systemui.columbus.legacy.ColumbusModule_ProvideFullscreenActionsFactory;
import com.google.android.systemui.columbus.legacy.ColumbusModule_ProvideInputMonitorFactory;
import com.google.android.systemui.columbus.legacy.ColumbusModule_ProvideUserSelectedActionsFactory;
import com.google.android.systemui.columbus.legacy.ColumbusService;
import com.google.android.systemui.columbus.legacy.ColumbusServiceWrapper;
import com.google.android.systemui.columbus.legacy.ColumbusSettings;
import com.google.android.systemui.columbus.legacy.ColumbusStructuredDataManager;
import com.google.android.systemui.columbus.legacy.ColumbusTargetRequestService;
import com.google.android.systemui.columbus.legacy.ContentResolverWrapper;
import com.google.android.systemui.columbus.legacy.PowerManagerWrapper;
import com.google.android.systemui.columbus.legacy.actions.DismissTimer;
import com.google.android.systemui.columbus.legacy.actions.LaunchApp;
import com.google.android.systemui.columbus.legacy.actions.LaunchOverview;
import com.google.android.systemui.columbus.legacy.actions.ManageMedia;
import com.google.android.systemui.columbus.legacy.actions.OpenNotificationShade;
import com.google.android.systemui.columbus.legacy.actions.SilenceCall;
import com.google.android.systemui.columbus.legacy.actions.SnoozeAlarm;
import com.google.android.systemui.columbus.legacy.actions.TakeScreenshot;
import com.google.android.systemui.columbus.legacy.actions.ToggleFlashlight;
import com.google.android.systemui.columbus.legacy.actions.UnpinNotifications;
import com.google.android.systemui.columbus.legacy.actions.UserSelectedAction;
import com.google.android.systemui.columbus.legacy.feedback.HapticClick;
import com.google.android.systemui.columbus.legacy.feedback.UserActivity;
import com.google.android.systemui.columbus.legacy.gates.FlagEnabled;
import com.google.android.systemui.columbus.legacy.gates.KeyguardProximity;
import com.google.android.systemui.columbus.legacy.gates.KeyguardVisibility;
import com.google.android.systemui.columbus.legacy.gates.PowerSaveState;
import com.google.android.systemui.columbus.legacy.gates.PowerState;
import com.google.android.systemui.columbus.legacy.gates.Proximity;
import com.google.android.systemui.columbus.legacy.gates.ScreenTouch;
import com.google.android.systemui.columbus.legacy.gates.SilenceAlertsDisabled;
import com.google.android.systemui.columbus.legacy.gates.SystemKeyPress;
import com.google.android.systemui.columbus.legacy.gates.TelephonyActivity;
import com.google.android.systemui.columbus.legacy.gates.VrMode;
import com.google.android.systemui.columbus.legacy.sensors.AiAiCHREGestureSensor;
import com.google.android.systemui.columbus.legacy.sensors.CHREGestureSensorDelegator;
import com.google.android.systemui.columbus.legacy.sensors.GestureSensorImpl;
import com.google.android.systemui.columbus.legacy.sensors.config.LowSensitivitySettingAdjustment;
import com.google.android.systemui.columbus.legacy.sensors.config.SensorConfiguration;
import com.google.android.systemui.columbus.sensors.GestureController;
import com.google.android.systemui.columbus.sensors.NoOpGestureSensor;
import com.google.android.systemui.dreamliner.DockAlignmentController;
import com.google.android.systemui.dreamliner.DockObserver;
import com.google.android.systemui.dreamliner.WirelessChargerCommander;
import com.google.android.systemui.dreams.LockscreenWallpaperDreamService;
import com.google.android.systemui.elmyra.ElmyraModule_ProvidesGestureSensorFactory;
import com.google.android.systemui.elmyra.ServiceConfigurationGoogle;
import com.google.android.systemui.elmyra.SnapshotConfiguration;
import com.google.android.systemui.elmyra.actions.CameraAction;
import com.google.android.systemui.elmyra.actions.LaunchOpa;
import com.google.android.systemui.elmyra.actions.SettingsAction;
import com.google.android.systemui.elmyra.actions.SetupWizardAction;
import com.google.android.systemui.elmyra.feedback.AssistInvocationEffect;
import com.google.android.systemui.elmyra.gates.CameraVisibility;
import com.google.android.systemui.elmyra.gates.ChargingState;
import com.google.android.systemui.elmyra.gates.SetupWizard;
import com.google.android.systemui.elmyra.gates.UsbState;
import com.google.android.systemui.elmyra.gates.WakeMode;
import com.google.android.systemui.elmyra.sensors.CHREGestureSensor;
import com.google.android.systemui.elmyra.sensors.GestureSensor;
import com.google.android.systemui.elmyra.sensors.JNIGestureSensor;
import com.google.android.systemui.elmyra.sensors.config.GestureConfiguration;
import com.google.android.systemui.fingerprint.FingerprintInteractiveToAuthProviderGoogle;
import com.google.android.systemui.keyguard.ActiveUnlockChipbarManager;
import com.google.android.systemui.keyguard.RefreshRateRequesterBinder;
import com.google.android.systemui.keyguard.data.repository.AmbientIndicationRepository;
import com.google.android.systemui.keyguard.domain.interactor.AmbientIndicationInteractor;
import com.google.android.systemui.keyguard.domain.interactor.RefreshRateInteractor;
import com.google.android.systemui.lowlightclock.LowLightClockDreamService;
import com.google.android.systemui.power.BatterySaverConfirmationDialog;
import com.google.android.systemui.power.EnhancedEstimatesGoogleImpl;
import com.google.android.systemui.power.PowerNotificationWarningsGoogleImpl;
import com.google.android.systemui.power.SevereLowBatteryNotification;
import com.google.android.systemui.power.batteryevent.common.dagger.EventFrameworkModule_Companion_ProvideHalDataSourceFactory;
import com.google.android.systemui.power.batteryevent.common.dagger.EventFrameworkModule_Companion_ProvideSettingsDataSourceFactory;
import com.google.android.systemui.power.batteryevent.common.module.BatteryEventModuleProvider;
import com.google.android.systemui.power.batteryevent.domain.BatteryEventService;
import com.google.android.systemui.power.batteryevent.domain.BatteryEventStateController;
import com.google.android.systemui.power.batteryevent.repository.EventSourceMonitor;
import com.google.android.systemui.power.batteryevent.repository.HalDataSource;
import com.google.android.systemui.power.batteryevent.repository.SettingsDataSource;
import com.google.android.systemui.power.batteryevent.repository.SystemEventDataSource;
import com.google.android.systemui.power.batteryhealth.HealthManager;
import com.google.android.systemui.power.batteryhealth.HealthService;
import com.google.android.systemui.power.batteryhealth.HealthUpdateReceiver;
import com.google.android.systemui.qs.dagger.QSModuleGoogle_ProvideAutoTileManagerFactory;
import com.google.android.systemui.qs.launcher.LauncherTileService;
import com.google.android.systemui.qs.pipeline.domain.autoaddable.ReverseChargingAutoAddable;
import com.google.android.systemui.qs.tiles.BatterySaverTileGoogle;
import com.google.android.systemui.qs.tiles.OverlayToggleTile;
import com.google.android.systemui.qs.tiles.ReverseChargingTile;
import com.google.android.systemui.qs.tiles.RotationLockTileGoogle;
import com.google.android.systemui.reversecharging.ReverseChargingController;
import com.google.android.systemui.screenshot.GoogleScreenshotModule_ProvidesScrnshtNotifSmartActionsProviderFactory;
import com.google.android.systemui.smartspace.AlarmAppSearchController;
import com.google.android.systemui.smartspace.KeyguardMediaViewController;
import com.google.android.systemui.smartspace.KeyguardSmartspaceStartable;
import com.google.android.systemui.smartspace.KeyguardZenAlarmViewController;
import com.google.android.systemui.smartspace.NextClockAlarmController;
import com.google.android.systemui.statusbar.KeyguardIndicationControllerGoogle;
import com.google.android.systemui.statusbar.phone.CentralSurfacesGoogleModule_ProvideHealthManagerFactory;
import com.google.android.systemui.statusbar.policy.GooglePolicyModule_ProvideBatteryControllerFactory;
import com.google.android.systemui.theme.ThemeOverlayControllerGoogle;
import com.google.android.systemui.tips.data.repository.ContextualTipsRepository;
import com.google.android.systemui.tips.domain.interactor.ContextualTipsInteractor;
import com.google.android.systemui.vpn.AdaptivePPNService;
import com.google.android.systemui.vpn.VpnNetworkMonitor;
import com.google.android.systemui.vpn.VpnPackageMonitor;
import dagger.Lazy;
import dagger.internal.DelegateFactory;
import dagger.internal.DoubleCheck;
import dagger.internal.Preconditions;
import dagger.internal.SetBuilder;
import java.lang.ref.WeakReference;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.concurrent.Executor;
import java.util.function.Supplier;
import javax.inject.Provider;
import kotlin.collections.EmptyList;
import kotlin.coroutines.CoroutineContext;
import kotlin.jvm.internal.Intrinsics;
import kotlin.jvm.internal.Reflection;
import kotlinx.coroutines.CoroutineDispatcher;
import kotlinx.coroutines.CoroutineScope;
import kotlinx.coroutines.flow.Flow;
import kotlinx.coroutines.flow.FlowKt;

/* compiled from: go/retraceme 2137a22d937c6ed93fd00fd873698000dad14919f0531176a184f8a975d2c6e7 */
public final class DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl {
    public final Provider compatUIConfigurationProvider;
    public final Provider compatUIShellCommandHandlerProvider;
    public final Provider dockStateReaderProvider;
    public final SwitchingProvider dynamicOverrideOptionalOfUnfoldAnimationControllerProvider;
    public final SwitchingProvider dynamicOverrideOptionalOfUnfoldTransitionHandlerProvider;
    public final Provider pipDisplayLayoutStateProvider;
    public final Provider provideActivityEmbeddingControllerProvider;
    public final Provider provideBackAnimationBackgroundProvider;
    public final Provider provideBackAnimationControllerProvider;
    public final Provider provideBackAnimationProvider;
    public final Provider provideBubbleControllerProvider;
    public final Provider provideBubbleDataProvider;
    public final Provider provideBubbleEducationProvider;
    public final Provider provideBubbleLoggerProvider;
    public final Provider provideBubblePositionerProvider;
    public final Provider provideBubblesProvider;
    public final Provider provideCompatUIControllerProvider;
    public final Provider provideDefaultMixedHandlerProvider;
    public final Provider provideDesktopModeProvider;
    public final Provider provideDesktopModeTaskRepositoryProvider;
    public final Provider provideDesktopTaskRepositoryProvider;
    public final Provider provideDesktopTasksControllerProvider;
    public final Provider provideDevicePostureControllerProvider;
    public final Provider provideDisplayAreaHelperProvider;
    public final Provider provideDisplayControllerProvider;
    public final Provider provideDisplayImeControllerProvider;
    public final Provider provideDisplayInsetsControllerProvider;
    public final Provider provideDisplayLayoutProvider;
    public final Provider provideDragAndDropControllerProvider;
    public final Provider provideDragToDesktopTransitionHandlerProvider;
    public final Provider provideEnterDesktopModeTaskTransitionHandlerProvider;
    public final Provider provideExitDesktopTaskTransitionHandlerProvider;
    public final Provider provideFloatingContentCoordinatorProvider;
    public final Provider provideFreeformComponentsProvider;
    public final Provider provideFreeformComponentsProvider2;
    public final Provider provideFreeformTaskListenerProvider;
    public final Provider provideFreeformTaskTransitionHandlerProvider;
    public final Provider provideFreeformTaskTransitionObserverProvider;
    public final Provider provideFullscreenTaskListenerProvider;
    public final Provider provideGlobalDragListenerProvider;
    public final Provider provideHideDisplayCutoutControllerProvider;
    public final Provider provideHomeTransitionObserverProvider;
    public final Provider provideIconProvider;
    public final Provider provideIndependentShellComponentsToCreateProvider;
    public final Provider provideIndependentShellComponentsToCreateProvider2;
    public final Provider provideKeyguardTransitionHandlerProvider;
    public final Provider provideKeyguardTransitionsProvider;
    public final Provider provideLaunchAdjacentControllerProvider;
    public final Provider provideMultiInstanceHelperProvider;
    public final Provider provideOneHandedControllerProvider;
    public final Provider provideOneHandedProvider;
    public final Provider providePhonePipKeepClearAlgorithmProvider;
    public final Provider providePip1Provider;
    public final Provider providePipAnimationControllerProvider;
    public final Provider providePipAppOpsListenerProvider;
    public final Provider providePipBoundsStateProvider;
    public final Provider providePipControllerProvider;
    public final Provider providePipMediaControllerProvider;
    public final Provider providePipMotionHelperProvider;
    public final Provider providePipParamsChangedForwarderProvider;
    public final Provider providePipPerfHintControllerProvider;
    public final Provider providePipSchedulerProvider;
    public final Provider providePipSnapAlgorithmProvider;
    public final Provider providePipSurfaceTransactionHelperProvider;
    public final Provider providePipTaskOrganizerProvider;
    public final Provider providePipTouchHandlerProvider;
    public final Provider providePipTransitionControllerProvider;
    public final Provider providePipTransitionProvider;
    public final Provider providePipTransitionProvider2;
    public final Provider providePipTransitionStateProvider;
    public final Provider providePipUiEventLoggerProvider;
    public final Provider provideProtoLogControllerProvider;
    public final Provider provideRecentTasksControllerProvider;
    public final Provider provideRecentTasksProvider;
    public final Provider provideRecentsTransitionHandlerProvider;
    public final Provider provideRemoteTransitionsProvider;
    public final Provider provideRootDisplayAreaOrganizerProvider;
    public final Provider provideRootTaskDisplayAreaOrganizerProvider;
    public final Provider provideSharedBackgroundExecutorProvider;
    public final Provider provideSharedBackgroundHandlerProvider;
    public final Provider provideShellAnimationExecutorProvider;
    public final Provider provideShellCommandHandlerProvider;
    public final Provider provideShellControllerProvider;
    public final Provider provideShellInitProvider;
    public final Provider provideShellMainChoreographerProvider;
    public final Provider provideShellMainExecutorProvider;
    public final Provider provideShellMainHandlerProvider;
    public final Provider provideShellSplitTaskUnfoldAnimatorProvider;
    public final Provider provideShellSysuiCallbacksProvider;
    public final DelegateFactory provideShellTaskOrganizerProvider = new Object();
    public final Provider provideSizeSpecSourceProvider;
    public final Provider provideSplashScreenExecutorProvider;
    public final Provider provideSplitScreenControllerProvider;
    public final Provider provideSplitScreenProvider;
    public final SwitchingProvider provideSplitTaskUnfoldAnimatorBaseProvider;
    public final Provider provideSplitTaskUnfoldAnimatorProvider;
    public final Provider provideStartingSurfaceProvider;
    public final Provider provideStartingWindowControllerProvider;
    public final Provider provideStartingWindowTypeAlgorithmProvider;
    public final Provider provideSyncTransactionQueueProvider;
    public final Provider provideSysUIMainExecutorProvider;
    public final Provider provideSystemPerformanceHinterProvider;
    public final Provider provideSystemWindowsProvider;
    public final Provider provideTabletopModeControllerProvider;
    public final Provider provideTaskViewFactoryControllerProvider;
    public final Provider provideTaskViewFactoryProvider;
    public final Provider provideTaskViewTransitionsProvider;
    public final Provider provideToggleResizeDesktopTaskTransitionHandlerProvider;
    public final Provider provideTransactionPoolProvider;
    public final Provider provideTransitionsProvider;
    public final Provider provideUnfoldAnimationControllerProvider;
    public final Provider provideUnfoldBackgroundControllerProvider;
    public final Provider provideUnfoldControllerProvider;
    public final Provider provideUnfoldTransitionHandlerProvider;
    public final Provider provideUnfoldTransitionHandlerProvider2;
    public final Provider provideWindowDecorViewModelProvider;
    public final Provider provideWindowManagerShellWrapperProvider;
    public final Provider providerTaskStackListenerImplProvider;
    public final Provider providesDesktopTasksControllerProvider;
    public final Provider providesOneHandedControllerProvider;
    public final Provider providesPipBoundsAlgorithmProvider;
    public final Provider providesPipPhoneMenuControllerProvider;
    public final Provider providesSplitScreenControllerProvider;
    public final HandlerThread setShellMainThread;
    public final DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl sysUIGoogleGlobalRootComponentImpl;

    /* compiled from: go/retraceme 2137a22d937c6ed93fd00fd873698000dad14919f0531176a184f8a975d2c6e7 */
    public final class SwitchingProvider implements Provider {
        public final /* synthetic */ int $r8$classId;
        public final int id;
        public final DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl sysUIGoogleGlobalRootComponentImpl;
        public final Object wMComponentImpl;

        public /* synthetic */ SwitchingProvider(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, Object obj, int i, int i2) {
            this.$r8$classId = i2;
            this.sysUIGoogleGlobalRootComponentImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl;
            this.wMComponentImpl = obj;
            this.id = i;
        }

        public final Object get() {
            Optional optional;
            Object keyguardTransitionsImpl;
            Optional optional2;
            Object daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34;
            switch (this.$r8$classId) {
                case 0:
                    int i = this.id;
                    int i2 = i / 100;
                    if (i2 == 0) {
                        return get0$2();
                    }
                    if (i2 == 1) {
                        DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
                        DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl daggerSysUIGoogleGlobalRootComponent$WMComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl) this.wMComponentImpl;
                        switch (i) {
                            case 100:
                                return new PipTaskOrganizer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get(), (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get(), (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get(), (PipAnimationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipAnimationControllerProvider.get(), (PipSurfaceTransactionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSurfaceTransactionHelperProvider.get(), (PipTransitionController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionControllerProvider.get(), (PipParamsChangedForwarder) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipParamsChangedForwarderProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPerfHintControllerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (PipUiEventLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipUiEventLoggerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                            case 101:
                                return new PipParamsChangedForwarder();
                            case 102:
                                PipDisplayLayoutState pipDisplayLayoutState = (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get();
                                ShellExecutor shellExecutor = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                                Optional optional3 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSystemPerformanceHinterProvider.get();
                                if (optional3.isPresent()) {
                                    optional = Optional.of(new PipPerfHintController(pipDisplayLayoutState, shellExecutor, (SystemPerformanceHinter) optional3.get()));
                                } else {
                                    optional = Optional.empty();
                                }
                                Preconditions.checkNotNullFromProvides(optional);
                                return optional;
                            case 103:
                                Context context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                                ShellInit shellInit = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                                ShellCommandHandler shellCommandHandler = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                                RootTaskDisplayAreaOrganizer rootTaskDisplayAreaOrganizer = (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get();
                                Flags.explicitRefreshRateHints();
                                Optional empty = Optional.empty();
                                Preconditions.checkNotNullFromProvides(empty);
                                return empty;
                            case 104:
                                return new PipMotionHelper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTaskOrganizerProvider.get(), (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get(), (PipSnapAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSnapAlgorithmProvider.get(), (PipTransitionController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionControllerProvider.get(), (FloatingContentCoordinator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFloatingContentCoordinatorProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPerfHintControllerProvider.get());
                            case 105:
                                return new TabletopModeController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (DevicePostureController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDevicePostureControllerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                            case 106:
                                return new DevicePostureController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get());
                            case 107:
                                Optional map = ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda0(1));
                                Preconditions.checkNotNullFromProvides(map);
                                return map;
                            case 108:
                                Optional map2 = Optional.of((BubbleController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda0(7));
                                Preconditions.checkNotNullFromProvides(map2);
                                return map2;
                            case 109:
                                Optional of = Optional.of(((TaskViewFactoryController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTaskViewFactoryControllerProvider.get()).mImpl);
                                Preconditions.checkNotNullFromProvides(of);
                                return of;
                            case 110:
                                return new TaskViewFactoryController((ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (TaskViewTransitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTaskViewTransitionsProvider.get());
                            case 111:
                                Transitions.ShellTransitionImpl shellTransitionImpl = ((Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get()).mImpl;
                                Preconditions.checkNotNullFromProvides(shellTransitionImpl);
                                return shellTransitionImpl;
                            case 112:
                                KeyguardTransitionHandler keyguardTransitionHandler = (KeyguardTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideKeyguardTransitionHandlerProvider.get();
                                keyguardTransitionHandler.getClass();
                                keyguardTransitionsImpl = new KeyguardTransitionHandler.KeyguardTransitionsImpl();
                                break;
                            case 113:
                                Optional of2 = Optional.of(((StartingWindowController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideStartingWindowControllerProvider.get()).mImpl);
                                Preconditions.checkNotNullFromProvides(of2);
                                return of2;
                            case 114:
                                Optional of3 = Optional.of(new DisplayAreaHelperController((ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (RootDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootDisplayAreaOrganizerProvider.get()));
                                Preconditions.checkNotNullFromProvides(of3);
                                return of3;
                            case 115:
                                return new RootDisplayAreaOrganizer((ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get());
                            case 116:
                                Optional map3 = ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda0(0));
                                Preconditions.checkNotNullFromProvides(map3);
                                return map3;
                            case 117:
                                Optional map4 = ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda0(2));
                                Preconditions.checkNotNullFromProvides(map4);
                                return map4;
                            case 118:
                                Context context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                                ShellInit shellInit2 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                                ShellController shellController = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                                ShellExecutor shellExecutor2 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                                Handler handler = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundHandlerProvider.get();
                                BackAnimationBackground backAnimationBackground = (BackAnimationBackground) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationBackgroundProvider.get();
                                DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2 = daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                                CrossActivityBackAnimation crossActivityBackAnimation = new CrossActivityBackAnimation(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context, (BackAnimationBackground) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationBackgroundProvider.get());
                                Context context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl2.context;
                                Optional of4 = Optional.of(new ShellBackAnimationRegistry(crossActivityBackAnimation, new CrossTaskBackAnimation(context3, (BackAnimationBackground) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationBackgroundProvider.get()), new CustomizeActivityAnimation(context3, (BackAnimationBackground) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBackAnimationBackgroundProvider.get())));
                                ShellCommandHandler shellCommandHandler2 = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                                if (BackAnimationController.IS_ENABLED) {
                                    optional2 = of4.map(new WMShellBaseModule$$ExternalSyntheticLambda5(shellInit2, shellController, shellExecutor2, handler, context2, backAnimationBackground, shellCommandHandler2));
                                } else {
                                    optional2 = Optional.empty();
                                }
                                Preconditions.checkNotNullFromProvides(optional2);
                                return optional2;
                            case 119:
                                keyguardTransitionsImpl = new BackAnimationBackground((RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get());
                                break;
                            case 120:
                                Optional map5 = ((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesDesktopTasksControllerProvider.get()).map(new WMShellBaseModule$$ExternalSyntheticLambda0(6));
                                Preconditions.checkNotNullFromProvides(map5);
                                return map5;
                            default:
                                throw new AssertionError(i);
                        }
                        return keyguardTransitionsImpl;
                    }
                    throw new AssertionError(i);
                case 1:
                    int i3 = this.id;
                    switch (i3 / 100) {
                        case 0:
                            return get0$1();
                        case 1:
                            return get1$1();
                        case 2:
                            return get2();
                        case 3:
                            return get3();
                        case 4:
                            return get4();
                        case 5:
                            return get5();
                        case 6:
                            return get6();
                        case ViewNode.WIDTH_FIELD_NUMBER:
                            return get7();
                        case 8:
                            return get8();
                        case ViewNode.SCROLLX_FIELD_NUMBER:
                            return get9();
                        case ViewNode.SCROLLY_FIELD_NUMBER:
                            return get10();
                        case ViewNode.TRANSLATIONX_FIELD_NUMBER:
                            return get11();
                        case ViewNode.TRANSLATIONY_FIELD_NUMBER:
                            return get12();
                        case ViewNode.SCALEX_FIELD_NUMBER:
                            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3 = this.sysUIGoogleGlobalRootComponentImpl;
                            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
                            switch (i3) {
                                case 1300:
                                    return new WorkTileAutoAddable((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (WorkTileRestoreProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.workTileRestoreProcessorProvider.get());
                                case 1301:
                                    return new WorkTileRestoreProcessor();
                                case 1302:
                                    return new ReverseChargingAutoAddable((BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get());
                                case 1303:
                                    return new AutoAddSettingRepository((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider41.get());
                                case 1304:
                                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34 = new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34(this);
                                    break;
                                case 1305:
                                    return new RestoreReconciliationInteractor((TileSpecSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tileSpecSettingsRepositoryProvider.get(), (AutoAddSettingRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.autoAddSettingRepositoryProvider.get(), (QSSettingsRestoredRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSSettingsRestoredBroadcastRepositoryProvider.get(), Collections.singleton((RestoreProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.workTileRestoreProcessorProvider.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1624$$Nest$mqSPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                                case 1306:
                                    return new QSSettingsRestoredBroadcastRepository((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1624$$Nest$mqSPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                                case 1307:
                                    return new SceneContainerStartable((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.applicationScopeProvider.get(), (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get(), (DeviceEntryInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider.get(), (BouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get(), (SysUiState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context.getDisplayId(), new SceneLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSceneFrameworkLogBufferProvider.get()), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.simBouncerInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (DeviceProvisioningInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceProvisioningInteractorProvider.get(), (CentralSurfaces) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.centralSurfacesGoogleProvider.get(), new HeadsUpNotificationInteractor(new HeadsUpNotificationRepositoryImpl((HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get())));
                                case 1308:
                                    Context context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context;
                                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                                    NextClockAlarmController nextClockAlarmController = new NextClockAlarmController((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.dumpManagerProvider.get(), new AlarmAppSearchController((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideMainExecutorProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get()), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideMainExecutorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.applicationScopeProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                                    KeyguardZenAlarmViewController keyguardZenAlarmViewController = new KeyguardZenAlarmViewController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.context, (BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDateSmartspaceDataPluginProvider.get(), (ZenModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeControllerImplProvider.get(), (AlarmManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideAlarmManagerProvider.get(), nextClockAlarmController, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideMainHandlerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.applicationScopeProvider.get());
                                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get();
                                    return new KeyguardSmartspaceStartable(keyguardZenAlarmViewController, new KeyguardMediaViewController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBcSmartspaceDataPluginProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl4.provideMainDelayableExecutorProvider.get(), (NotificationMediaManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider.get()), new InitializationChecker(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.instrumentationTest.booleanValue()));
                                case 1309:
                                    return new UnfoldInitializationStartable((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUIUnfoldComponentProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.providesFoldStateLoggingProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.providesFoldStateLoggerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.unfoldBgTransitionProgressProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.unfoldTransitionProgressProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideProgressForwarderProvider.get());
                                case 1310:
                                    return new UnfoldTraceLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context, new FoldStateRepositoryImpl((DeviceFoldStateProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideFoldStateProvider.get()), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.applicationScopeProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (DeviceStateRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.deviceStateRepositoryImplProvider.get());
                                case 1311:
                                    return new NotificationChannels(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context);
                                case 1312:
                                    return new KeyguardRemotePreviewManager((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$35) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardPreviewRendererFactoryProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.mainDispatcherProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                                case 1313:
                                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34 = new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$35(this);
                                    break;
                                case 1314:
                                    return new RetailModeInteractorImpl((RetailModeSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.retailModeSettingsRepositoryProvider.get());
                                case 1315:
                                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(20, "UnseenNotifLog", false);
                                case 1316:
                                    return new DebugModeFilterProvider((CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.dumpManagerProvider.get());
                                case 1317:
                                    GroupMembershipManagerImpl groupMembershipManagerImpl = (GroupMembershipManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider.get();
                                    return new NotifUiAdjustmentProvider((Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainHandlerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (SectionStyleProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionStyleProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                                case 1318:
                                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34 = new RemoteInputNotificationRebuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context);
                                    break;
                                case 1319:
                                    return new NotificationSettingsController((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainHandlerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.dumpManagerProvider.get());
                                case 1320:
                                    Context context5 = (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideApplicationContextProvider.get();
                                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                                    return new Object();
                                case 1321:
                                    return new BigPictureStatsManager((LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideLatencyTrackerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.mainDispatcherProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.dumpManagerProvider.get());
                                case 1322:
                                    return new UserSwitchDialogController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.adapterProvider, (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideUiEventLoggerProvider.get(), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get());
                                case 1323:
                                    return new KeyguardStatusBarViewModel((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.applicationScopeProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (KeyguardStatusBarInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStatusBarInteractorProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get());
                                case 1324:
                                    return new KeyguardStatusBarInteractor((KeyguardStatusBarRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStatusBarRepositoryImplProvider.get());
                                case 1325:
                                    return new KeyguardStatusBarRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context, (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (UserSwitcherRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherRepositoryImplProvider.get());
                                case 1326:
                                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "NavBarButtonClick", true);
                                case 1327:
                                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(50, "NavbarOrientationTrackingLog", true);
                                case 1328:
                                    Object obj = new Object();
                                    Flow flow = ((KeyboardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardRepositoryImplProvider.get()).isAnyKeyboardConnected;
                                    return obj;
                                case 1329:
                                    return new FaceAuthAccessibilityDelegate(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get());
                                case 1330:
                                    return new CustomTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context, (IUriGrantsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideIUriGrantsManagerProvider.get());
                                case 1331:
                                    SliceViewManagerWrapper sliceViewManagerWrapper = new SliceViewManagerWrapper((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideApplicationContextProvider.get());
                                    SwitchingProvider switchingProvider = ((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$36) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider42.get()).this$0;
                                    return new AncSliceRepositoryImpl(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1545$$Nest$mlocalMediaRepositoryFactoryImpl((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) switchingProvider.wMComponentImpl), (CoroutineContext) ((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) switchingProvider.wMComponentImpl).bgCoroutineContextProvider.get(), sliceViewManagerWrapper);
                                case 1332:
                                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34 = new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$36(this);
                                    break;
                                case 1333:
                                    return new LocalMediaInteractor((LocalMediaRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalMediaRepositoryProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.applicationScopeProvider.get());
                                case 1334:
                                    return DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1545$$Nest$mlocalMediaRepositoryFactoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl).create((String) null);
                                case 1335:
                                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34 = new NotificationsSoundPolicyInteractor((NotificationsSoundPolicyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationsSoundPolicyRepositoryProvider.get());
                                    break;
                                case 1336:
                                    return new NotificationsSoundPolicyRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.context, (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideNotificationManagerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.applicationScopeProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get());
                                case 1337:
                                    return new MediaControllerRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.audioManagerEventsReceiver(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m977$$Nest$mmediaSessionManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3), (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.applicationScopeProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get());
                                case 1338:
                                    Optional empty2 = Optional.empty();
                                    Preconditions.checkNotNullFromProvides(empty2);
                                    return empty2;
                                case 1339:
                                    return new DreamOverlayStatusBarItemsProvider((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainExecutorProvider.get());
                                case 1340:
                                    return new DreamOverlayViewModel((ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), (DreamingToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToGlanceableHubTransitionViewModelProvider.get(), (GlanceableHubToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubToDreamingTransitionViewModelProvider.get(), (DreamingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider.get());
                                case 1341:
                                    return new DreamingToGlanceableHubTransitionViewModel((ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                                case 1342:
                                    return new GlanceableHubToDreamingTransitionViewModel((ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                                case 1343:
                                    return new BouncerlessScrimController((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.provideMainExecutorProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl3.providePowerManagerProvider.get());
                                default:
                                    throw new AssertionError(i3);
                            }
                            return daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$34;
                        default:
                            throw new AssertionError(i3);
                    }
                default:
                    int i4 = this.id;
                    if (i4 == 0) {
                        ConstraintLayout constraintLayout = (ConstraintLayout) com.android.internal.util.Preconditions.checkNotNull((ConstraintLayout) ((LayoutInflater) this.sysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get()).inflate(2131558588, (ViewGroup) null), "R.layout.dream_overlay_complications_layer did not properly inflated");
                        Preconditions.checkNotNullFromProvides(constraintLayout);
                        return constraintLayout;
                    } else if (i4 == 1) {
                        DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusViewComponentImpl daggerSysUIGoogleGlobalRootComponent$KeyguardStatusViewComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusViewComponentImpl) this.wMComponentImpl;
                        DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5 = daggerSysUIGoogleGlobalRootComponent$KeyguardStatusViewComponentImpl.sysUIGoogleGlobalRootComponentImpl;
                        int dimensionPixelSize = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5).getDimensionPixelSize(2131165873);
                        int dimensionPixelSize2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5).getDimensionPixelSize(2131165881);
                        int dimensionPixelSize3 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5).getDimensionPixelSize(2131165882);
                        int dimensionPixelSize4 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5).getDimensionPixelSize(2131165880);
                        int dimensionPixelSize5 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5).getDimensionPixelSize(2131165879);
                        TouchInsetManager touchInsetManager = (TouchInsetManager) daggerSysUIGoogleGlobalRootComponent$KeyguardStatusViewComponentImpl.presentation;
                        return new ComplicationLayoutEngine((ConstraintLayout) ((Provider) daggerSysUIGoogleGlobalRootComponent$KeyguardStatusViewComponentImpl.keyguardSliceViewControllerProvider).get(), dimensionPixelSize, dimensionPixelSize2, dimensionPixelSize3, dimensionPixelSize4, dimensionPixelSize5, new TouchInsetManager.TouchInsetSession(touchInsetManager, touchInsetManager.mExecutor), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5).getInteger(2131427345), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl5).getInteger(2131427347));
                    } else {
                        throw new AssertionError(i4);
                    }
            }
        }

        /* JADX WARNING: type inference failed for: r72v0, types: [java.lang.Object, com.android.systemui.biometrics.UdfpsUtils] */
        public Object get0$1() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 0:
                    return new BootCompleteCacheImpl((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 1:
                    return new ConfigurationControllerImpl((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get());
                case 2:
                    return ContextComponentResolver_Factory.newInstance(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1556$$Nest$mmapOfClassOfAndProviderOfActivity(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1559$$Nest$mmapOfClassOfAndProviderOfService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1558$$Nest$mmapOfClassOfAndProviderOfRecentsImplementation(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1557$$Nest$mmapOfClassOfAndProviderOfBroadcastReceiver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 3:
                    return new ControlsProviderSelectorActivity((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (ControlsListingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsListingControllerImplProvider.get(), (ControlsControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsControllerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1451$$Nest$mauthorizedPanelsRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1613$$Nest$mpanelConfirmationDialogFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 4:
                    return SysUIConcurrencyModule_ProvideBackgroundExecutorFactory.provideBackgroundExecutor((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get());
                case 5:
                    return SysUIConcurrencyModule_ProvideBgLooperFactory.provideBgLooper();
                case 6:
                    return new ControlsListingControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ActivityTaskManagerProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityTaskManagerProxyProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case ViewNode.WIDTH_FIELD_NUMBER:
                    return MultiUserUtilsModule_ProvideUserTrackerFactory.provideUserTracker(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider, (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                case 8:
                    FlagsCommonModule_ProvidesAllFlagsFactory.providesAllFlags();
                    return new FeatureFlagsClassicRelease(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (SystemPropertiesHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.systemPropertiesHelperProvider.get(), (ServerFlagReaderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindsReaderProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1477$$Nest$mconditionalRestarter(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case ViewNode.SCROLLX_FIELD_NUMBER:
                    Executor executor = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get();
                    return ServerFlagReaderModule_BindsReaderFactory.bindsReader((DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIsTestHarnessProvider.get()).booleanValue());
                case ViewNode.SCROLLY_FIELD_NUMBER:
                    return new DeviceConfigProxy();
                case ViewNode.TRANSLATIONX_FIELD_NUMBER:
                    return new PowerInteractor((PowerRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerRepositoryImplProvider.get(), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorImplProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get());
                case ViewNode.TRANSLATIONY_FIELD_NUMBER:
                    return new PowerRepositoryImpl((PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case ViewNode.SCALEX_FIELD_NUMBER:
                    return new SystemClockImpl();
                case ViewNode.SCALEY_FIELD_NUMBER:
                    return new BroadcastDispatcher(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBroadcastRunningLooperProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBroadcastRunningExecutorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1458$$Nest$mbroadcastDispatcherLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1615$$Nest$mpendingRemovalStore(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 15:
                    return SysUIConcurrencyModule_ProvideBroadcastRunningLooperFactory.provideBroadcastRunningLooper();
                case ViewNode.WILLNOTDRAW_FIELD_NUMBER:
                    return SysUIConcurrencyModule_ProvideBroadcastRunningExecutorFactory.provideBroadcastRunningExecutor((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBroadcastRunningLooperProvider.get());
                case ViewNode.CLIPCHILDREN_FIELD_NUMBER:
                    return LogModule_ProvideBroadcastDispatcherLogBufferFactory.provideBroadcastDispatcherLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case ViewNode.VISIBILITY_FIELD_NUMBER:
                    return new LogBufferFactory((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (LogcatEchoTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLogcatEchoTrackerProvider.get());
                case ViewNode.ELEVATION_FIELD_NUMBER:
                    return LogModule_ProvideLogcatEchoTrackerFactory.provideLogcatEchoTracker(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logcatEchoTrackerDebugProvider));
                case 20:
                    return new LogcatEchoTrackerDebug((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get());
                case 21:
                    return SysUICoroutinesModule_BgDispatcherFactory.bgDispatcher(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUICoroutinesModule);
                case 22:
                    return new CommandRegistry(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 23:
                    return FalsingCollectorImpl_Factory.newInstance((FalsingDataProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingDataProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (HistoryTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.historyTrackerProvider.get(), (ProximitySensor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideProximitySensorProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider));
                case 24:
                    return new FalsingDataProvider(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m975$$Nest$mdisplayMetrics(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (DeviceStateManager.FoldStateListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFoldStateListenerProvider.get(), (DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1572$$Nest$mnamedBoolean4(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 25:
                    return GooglePolicyModule_ProvideBatteryControllerFactory.provideBatteryController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (EnhancedEstimates) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.enhancedEstimatesGoogleImplProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DemoModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (BatteryControllerLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.batteryControllerLoggerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ReverseChargingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reverseChargingControllerProvider.get());
                case 26:
                    return new EnhancedEstimatesGoogleImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 27:
                    return DemoModeModule_ProvideDemoModeControllerFactory.provideDemoModeController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 28:
                    return new BatteryControllerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerLogProvider.get());
                case 29:
                    return StatusBarPolicyModule_ProvideBatteryControllerLogFactory.provideBatteryControllerLog((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 30:
                    return SysUIConcurrencyModule_ProvideBgHandlerFactory.provideBgHandler((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get());
                case 31:
                    return new ReverseChargingController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideReverseWirelessChargerProvider.get(), (AlarmManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUsbManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (BootCompleteCacheImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bootCompleteCacheImplProvider.get(), (IThermalService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIThermalServiceProvider.get());
                case 32:
                    return SystemUIGoogleModule_ProvideReverseWirelessChargerFactory.provideReverseWirelessCharger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 33:
                    return SystemUIGoogleModule_ProvideUsbManagerFactory.provideUsbManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 34:
                    return SystemUIGoogleModule_ProvideIThermalServiceFactory.provideIThermalService();
                case 35:
                    return new DockObserver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWirelessChargerProvider.get(), (WirelessChargerCommander) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wirelessChargerCommanderProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVisualInterruptionDecisionProvider), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (DockAlignmentController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockAlignmentControllerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 36:
                    return SystemUIGoogleModule_ProvideWirelessChargerFactory.provideWirelessCharger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 37:
                    return new WirelessChargerCommander((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWirelessChargerProvider.get());
                case 38:
                    return new StatusBarStateControllerImpl((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceUnlockedInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider));
                case 39:
                    return new JavaAdapter((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 40:
                    return new ShadeInteractorImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (DeviceProvisioningInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceProvisioningInteractorProvider.get(), (DisableFlagsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disableFlagsRepositoryImplProvider.get(), (DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get(), (KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (UserSetupRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSetupRepositoryImplProvider.get(), (UserSwitcherInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider.get(), (BaseShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBaseShadeInteractorProvider.get());
                case 41:
                    return new DeviceProvisioningInteractor(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1497$$Nest$mdeviceProvisioningRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 42:
                    DeviceProvisionedControllerImpl deviceProvisionedControllerImpl = (DeviceProvisionedControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceProvisionedControllerImplProvider.get();
                    SystemUIGoogleModule_ProvideDeviceProvisionedControllerFactory.provideDeviceProvisionedController(deviceProvisionedControllerImpl);
                    return deviceProvisionedControllerImpl;
                case 43:
                    return new DeviceProvisionedControllerImpl((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (BuildInfo) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.buildInfoProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 44:
                    return SecureSettingsImpl_Factory.newInstance((ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 45:
                    return new DisableFlagsRepositoryImpl((CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m974$$Nest$mdisplayIdInteger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (RemoteInputQuickSettingsDisabler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputQuickSettingsDisablerProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisableFlagsRepositoryLogBufferProvider.get(), (DisableFlagsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disableFlagsLoggerProvider.get());
                case 46:
                    Context unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return CentralSurfacesDependenciesModule_ProvideCommandQueueFactory.provideCommandQueue((DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1505$$Nest$mdumpHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider));
                case 47:
                    return MultiUserUtilsModule_ProvideDisplayTrackerFactory.provideDisplayTracker((DisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                case 48:
                    return new LogBufferEulogizer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (Files) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.filesProvider.get());
                case 49:
                    return new Files();
                case 50:
                    return new SystemUIConfigDumpable((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.getStartables());
                case 51:
                    return new RemoteInputQuickSettingsDisabler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get());
                case 52:
                    return new SplitShadeStateControllerImpl((FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 53:
                    return LogModule_ProvideDisableFlagsRepositoryLogBufferFactory.provideDisableFlagsRepositoryLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 54:
                    return new DisableFlagsLogger();
                case 55:
                    return DozeParameters_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m972$$Nest$mambientDisplayConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (AlwaysOnDisplayPolicy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alwaysOnDisplayPolicyProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUIUnfoldComponentProvider.get(), (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DozeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeInteractorProvider.get());
                case 56:
                    return new AlwaysOnDisplayPolicy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 57:
                    return new TunerServiceImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (LeakDetector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLeakDetectorProvider.get(), (DemoModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6));
                case 58:
                    TrackedCollections_Factory.newInstance();
                    return LeakModule_ProvidesLeakDetectorFactory.providesLeakDetector(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.leakModule, (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 59:
                    return new SystemUIDialog.Factory((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (SystemUIDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDialogManagerProvider.get(), (SysUiState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get());
                case 60:
                    return new SystemUIDialogManager((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get());
                case 61:
                    Context unused2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    KeyguardViewMediator.AnonymousClass4 r4 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1697$$Nest$mviewMediatorCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    LockPatternUtils lockPatternUtils = (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get();
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get();
                    return new StatusBarKeyguardViewManager(r4, (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (DreamOverlayStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayStateControllerProvider.get(), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get(), (DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1541$$Nest$mkeyguardMessageAreaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUIUnfoldComponentProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider), (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get(), (KeyguardSecurityModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSecurityModelProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (PrimaryBouncerCallbackInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerCallbackInteractorProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (BouncerViewImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerViewImplProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (UdfpsOverlayInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissActionInteractorProvider), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindInteractorProvider), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get());
                case 62:
                    FalsingCollector falsingCollector = (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider.get();
                    LockPatternUtils lockPatternUtils2 = (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get();
                    BroadcastDispatcher broadcastDispatcher = (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get();
                    Lazy lazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider);
                    DismissCallbackRegistry dismissCallbackRegistry = (DismissCallbackRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissCallbackRegistryProvider.get();
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get();
                    DumpManager dumpManager = (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get();
                    PowerManager powerManager = (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get();
                    TrustManager trustManager = (TrustManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider.get();
                    DeviceConfigProxy deviceConfigProxy = (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get();
                    NavigationModeController navigationModeController = (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get();
                    KeyguardDisplayManager keyguardDisplayManager = (KeyguardDisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDisplayManagerProvider.get();
                    DozeParameters dozeParameters = (DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get();
                    SysuiStatusBarStateController sysuiStatusBarStateController = (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get();
                    KeyguardStateController keyguardStateController = (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get();
                    Lazy lazy2 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider);
                    ScreenOffAnimationController screenOffAnimationController = (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get();
                    Lazy lazy3 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider);
                    ScreenOnCoordinator screenOnCoordinator = (ScreenOnCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOnCoordinatorProvider.get();
                    KeyguardTransitions r44 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setKeyguardTransitions;
                    InteractionJankMonitor interactionJankMonitor = (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get();
                    DreamOverlayStateController dreamOverlayStateController = (DreamOverlayStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayStateControllerProvider.get();
                    JavaAdapter javaAdapter = (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get();
                    WallpaperRepositoryImpl wallpaperRepositoryImpl = (WallpaperRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wallpaperRepositoryImplProvider.get();
                    Lazy lazy4 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider);
                    Lazy lazy5 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider);
                    Lazy lazy6 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider);
                    Lazy lazy7 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider);
                    IActivityTaskManager iActivityTaskManager = (IActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider.get();
                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    SecureSettings secureSettings = (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get();
                    SystemSettingsImpl r41 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1690$$Nest$msystemSettingsImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SystemClock systemClock = (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get();
                    Lazy lazy8 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider);
                    SystemPropertiesHelper systemPropertiesHelper = (SystemPropertiesHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.systemPropertiesHelperProvider.get();
                    Lazy lazy9 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityManagerProvider);
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get();
                    return KeyguardModule_NewKeyguardViewMediatorFactory.newKeyguardViewMediator(iActivityTaskManager, trustManager, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, powerManager, interactionJankMonitor, (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), lockPatternUtils2, keyguardDisplayManager, keyguardUpdateMonitor, broadcastDispatcher, falsingCollector, dreamOverlayStateController, dumpManager, systemPropertiesHelper, dismissCallbackRegistry, (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (SessionTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider.get(), navigationModeController, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), sysuiStatusBarStateController, dozeParameters, screenOffAnimationController, keyguardStateController, (UserSwitcherController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherControllerProvider.get(), selectedUserInteractor, deviceConfigProxy, javaAdapter, secureSettings, r41, systemClock, wallpaperRepositoryImpl, r44, lazy, lazy2, lazy3, lazy4, lazy5, lazy6, lazy7, lazy8, lazy9, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get());
                case 63:
                    return new SessionTracker((IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 64:
                    DelegateFactory delegateFactory = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsControllerProvider;
                    Provider provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsControllerProvider;
                    Lazy lazy10 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsLoggerProvider);
                    Lazy lazy11 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logContextInteractorImplProvider);
                    SwitchingProvider switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.promptCredentialInteractorProvider;
                    return new AuthController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideExecutionProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (ActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityTaskManagerProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (FingerprintManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider.get(), (FaceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFaceManagerProvider.get(), delegateFactory, provider, (DisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1450$$Nest$mauthDialogPanelInteractionDetector(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get(), lazy10, lazy11, switchingProvider, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.promptSelectorInteractorImplProvider, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.credentialViewModelProvider, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.promptViewModelProvider, (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider.get(), new Object(), (VibratorHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider.get());
                case 65:
                    Executor executor2 = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesPluginExecutorProvider.get();
                    return new UdfpsController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideExecutionProvider.get(), (LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get(), (FingerprintManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get(), (ScreenLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.screenLifecycleProvider.get(), (VibratorHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider.get(), (UdfpsHapticsSimulator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsHapticsSimulatorProvider.get(), (UdfpsShell) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsShellProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (DisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get(), (SystemUIDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDialogManagerProvider.get(), (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get(), (ActivityTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (SinglePointerTouchProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.singlePointerTouchProcessorProvider.get(), (SessionTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (InputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get(), (UdfpsKeyguardAccessibilityDelegate) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsKeyguardAccessibilityDelegateProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), (FpsUnlockTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fpsUnlockTrackerProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsTouchOverlayViewModelProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.defaultUdfpsTouchOverlayViewModelProvider), (UdfpsOverlayInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 66:
                    LatencyTracker latencyTracker = (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get();
                    return KeyguardUpdateMonitor_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get(), (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), (TelephonyListenerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider.get(), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), latencyTracker, (ActiveUnlockConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeUnlockConfigProvider.get(), new KeyguardUpdateMonitorLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyguardUpdateMonitorLogBufferProvider.get()), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider, (TrustManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider.get(), (SubscriptionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSubscriptionManagerProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (IDreamManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider.get(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (SensorPrivacyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSensorPrivacyManagerProvider.get(), (TelephonyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (FingerprintManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider.get(), (BiometricManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesBiometricManagerProvider.get(), (FaceWakeUpTriggersConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceWakeUpTriggersConfigImplProvider.get(), (com.android.systemui.statusbar.policy.DevicePostureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureControllerImplProvider.get(), Optional.of((FingerprintInteractiveToAuthProviderGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFingerprintInteractiveToAuthProvider.get()), (TaskStackChangeListeners) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideTaskStackChangeListenersProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), (IActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider.get());
                case 67:
                    return TelephonyListenerManager_Factory.newInstance((TelephonyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), TelephonyCallback_Factory.newInstance());
                case 68:
                    return new ActiveUnlockConfig((Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 69:
                    return new SelectedUserInteractor((UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get());
                case 70:
                    return new UserRepositoryImpl((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 71:
                    return LogModule_ProvideKeyguardUpdateMonitorLogBufferFactory.provideKeyguardUpdateMonitorLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 72:
                    return new FaceWakeUpTriggersConfigImpl(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 73:
                    return new DevicePostureControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DeviceStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDeviceStateManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 74:
                    return SystemUIGoogleModule_ProvideFingerprintInteractiveToAuthProviderFactory.provideFingerprintInteractiveToAuthProvider((CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 75:
                    return SharedLibraryModule_ProvideTaskStackChangeListenersFactory.provideTaskStackChangeListeners(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedLibraryModule);
                case 76:
                    return FalsingManagerProxy_Factory.newInstance((PluginManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.brightLineFalsingManagerProvider);
                case 77:
                    return new BrightLineFalsingManager((FalsingDataProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingDataProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1578$$Nest$mnamedSetOfFalsingClassifier(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1667$$Nest$msingleTapClassifier(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1553$$Nest$mlongTapClassifier(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1501$$Nest$mdoubleTapClassifier(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (HistoryTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.historyTrackerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIsTestHarnessProvider.get()).booleanValue(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 78:
                    return HistoryTracker_Factory.newInstance((SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get());
                case 79:
                    return new KeyguardStateControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider), new KeyguardUpdateMonitorLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyguardUpdateMonitorLogBufferProvider.get()), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 80:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m978$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    return new KeyguardUnlockAnimationController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get());
                case 81:
                    NotificationMediaManager notificationMediaManager = (NotificationMediaManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider.get();
                    return new BiometricUnlockController((DozeScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeScrimControllerProvider.get(), (KeyguardViewMediator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), new Handler(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (BiometricUnlockLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockLoggerProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (SessionTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider.get(), (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get(), (VibratorHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider), (BiometricUnlockInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockInteractorProvider.get());
                case 82:
                    return new DozeScrimController((DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get(), (DozeLog) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeLogProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get());
                case 83:
                    return new DozeLog((KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), new DozeLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDozeLogBufferProvider.get()));
                case 84:
                    return LogModule_ProvideDozeLogBufferFactory.provideDozeLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 85:
                    return new NotificationShadeWindowControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, new DaggerSysUIGoogleGlobalRootComponent$InputSessionComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get(), (DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (KeyguardViewMediator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (SysuiColorExtractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysuiColorExtractorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get(), (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1664$$Nest$mshadeWindowLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider));
                case 86:
                    return new KeyguardBypassController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (ShadeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider.get(), (com.android.systemui.statusbar.policy.DevicePostureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureControllerImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 87:
                    FeatureFlagsClassic featureFlagsClassic = (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    return new NotificationLockscreenUserManagerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider), (NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider), (KeyguardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get());
                case 88:
                    return new NotificationVisibilityProviderImpl((ActiveNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider.get(), (NotifLiveDataStoreImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifLiveDataStoreImplProvider.get(), (CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get());
                case 89:
                    return new ActiveNotificationsInteractor((ActiveNotificationListRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationListRepositoryProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 90:
                    return new ActiveNotificationListRepository();
                case 91:
                    return new NotifLiveDataStoreImpl((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 92:
                    return new NotifPipeline((NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get(), (ShadeListBuilder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeListBuilderProvider.get(), (RenderStageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.renderStageManagerProvider.get());
                case 93:
                    NotifPipelineFlags unused3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    return new NotifCollection((IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1596$$Nest$mnotifCollectionLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (LogBufferEulogizer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferEulogizerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (NotificationDismissibilityProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationDismissibilityProviderImplProvider.get());
                case 94:
                    NotifPipelineFlags unused4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    return LogModule_ProvideNotificationsLogBufferFactory.provideNotificationsLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 95:
                    return new NotificationDismissibilityProviderImpl((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 96:
                    return new ShadeListBuilder((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (NotifPipelineChoreographerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineChoreographerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags(), (NotificationInteractionTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationInteractionTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1662$$Nest$mshadeListBuilderLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get());
                case 97:
                    return new NotifPipelineChoreographerImpl((Choreographer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesChoreographerProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get());
                case 98:
                    return new NotificationInteractionTracker((NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get());
                case 99:
                    return new NotificationClickNotifier((IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get0$2() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl daggerSysUIGoogleGlobalRootComponent$WMComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 0:
                    daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIndependentShellComponentsToCreateProvider2.get();
                    return WMShellBaseModule_ProvideShellSysuiCallbacksFactory.provideShellSysuiCallbacks((ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get());
                case 1:
                    DisplayController displayController = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                    DisplayImeController displayImeController = (DisplayImeController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayImeControllerProvider.get();
                    DisplayInsetsController displayInsetsController = (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get();
                    ShellTaskOrganizer shellTaskOrganizer = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                    Optional.of((BubbleController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleControllerProvider.get());
                    Optional optional = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider.get();
                    FullscreenTaskListener fullscreenTaskListener = (FullscreenTaskListener) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFullscreenTaskListenerProvider.get();
                    Optional optional2 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldControllerProvider.get();
                    Optional optional3 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldTransitionHandlerProvider2.get();
                    Optional optional4 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFreeformComponentsProvider2.get();
                    Optional optional5 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get();
                    Optional.of((RecentsTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentsTransitionHandlerProvider.get());
                    Optional optional6 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesOneHandedControllerProvider.get();
                    Optional optional7 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideHideDisplayCutoutControllerProvider.get();
                    Optional optional8 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideActivityEmbeddingControllerProvider.get();
                    Transitions transitions = (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get();
                    StartingWindowController startingWindowController = (StartingWindowController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideStartingWindowControllerProvider.get();
                    ProtoLogController protoLogController = (ProtoLogController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideProtoLogControllerProvider.get();
                    Optional.of(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIndependentShellComponentsToCreateProvider.get());
                    return WMShellBaseModule_ProvideIndependentShellComponentsToCreateFactory.provideIndependentShellComponentsToCreate();
                case 2:
                    return WMShellBaseModule_ProvideDisplayControllerFactory.provideDisplayController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 3:
                    ShellExecutor shellExecutor = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    return WMShellBaseModule_ProvideShellInitFactory.provideShellInit();
                case 4:
                    return WMShellConcurrencyModule_ProvideShellMainExecutorFactory.provideShellMainExecutor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSysUIMainExecutorProvider.get());
                case 5:
                    return WMShellConcurrencyModule_ProvideShellMainHandlerFactory.provideShellMainHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.setShellMainThread, new Handler(Looper.getMainLooper()));
                case 6:
                    return WMShellConcurrencyModule_ProvideSysUIMainExecutorFactory.provideSysUIMainExecutor(new Handler(Looper.getMainLooper()));
                case ViewNode.WIDTH_FIELD_NUMBER:
                    ShellExecutor shellExecutor2 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    return WMShellBaseModule_ProvideDisplayImeControllerFactory.provideDisplayImeController((IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get(), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get());
                case 8:
                    return WMShellBaseModule_ProvideDisplayInsetsControllerFactory.provideDisplayInsetsController((IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case ViewNode.SCROLLX_FIELD_NUMBER:
                    return WMShellBaseModule_ProvideTransactionPoolFactory.provideTransactionPool();
                case ViewNode.SCROLLY_FIELD_NUMBER:
                    return WMShellBaseModule_ProvideShellTaskOrganizerFactory.provideShellTaskOrganizer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideCompatUIControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case ViewNode.TRANSLATIONX_FIELD_NUMBER:
                    return WMShellBaseModule_ProvideShellCommandHandlerFactory.provideShellCommandHandler();
                case ViewNode.TRANSLATIONY_FIELD_NUMBER:
                    return WMShellBaseModule_ProvideCompatUIControllerFactory.provideCompatUIController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get(), (DisplayImeController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayImeControllerProvider.get(), (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.dockStateReaderProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.compatUIConfigurationProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.compatUIShellCommandHandlerProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider));
                case ViewNode.SCALEX_FIELD_NUMBER:
                    return WMShellBaseModule_ProvideShellControllerFactory.provideShellController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case ViewNode.SCALEY_FIELD_NUMBER:
                    return WMShellBaseModule_ProvideSyncTransactionQueueFactory.provideSyncTransactionQueue((TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 15:
                    return WMShellBaseModule_ProvideTransitionsFactory.provideTransitions(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellAnimationExecutorProvider.get(), (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get(), (HomeTransitionObserver) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideHomeTransitionObserverProvider.get());
                case ViewNode.WILLNOTDRAW_FIELD_NUMBER:
                    return WMShellConcurrencyModule_ProvideShellAnimationExecutorFactory.provideShellAnimationExecutor();
                case ViewNode.CLIPCHILDREN_FIELD_NUMBER:
                    return WMShellBaseModule_ProvideRootTaskDisplayAreaOrganizerFactory.provideRootTaskDisplayAreaOrganizer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get());
                case ViewNode.VISIBILITY_FIELD_NUMBER:
                    return WMShellBaseModule_ProvideHomeTransitionObserverFactory.provideHomeTransitionObserver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case ViewNode.ELEVATION_FIELD_NUMBER:
                    return new DockStateReader(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 20:
                    return new CompatUIConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 21:
                    return new CompatUIShellCommandHandler((ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (CompatUIConfiguration) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.compatUIConfigurationProvider.get());
                case 22:
                    return WMShellBaseModule_ProvideUnfoldControllerFactory.provideUnfoldController(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.dynamicOverrideOptionalOfUnfoldAnimationControllerProvider), Optional.of((ShellUnfoldProgressProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShellProgressProvider.get()));
                case 23:
                    return Optional.of((UnfoldAnimationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldAnimationControllerProvider.get());
                case 24:
                    return WMShellModule_ProvideUnfoldAnimationControllerFactory.provideUnfoldAnimationController(Optional.of((ShellUnfoldProgressProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShellProgressProvider.get()), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (SplitTaskUnfoldAnimator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSplitTaskUnfoldAnimatorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.m1747$$Nest$mfullscreenUnfoldTaskAnimator(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldTransitionHandlerProvider2), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 25:
                    return WMShellModule_ProvideSplitTaskUnfoldAnimatorBaseFactory.provideSplitTaskUnfoldAnimatorBase(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UnfoldBackgroundController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldBackgroundControllerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider), (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get());
                case 26:
                    return WMShellModule_ProvideUnfoldBackgroundControllerFactory.provideUnfoldBackgroundController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 27:
                    return WMShellBaseModule_ProvidesSplitScreenControllerFactory.providesSplitScreenController(Optional.of((SplitScreenController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSplitScreenControllerProvider.get()), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 28:
                    return WMShellModule_ProvideSplitScreenControllerFactory.provideSplitScreenController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (DisplayImeController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayImeControllerProvider.get(), (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get(), (DragAndDropController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDragAndDropControllerProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (IconProvider) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIconProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get(), (LaunchAdjacentController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideLaunchAdjacentControllerProvider.get(), Optional.of((WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get()), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesDesktopTasksControllerProvider.get(), (MultiInstanceHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideMultiInstanceHelperProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 29:
                    return WMShellModule_ProvideDragAndDropControllerFactory.provideDragAndDropController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (IconProvider) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIconProvider.get(), (GlobalDragListener) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideGlobalDragListenerProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 30:
                    return WMShellBaseModule_ProvideIconProviderFactory.provideIconProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 31:
                    return WMShellModule_ProvideGlobalDragListenerFactory.provideGlobalDragListener((IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 32:
                    return WMShellBaseModule_ProvideRecentTasksControllerFactory.provideRecentTasksController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get(), (ActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityTaskManagerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTaskRepositoryProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 33:
                    return WMShellBaseModule_ProviderTaskStackListenerImplFactory.providerTaskStackListenerImpl((Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                case 34:
                    return WMShellBaseModule_ProvideDesktopTaskRepositoryFactory.provideDesktopTaskRepository(Optional.of(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopModeTaskRepositoryProvider)));
                case 35:
                    return WMShellModule_ProvideDesktopModeTaskRepositoryFactory.provideDesktopModeTaskRepository();
                case 36:
                    return WMShellBaseModule_ProvideLaunchAdjacentControllerFactory.provideLaunchAdjacentController((SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get());
                case 37:
                    Context r0 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellExecutor shellExecutor3 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    ShellInit shellInit = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    IWindowManager iWindowManager = (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get();
                    ShellCommandHandler shellCommandHandler = (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get();
                    ShellController shellController = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                    DisplayInsetsController displayInsetsController2 = (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get();
                    Optional optional9 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesDesktopTasksControllerProvider.get();
                    RootTaskDisplayAreaOrganizer rootTaskDisplayAreaOrganizer = (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get();
                    return WMShellModule_ProvideWindowDecorViewModelFactory.provideWindowDecorViewModel(r0, (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get(), (Choreographer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainChoreographerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get());
                case 38:
                    return WMShellConcurrencyModule_ProvideShellMainChoreographerFactory.provideShellMainChoreographer((ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 39:
                    return WMShellBaseModule_ProvidesDesktopTasksControllerFactory.providesDesktopTasksController(Optional.of(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTasksControllerProvider)));
                case 40:
                    Context r3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellInit shellInit2 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    return WMShellModule_ProvideDesktopTasksControllerFactory.provideDesktopTasksController(r3, (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get(), (DragAndDropController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDragAndDropControllerProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (EnterDesktopTaskTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideEnterDesktopModeTaskTransitionHandlerProvider.get(), (ExitDesktopTaskTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideExitDesktopTaskTransitionHandlerProvider.get(), (ToggleResizeDesktopTaskTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideToggleResizeDesktopTaskTransitionHandlerProvider.get(), (DragToDesktopTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDragToDesktopTransitionHandlerProvider.get(), (DesktopModeTaskRepository) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopModeTaskRepositoryProvider.get(), (LaunchAdjacentController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideLaunchAdjacentControllerProvider.get(), (RecentsTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentsTransitionHandlerProvider.get(), (MultiInstanceHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideMultiInstanceHelperProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 41:
                    return WMShellModule_ProvideEnterDesktopModeTaskTransitionHandlerFactory.provideEnterDesktopModeTaskTransitionHandler((Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get());
                case 42:
                    return WMShellModule_ProvideExitDesktopTaskTransitionHandlerFactory.provideExitDesktopTaskTransitionHandler((Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 43:
                    return WMShellModule_ProvideToggleResizeDesktopTaskTransitionHandlerFactory.provideToggleResizeDesktopTaskTransitionHandler((Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get());
                case 44:
                    return WMShellModule_ProvideDragToDesktopTransitionHandlerFactory.provideDragToDesktopTransitionHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (RootTaskDisplayAreaOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRootTaskDisplayAreaOrganizerProvider.get());
                case 45:
                    return WMShellModule_ProvideRecentsTransitionHandlerFactory.provideRecentsTransitionHandler((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get(), (HomeTransitionObserver) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideHomeTransitionObserverProvider.get());
                case 46:
                    return WMShellBaseModule_ProvideMultiInstanceHelperFactory.provideMultiInstanceHelper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 47:
                    return WMShellBaseModule_ProvideUnfoldTransitionHandlerFactory.provideUnfoldTransitionHandler(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.dynamicOverrideOptionalOfUnfoldTransitionHandlerProvider), Optional.of((ShellUnfoldProgressProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShellProgressProvider.get()));
                case 48:
                    return Optional.of((UnfoldTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldTransitionHandlerProvider.get());
                case 49:
                    return WMShellModule_ProvideUnfoldTransitionHandlerFactory.provideUnfoldTransitionHandler(Optional.of((ShellUnfoldProgressProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShellProgressProvider.get()), DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.m1747$$Nest$mfullscreenUnfoldTaskAnimator(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl), (SplitTaskUnfoldAnimator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellSplitTaskUnfoldAnimatorProvider.get(), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get());
                case 50:
                    return WMShellModule_ProvideBubbleControllerFactory.provideBubbleController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (BubbleData) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleDataProvider.get(), (FloatingContentCoordinator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFloatingContentCoordinatorProvider.get(), (IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (WindowManagerShellWrapper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowManagerShellWrapperProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get(), (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get(), (BubbleLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleLoggerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (BubblePositioner) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubblePositionerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), Optional.of((OneHandedController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideOneHandedControllerProvider.get()), (DragAndDropController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDragAndDropControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundExecutorProvider.get(), (TaskViewTransitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTaskViewTransitionsProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get());
                case 51:
                    return WMShellModule_ProvideBubbleDataFactory.provideBubbleData(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BubbleLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleLoggerProvider.get(), (BubblePositioner) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubblePositionerProvider.get(), (BubbleEducationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideBubbleEducationProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 52:
                    return WMShellModule_ProvideBubbleLoggerFactory.provideBubbleLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 53:
                    return WMShellModule_ProvideBubblePositionerFactory.provideBubblePositioner(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get());
                case 54:
                    return WMShellModule_ProvideBubbleEducationProviderFactory.provideBubbleEducationProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 55:
                    return WMShellBaseModule_ProvideFloatingContentCoordinatorFactory.provideFloatingContentCoordinator();
                case 56:
                    return WMShellBaseModule_ProvideWindowManagerShellWrapperFactory.provideWindowManagerShellWrapper((ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 57:
                    return WMShellModule_ProvideOneHandedControllerFactory.provideOneHandedController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (DisplayLayout) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayLayoutProvider.get(), (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                case 58:
                    return WMShellBaseModule_ProvideDisplayLayoutFactory.provideDisplayLayout();
                case 59:
                    return WMShellConcurrencyModule_ProvideSharedBackgroundExecutorFactory.provideSharedBackgroundExecutor((Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSharedBackgroundHandlerProvider.get());
                case 60:
                    return WMShellConcurrencyModule_ProvideSharedBackgroundHandlerFactory.provideSharedBackgroundHandler();
                case 61:
                    return WMShellBaseModule_ProvideTaskViewTransitionsFactory.provideTaskViewTransitions((Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get());
                case 62:
                    Optional empty = Optional.empty();
                    Optional of = Optional.of((WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get());
                    return WMShellBaseModule_ProvideFullscreenTaskListenerFactory.provideFullscreenTaskListener(empty, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (SyncTransactionQueue) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSyncTransactionQueueProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentTasksControllerProvider.get(), of);
                case 63:
                    return WMShellBaseModule_ProvideFreeformComponentsFactory.provideFreeformComponents(Optional.of((FreeformComponents) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFreeformComponentsProvider.get()), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 64:
                    return WMShellModule_ProvideFreeformComponentsFactory.provideFreeformComponents((FreeformTaskListener) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFreeformTaskListenerProvider.get(), (FreeformTaskTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFreeformTaskTransitionHandlerProvider.get(), (FreeformTaskTransitionObserver) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFreeformTaskTransitionObserverProvider.get());
                case 65:
                    return WMShellModule_ProvideFreeformTaskListenerFactory.provideFreeformTaskListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDesktopTaskRepositoryProvider.get(), (WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get());
                case 66:
                    Context context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new FreeformTaskTransitionHandler((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellAnimationExecutorProvider.get());
                case 67:
                    return new FreeformTaskTransitionObserver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (WindowDecorViewModel) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowDecorViewModelProvider.get());
                case 68:
                    return WMShellBaseModule_ProvidesOneHandedControllerFactory.providesOneHandedController(Optional.of((OneHandedController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideOneHandedControllerProvider.get()));
                case 69:
                    return WMShellBaseModule_ProvideHideDisplayCutoutControllerFactory.provideHideDisplayCutoutController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 70:
                    return WMShellBaseModule_ProvideActivityEmbeddingControllerFactory.provideActivityEmbeddingController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get());
                case 71:
                    return new StartingWindowController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSplashScreenExecutorProvider.get(), (PhoneStartingWindowTypeAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideStartingWindowTypeAlgorithmProvider.get(), (IconProvider) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideIconProvider.get(), (TransactionPool) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransactionPoolProvider.get());
                case 72:
                    return WMShellConcurrencyModule_ProvideSplashScreenExecutorFactory.provideSplashScreenExecutor();
                case 73:
                    return WMShellBaseModule_ProvideStartingWindowTypeAlgorithmFactory.provideStartingWindowTypeAlgorithm(Optional.empty());
                case 74:
                    return new ProtoLogController((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get());
                case 75:
                    DragAndDropController dragAndDropController = (DragAndDropController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDragAndDropControllerProvider.get();
                    DefaultMixedHandler defaultMixedHandler = (DefaultMixedHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDefaultMixedHandlerProvider.get();
                    return new Object();
                case 76:
                    return new DefaultMixedHandler((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider.get(), (PipTransitionController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionControllerProvider.get(), Optional.of((RecentsTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideRecentsTransitionHandlerProvider.get()), (KeyguardTransitionHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideKeyguardTransitionHandlerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesDesktopTasksControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldTransitionHandlerProvider2.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideActivityEmbeddingControllerProvider.get());
                case 77:
                    PipTransition pipTransition = (PipTransition) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionProvider.get();
                    com.android.wm.shell.pip2.phone.PipTransition pipTransition2 = (com.android.wm.shell.pip2.phone.PipTransition) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionProvider2.get();
                    PipModule_ProvidePipTransitionControllerFactory.providePipTransitionController(pipTransition);
                    return pipTransition;
                case 78:
                    ShellTaskOrganizer shellTaskOrganizer2 = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                    PipBoundsAlgorithm pipBoundsAlgorithm = (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get();
                    return new PipTransition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get(), (PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider.get(), (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get(), pipBoundsAlgorithm, (PipAnimationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipAnimationControllerProvider.get(), (PipSurfaceTransactionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSurfaceTransactionHelperProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesSplitScreenControllerProvider.get());
                case 79:
                    return new PipAnimationController((PipSurfaceTransactionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSurfaceTransactionHelperProvider.get());
                case 80:
                    return new PipSurfaceTransactionHelper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 81:
                    return new PipBoundsAlgorithm(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipSnapAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSnapAlgorithmProvider.get(), (PhonePipKeepClearAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePhonePipKeepClearAlgorithmProvider.get(), (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get(), (PhoneSizeSpecSource) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSizeSpecSourceProvider.get());
                case 82:
                    return new PipBoundsState(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PhoneSizeSpecSource) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSizeSpecSourceProvider.get(), (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get());
                case 83:
                    return new PhoneSizeSpecSource(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get());
                case 84:
                    return new PipDisplayLayoutState(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 85:
                    return new Object();
                case 86:
                    return WMShellBaseModule_ProvidePhonePipKeepClearAlgorithmFactory.providePhonePipKeepClearAlgorithm(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 87:
                    return new PipTransitionState();
                case 88:
                    return new PhonePipMenuController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipMediaController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipMediaControllerProvider.get(), (SystemWindows) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSystemWindowsProvider.get(), (PipUiEventLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipUiEventLoggerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                case 89:
                    return new PipMediaController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get());
                case 90:
                    return new SystemWindows((DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get());
                case 91:
                    return new PipUiEventLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get());
                case 92:
                    Context context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellTaskOrganizer shellTaskOrganizer3 = (ShellTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellTaskOrganizerProvider.get();
                    Optional optional10 = (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipControllerProvider.get();
                    return new com.android.wm.shell.pip2.phone.PipTransition(context2, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get(), (PipScheduler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSchedulerProvider.get());
                case 93:
                    Context context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ShellInit shellInit3 = (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get();
                    ShellController shellController2 = (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get();
                    DisplayController displayController2 = (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get();
                    DisplayInsetsController displayInsetsController3 = (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get();
                    PipBoundsState pipBoundsState = (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get();
                    PipBoundsAlgorithm pipBoundsAlgorithm2 = (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get();
                    PipDisplayLayoutState pipDisplayLayoutState = (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get();
                    PipScheduler pipScheduler = (PipScheduler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipSchedulerProvider.get();
                    ShellExecutor shellExecutor4 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    return Pip2Module_ProvidePipControllerFactory.providePipController();
                case 94:
                    Context context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    PipBoundsState pipBoundsState2 = (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get();
                    ShellExecutor shellExecutor5 = (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get();
                    Object obj = new Object();
                    PipUtils.isPip2ExperimentEnabled();
                    return obj;
                case 95:
                    Handler handler = (Handler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainHandlerProvider.get();
                    return new KeyguardTransitionHandler((ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (Transitions) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTransitionsProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 96:
                    return WMShellBaseModule_ProvideOneHandedFactory.provideOneHanded((Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesOneHandedControllerProvider.get());
                case 97:
                    Context context5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    PipMotionHelper pipMotionHelper = (PipMotionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipMotionHelperProvider.get();
                    PipTransitionState pipTransitionState = (PipTransitionState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionStateProvider.get();
                    return Pip1Module_ProvidePip1Factory.providePip1(context5, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (ShellCommandHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellCommandHandlerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (DisplayController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayControllerProvider.get(), (PipAnimationController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipAnimationControllerProvider.get(), (PipAppOpsListener) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipAppOpsListenerProvider.get(), (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get(), (PhonePipKeepClearAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePhonePipKeepClearAlgorithmProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PipDisplayLayoutState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.pipDisplayLayoutStateProvider.get(), (PipMediaController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipMediaControllerProvider.get(), (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get(), (PipTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTaskOrganizerProvider.get(), pipTransitionState, (PipTouchHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTouchHandlerProvider.get(), (PipTransitionController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTransitionControllerProvider.get(), (WindowManagerShellWrapper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideWindowManagerShellWrapperProvider.get(), (TaskStackListenerImpl) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providerTaskStackListenerImplProvider.get(), (PipParamsChangedForwarder) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipParamsChangedForwarderProvider.get(), (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get(), (TabletopModeController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideTabletopModeControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesOneHandedControllerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 98:
                    return Pip1Module_ProvidePipAppOpsListenerFactory.providePipAppOpsListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PipTouchHandler) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTouchHandlerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get());
                case 99:
                    return new PipTouchHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShellInit) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellInitProvider.get(), (PhonePipMenuController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipPhoneMenuControllerProvider.get(), (PipBoundsAlgorithm) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providesPipBoundsAlgorithmProvider.get(), (PipBoundsState) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipBoundsStateProvider.get(), (PhoneSizeSpecSource) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideSizeSpecSourceProvider.get(), (PipTaskOrganizer) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipTaskOrganizerProvider.get(), (PipMotionHelper) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipMotionHelperProvider.get(), (FloatingContentCoordinator) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideFloatingContentCoordinatorProvider.get(), (PipUiEventLogger) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipUiEventLoggerProvider.get(), (ShellExecutor) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellMainExecutorProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.providePipPerfHintControllerProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }

        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v13, resolved type: java.lang.Object} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v18, resolved type: com.android.systemui.util.concurrency.ThreadFactoryImpl} */
        /* JADX WARNING: Multi-variable type inference failed */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public java.lang.Object get1$1() {
            /*
                r115 = this;
                r0 = r115
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r1 = r0.sysUIGoogleGlobalRootComponentImpl
                java.lang.Object r2 = r0.wMComponentImpl
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl r2 = (com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) r2
                int r0 = r0.id
                switch(r0) {
                    case 100: goto L_0x180b;
                    case 101: goto L_0x171b;
                    case 102: goto L_0x1666;
                    case 103: goto L_0x161f;
                    case 104: goto L_0x15fc;
                    case 105: goto L_0x15ee;
                    case 106: goto L_0x15c5;
                    case 107: goto L_0x15c0;
                    case 108: goto L_0x15a8;
                    case 109: goto L_0x1599;
                    case 110: goto L_0x1577;
                    case 111: goto L_0x1549;
                    case 112: goto L_0x14d8;
                    case 113: goto L_0x14d3;
                    case 114: goto L_0x14b6;
                    case 115: goto L_0x148e;
                    case 116: goto L_0x1400;
                    case 117: goto L_0x13b7;
                    case 118: goto L_0x13ad;
                    case 119: goto L_0x139d;
                    case 120: goto L_0x138e;
                    case 121: goto L_0x137e;
                    case 122: goto L_0x136f;
                    case 123: goto L_0x1360;
                    case 124: goto L_0x1324;
                    case 125: goto L_0x12e1;
                    case 126: goto L_0x12c8;
                    case 127: goto L_0x12b9;
                    case 128: goto L_0x1291;
                    case 129: goto L_0x126e;
                    case 130: goto L_0x124f;
                    case 131: goto L_0x1249;
                    case 132: goto L_0x11f2;
                    case 133: goto L_0x11e2;
                    case 134: goto L_0x11d3;
                    case 135: goto L_0x11c4;
                    case 136: goto L_0x11a5;
                    case 137: goto L_0x1152;
                    case 138: goto L_0x1114;
                    case 139: goto L_0x1105;
                    case 140: goto L_0x10f6;
                    case 141: goto L_0x10dc;
                    case 142: goto L_0x10a2;
                    case 143: goto L_0x1076;
                    case 144: goto L_0x105c;
                    case 145: goto L_0x1004;
                    case 146: goto L_0x0f86;
                    case 147: goto L_0x0f80;
                    case 148: goto L_0x0f7a;
                    case 149: goto L_0x0f21;
                    case 150: goto L_0x0efb;
                    case 151: goto L_0x0ee0;
                    case 152: goto L_0x0eb2;
                    case 153: goto L_0x0e8f;
                    case 154: goto L_0x0dd8;
                    case 155: goto L_0x0dc4;
                    case 156: goto L_0x0db0;
                    case 157: goto L_0x0d52;
                    case 158: goto L_0x0d3c;
                    case 159: goto L_0x0cb8;
                    case 160: goto L_0x0c5a;
                    case 161: goto L_0x0b64;
                    case 162: goto L_0x0b54;
                    case 163: goto L_0x0b45;
                    case 164: goto L_0x0aad;
                    case 165: goto L_0x0a95;
                    case 166: goto L_0x0a71;
                    case 167: goto L_0x0a43;
                    case 168: goto L_0x0a17;
                    case 169: goto L_0x0a07;
                    case 170: goto L_0x09a6;
                    case 171: goto L_0x0982;
                    case 172: goto L_0x0973;
                    case 173: goto L_0x0963;
                    case 174: goto L_0x095d;
                    case 175: goto L_0x0927;
                    case 176: goto L_0x0921;
                    case 177: goto L_0x08a1;
                    case 178: goto L_0x07fe;
                    case 179: goto L_0x07e1;
                    case 180: goto L_0x078a;
                    case 181: goto L_0x077b;
                    case 182: goto L_0x0750;
                    case 183: goto L_0x0685;
                    case 184: goto L_0x0678;
                    case 185: goto L_0x0226;
                    case 186: goto L_0x020e;
                    case 187: goto L_0x01ff;
                    case 188: goto L_0x01e8;
                    case 189: goto L_0x018f;
                    case 190: goto L_0x0129;
                    case 191: goto L_0x0120;
                    case 192: goto L_0x010c;
                    case 193: goto L_0x00fc;
                    case 194: goto L_0x00ee;
                    case 195: goto L_0x00cc;
                    case 196: goto L_0x008b;
                    case 197: goto L_0x007c;
                    case 198: goto L_0x002b;
                    case 199: goto L_0x0013;
                    default: goto L_0x000d;
                }
            L_0x000d:
                java.lang.AssertionError r1 = new java.lang.AssertionError
                r1.<init>(r0)
                throw r1
            L_0x0013:
                com.android.systemui.util.CarrierConfigTracker r0 = new com.android.systemui.util.CarrierConfigTracker
                javax.inject.Provider r1 = r1.provideCarrierConfigManagerProvider
                java.lang.Object r1 = r1.get()
                android.telephony.CarrierConfigManager r1 = (android.telephony.CarrierConfigManager) r1
                javax.inject.Provider r2 = r2.broadcastDispatcherProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.broadcast.BroadcastDispatcher r2 = (com.android.systemui.broadcast.BroadcastDispatcher) r2
                r0.<init>(r1, r2)
                return r0
            L_0x002b:
                com.android.systemui.statusbar.pipeline.mobile.domain.interactor.MobileIconsInteractorImpl r0 = new com.android.systemui.statusbar.pipeline.mobile.domain.interactor.MobileIconsInteractorImpl
                javax.inject.Provider r3 = r2.mobileRepositorySwitcherProvider
                java.lang.Object r3 = r3.get()
                r4 = r3
                com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileConnectionsRepository r4 = (com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileConnectionsRepository) r4
                javax.inject.Provider r3 = r2.carrierConfigTrackerProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                com.android.systemui.util.CarrierConfigTracker r5 = (com.android.systemui.util.CarrierConfigTracker) r5
                javax.inject.Provider r3 = r2.provideMobileSummaryLogBufferProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.log.table.TableLogBuffer r6 = (com.android.systemui.log.table.TableLogBuffer) r6
                javax.inject.Provider r3 = r2.connectivityRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl r7 = (com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl) r7
                javax.inject.Provider r3 = r2.userSetupRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.statusbar.policy.data.repository.UserSetupRepositoryImpl r3 = (com.android.systemui.statusbar.policy.data.repository.UserSetupRepositoryImpl) r3
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                kotlinx.coroutines.CoroutineScope r8 = (kotlinx.coroutines.CoroutineScope) r8
                android.content.Context r9 = r1.context
                dagger.internal.DelegateFactory r1 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.flags.FeatureFlagsClassic r10 = (com.android.systemui.flags.FeatureFlagsClassic) r10
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8, r9, r10)
                return r0
            L_0x007c:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideOemSatelliteInputLogFactory.provideOemSatelliteInputLog(r0)
                return r0
            L_0x008b:
                com.android.systemui.statusbar.pipeline.satellite.data.prod.DeviceBasedSatelliteRepositoryImpl r0 = new com.android.systemui.statusbar.pipeline.satellite.data.prod.DeviceBasedSatelliteRepositoryImpl
                javax.inject.Provider r3 = r1.provideSatelliteManagerProvider
                java.lang.Object r3 = r3.get()
                java.util.Optional r3 = (java.util.Optional) r3
                javax.inject.Provider r4 = r2.bgDispatcherProvider
                java.lang.Object r4 = r4.get()
                kotlinx.coroutines.CoroutineDispatcher r4 = (kotlinx.coroutines.CoroutineDispatcher) r4
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                kotlinx.coroutines.CoroutineScope r5 = (kotlinx.coroutines.CoroutineScope) r5
                javax.inject.Provider r1 = r2.provideOemSatelliteInputLogProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.log.LogBuffer r6 = (com.android.systemui.log.LogBuffer) r6
                javax.inject.Provider r1 = r2.bindSystemClockProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.util.time.SystemClock r7 = (com.android.systemui.util.time.SystemClock) r7
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r1.<init>(r2, r3, r4, r5, r6)
                return r0
            L_0x00cc:
                com.android.systemui.statusbar.pipeline.satellite.domain.interactor.DeviceBasedSatelliteInteractor r0 = new com.android.systemui.statusbar.pipeline.satellite.domain.interactor.DeviceBasedSatelliteInteractor
                javax.inject.Provider r3 = r2.deviceBasedSatelliteRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.statusbar.pipeline.satellite.data.prod.DeviceBasedSatelliteRepositoryImpl r3 = (com.android.systemui.statusbar.pipeline.satellite.data.prod.DeviceBasedSatelliteRepositoryImpl) r3
                javax.inject.Provider r2 = r2.mobileIconsInteractorImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.pipeline.mobile.domain.interactor.MobileIconsInteractorImpl r2 = (com.android.systemui.statusbar.pipeline.mobile.domain.interactor.MobileIconsInteractorImpl) r2
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                r0.<init>(r3, r2, r1)
                return r0
            L_0x00ee:
                com.android.systemui.statusbar.pipeline.satellite.ui.DeviceBasedSatelliteBindableIcon r0 = new com.android.systemui.statusbar.pipeline.satellite.ui.DeviceBasedSatelliteBindableIcon
                android.content.Context r1 = r1.context
                com.android.systemui.statusbar.pipeline.satellite.ui.viewmodel.DeviceBasedSatelliteViewModel r2 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1496$$Nest$mdeviceBasedSatelliteViewModel(r2)
                r0.<init>(r1, r2)
                return r0
            L_0x00fc:
                com.android.systemui.statusbar.pipeline.icons.shared.BindableIconsRegistryImpl r0 = new com.android.systemui.statusbar.pipeline.icons.shared.BindableIconsRegistryImpl
                javax.inject.Provider r1 = r2.deviceBasedSatelliteBindableIconProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.pipeline.satellite.ui.DeviceBasedSatelliteBindableIcon r1 = (com.android.systemui.statusbar.pipeline.satellite.ui.DeviceBasedSatelliteBindableIcon) r1
                r0.<init>(r1)
                return r0
            L_0x010c:
                com.android.systemui.statusbar.pipeline.StatusBarPipelineFlags r0 = new com.android.systemui.statusbar.pipeline.StatusBarPipelineFlags
                android.content.Context r1 = r1.context
                dagger.internal.DelegateFactory r2 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.flags.FeatureFlags r2 = (com.android.systemui.flags.FeatureFlags) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0120:
                android.content.Context r0 = r1.context
                com.android.systemui.statusbar.phone.StatusBarIconList r0 = com.android.systemui.statusbar.dagger.CentralSurfacesDependenciesModule_ProvideStatusBarIconListFactory.provideStatusBarIconList(r0)
                return r0
            L_0x0129:
                com.android.systemui.statusbar.phone.StatusBarIconControllerImpl r0 = new com.android.systemui.statusbar.phone.StatusBarIconControllerImpl
                android.content.Context r3 = r1.context
                javax.inject.Provider r4 = r2.provideCommandQueueProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.statusbar.CommandQueue r4 = (com.android.systemui.statusbar.CommandQueue) r4
                javax.inject.Provider r5 = r2.provideDemoModeControllerProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.demomode.DemoModeController r5 = (com.android.systemui.demomode.DemoModeController) r5
                javax.inject.Provider r6 = r2.configurationControllerImplProvider
                java.lang.Object r6 = r6.get()
                com.android.systemui.statusbar.policy.ConfigurationController r6 = (com.android.systemui.statusbar.policy.ConfigurationController) r6
                dagger.internal.DelegateFactory r7 = r2.tunerServiceImplProvider
                java.lang.Object r7 = r7.get()
                com.android.systemui.tuner.TunerService r7 = (com.android.systemui.tuner.TunerService) r7
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.dump.DumpManager r8 = (com.android.systemui.dump.DumpManager) r8
                javax.inject.Provider r1 = r2.provideStatusBarIconListProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.statusbar.phone.StatusBarIconList r9 = (com.android.systemui.statusbar.phone.StatusBarIconList) r9
                javax.inject.Provider r1 = r2.statusBarPipelineFlagsProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.statusbar.pipeline.StatusBarPipelineFlags r10 = (com.android.systemui.statusbar.pipeline.StatusBarPipelineFlags) r10
                javax.inject.Provider r1 = r2.bindableIconsRegistryImplProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                com.android.systemui.statusbar.pipeline.icons.shared.BindableIconsRegistryImpl r11 = (com.android.systemui.statusbar.pipeline.icons.shared.BindableIconsRegistryImpl) r11
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r9
                r9 = r10
                r10 = r11
                r1.<init>(r2, r3, r4, r5, r6, r7, r8, r9, r10)
                return r0
            L_0x018f:
                com.google.android.systemui.reversecharging.ReverseChargingViewController r0 = new com.google.android.systemui.reversecharging.ReverseChargingViewController
                android.content.Context r13 = r1.context
                javax.inject.Provider r3 = r2.provideBatteryControllerProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.statusbar.policy.BatteryController r14 = (com.android.systemui.statusbar.policy.BatteryController) r14
                dagger.internal.DelegateFactory r3 = r2.notificationShadeWindowControllerImplProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                com.android.systemui.statusbar.NotificationShadeWindowController r15 = (com.android.systemui.statusbar.NotificationShadeWindowController) r15
                javax.inject.Provider r3 = r2.statusBarIconControllerImplProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.statusbar.phone.StatusBarIconController r16 = (com.android.systemui.statusbar.phone.StatusBarIconController) r16
                javax.inject.Provider r3 = r2.broadcastDispatcherProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                com.android.systemui.broadcast.BroadcastDispatcher r17 = (com.android.systemui.broadcast.BroadcastDispatcher) r17
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                r18 = r1
                java.util.concurrent.Executor r18 = (java.util.concurrent.Executor) r18
                javax.inject.Provider r1 = r2.keyguardIndicationControllerGoogleProvider
                java.lang.Object r1 = r1.get()
                r19 = r1
                com.google.android.systemui.statusbar.KeyguardIndicationControllerGoogle r19 = (com.google.android.systemui.statusbar.KeyguardIndicationControllerGoogle) r19
                javax.inject.Provider r1 = r2.ambientIndicationInteractorProvider
                java.lang.Object r1 = r1.get()
                r20 = r1
                com.google.android.systemui.keyguard.domain.interactor.AmbientIndicationInteractor r20 = (com.google.android.systemui.keyguard.domain.interactor.AmbientIndicationInteractor) r20
                r12 = r0
                r12.<init>(r13, r14, r15, r16, r17, r18, r19, r20)
                return r0
            L_0x01e8:
                javax.inject.Provider r0 = r2.provideBatteryControllerProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.statusbar.policy.BatteryController r0 = (com.android.systemui.statusbar.policy.BatteryController) r0
                javax.inject.Provider r1 = r2.reverseChargingViewControllerProvider
                dagger.Lazy r1 = dagger.internal.DoubleCheck.lazy(r1)
                java.util.Optional r0 = com.google.android.systemui.statusbar.phone.CentralSurfacesGoogleModule_ProvideReverseChargingViewControllerOptionalFactory.provideReverseChargingViewControllerOptional(r0, r1)
                return r0
            L_0x01ff:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideWakeLockLogFactory.provideWakeLockLog(r0)
                return r0
            L_0x020e:
                com.android.systemui.broadcast.BroadcastSender r0 = new com.android.systemui.broadcast.BroadcastSender
                android.content.Context r1 = r1.context
                com.android.systemui.util.wakelock.WakeLock$Builder r3 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1699$$Nest$mwakeLockBuilder(r2)
                javax.inject.Provider r2 = r2.provideBackgroundExecutorProvider
                java.lang.Object r2 = r2.get()
                java.util.concurrent.Executor r2 = (java.util.concurrent.Executor) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x0226:
                com.google.android.systemui.statusbar.phone.CentralSurfacesGoogle r0 = new com.google.android.systemui.statusbar.phone.CentralSurfacesGoogle
                com.google.android.systemui.statusbar.phone.WallpaperNotifier r5 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1700$$Nest$mwallpaperNotifier(r2)
                javax.inject.Provider r3 = r2.provideReverseChargingViewControllerOptionalProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                java.util.Optional r6 = (java.util.Optional) r6
                dagger.internal.DelegateFactory r3 = r2.dockObserverProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.google.android.systemui.dreamliner.DockObserver r7 = (com.google.android.systemui.dreamliner.DockObserver) r7
                javax.inject.Provider r3 = r2.provideHealthManagerProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                java.util.Optional r8 = (java.util.Optional) r8
                android.content.Context r9 = r1.context
                javax.inject.Provider r3 = r2.provideNotificationsControllerProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                com.android.systemui.statusbar.notification.init.NotificationsController r10 = (com.android.systemui.statusbar.notification.init.NotificationsController) r10
                dagger.internal.DelegateFactory r3 = r2.fragmentServiceProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.fragments.FragmentService r11 = (com.android.systemui.fragments.FragmentService) r11
                javax.inject.Provider r3 = r2.lightBarControllerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.statusbar.phone.LightBarController r12 = (com.android.systemui.statusbar.phone.LightBarController) r12
                javax.inject.Provider r3 = r2.autoHideControllerProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.systemui.statusbar.phone.AutoHideController r13 = (com.android.systemui.statusbar.phone.AutoHideController) r13
                javax.inject.Provider r3 = r2.statusBarInitializerProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.statusbar.core.StatusBarInitializer r14 = (com.android.systemui.statusbar.core.StatusBarInitializer) r14
                javax.inject.Provider r3 = r2.statusBarWindowControllerProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                com.android.systemui.statusbar.window.StatusBarWindowController r15 = (com.android.systemui.statusbar.window.StatusBarWindowController) r15
                javax.inject.Provider r3 = r2.statusBarWindowStateControllerProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.statusbar.window.StatusBarWindowStateController r16 = (com.android.systemui.statusbar.window.StatusBarWindowStateController) r16
                javax.inject.Provider r3 = r2.statusBarModeRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                com.android.systemui.statusbar.data.repository.StatusBarModeRepositoryImpl r17 = (com.android.systemui.statusbar.data.repository.StatusBarModeRepositoryImpl) r17
                dagger.internal.DelegateFactory r3 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r3 = r3.get()
                r18 = r3
                com.android.keyguard.KeyguardUpdateMonitor r18 = (com.android.keyguard.KeyguardUpdateMonitor) r18
                javax.inject.Provider r3 = r2.statusBarSignalPolicyProvider
                java.lang.Object r3 = r3.get()
                r19 = r3
                com.android.systemui.statusbar.phone.StatusBarSignalPolicy r19 = (com.android.systemui.statusbar.phone.StatusBarSignalPolicy) r19
                javax.inject.Provider r3 = r2.pulseExpansionHandlerProvider
                java.lang.Object r3 = r3.get()
                r20 = r3
                com.android.systemui.statusbar.PulseExpansionHandler r20 = (com.android.systemui.statusbar.PulseExpansionHandler) r20
                javax.inject.Provider r3 = r2.notificationWakeUpCoordinatorProvider
                java.lang.Object r3 = r3.get()
                r21 = r3
                com.android.systemui.statusbar.notification.NotificationWakeUpCoordinator r21 = (com.android.systemui.statusbar.notification.NotificationWakeUpCoordinator) r21
                dagger.internal.DelegateFactory r3 = r2.keyguardBypassControllerProvider
                java.lang.Object r3 = r3.get()
                r22 = r3
                com.android.systemui.statusbar.phone.KeyguardBypassController r22 = (com.android.systemui.statusbar.phone.KeyguardBypassController) r22
                dagger.internal.DelegateFactory r3 = r2.keyguardStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r23 = r3
                com.android.systemui.statusbar.policy.KeyguardStateController r23 = (com.android.systemui.statusbar.policy.KeyguardStateController) r23
                javax.inject.Provider r3 = r2.headsUpManagerPhoneProvider
                java.lang.Object r3 = r3.get()
                r24 = r3
                com.android.systemui.statusbar.policy.HeadsUpManager r24 = (com.android.systemui.statusbar.policy.HeadsUpManager) r24
                dagger.internal.DelegateFactory r3 = r2.falsingManagerProxyProvider
                java.lang.Object r3 = r3.get()
                r25 = r3
                com.android.systemui.plugins.FalsingManager r25 = (com.android.systemui.plugins.FalsingManager) r25
                javax.inject.Provider r3 = r2.providesFalsingCollectorLegacyProvider
                java.lang.Object r3 = r3.get()
                r26 = r3
                com.android.systemui.classifier.FalsingCollector r26 = (com.android.systemui.classifier.FalsingCollector) r26
                javax.inject.Provider r3 = r2.broadcastDispatcherProvider
                java.lang.Object r3 = r3.get()
                r27 = r3
                com.android.systemui.broadcast.BroadcastDispatcher r27 = (com.android.systemui.broadcast.BroadcastDispatcher) r27
                javax.inject.Provider r3 = r2.broadcastSenderProvider
                java.lang.Object r3 = r3.get()
                r28 = r3
                com.android.systemui.broadcast.BroadcastSender r28 = (com.android.systemui.broadcast.BroadcastSender) r28
                javax.inject.Provider r3 = r2.notificationGutsManagerProvider
                java.lang.Object r3 = r3.get()
                r29 = r3
                com.android.systemui.statusbar.notification.row.NotificationGutsManager r29 = (com.android.systemui.statusbar.notification.row.NotificationGutsManager) r29
                javax.inject.Provider r3 = r2.shadeExpansionStateManagerProvider
                java.lang.Object r3 = r3.get()
                r30 = r3
                com.android.systemui.shade.ShadeExpansionStateManager r30 = (com.android.systemui.shade.ShadeExpansionStateManager) r30
                dagger.internal.DelegateFactory r3 = r2.newKeyguardViewMediatorProvider
                java.lang.Object r3 = r3.get()
                r31 = r3
                com.android.systemui.keyguard.KeyguardViewMediator r31 = (com.android.systemui.keyguard.KeyguardViewMediator) r31
                android.util.DisplayMetrics r32 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m975$$Nest$mdisplayMetrics(r1)
                javax.inject.Provider r3 = r1.provideMetricsLoggerProvider
                java.lang.Object r3 = r3.get()
                r33 = r3
                com.android.internal.logging.MetricsLogger r33 = (com.android.internal.logging.MetricsLogger) r33
                com.android.systemui.shade.ShadeLogger r34 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1663$$Nest$mshadeLogger(r2)
                javax.inject.Provider r3 = r2.javaAdapterProvider
                java.lang.Object r3 = r3.get()
                r35 = r3
                com.android.systemui.util.kotlin.JavaAdapter r35 = (com.android.systemui.util.kotlin.JavaAdapter) r35
                javax.inject.Provider r3 = r1.provideUiBackgroundExecutorProvider
                java.lang.Object r3 = r3.get()
                r36 = r3
                java.util.concurrent.Executor r36 = (java.util.concurrent.Executor) r36
                dagger.internal.DelegateFactory r3 = r2.notificationPanelViewControllerProvider
                java.lang.Object r3 = r3.get()
                r37 = r3
                com.android.systemui.shade.ShadeSurface r37 = (com.android.systemui.shade.ShadeSurface) r37
                javax.inject.Provider r3 = r2.provideNotificationMediaManagerProvider
                java.lang.Object r3 = r3.get()
                r38 = r3
                com.android.systemui.statusbar.NotificationMediaManager r38 = (com.android.systemui.statusbar.NotificationMediaManager) r38
                dagger.internal.DelegateFactory r3 = r2.notificationLockscreenUserManagerImplProvider
                java.lang.Object r3 = r3.get()
                r39 = r3
                com.android.systemui.statusbar.NotificationLockscreenUserManager r39 = (com.android.systemui.statusbar.NotificationLockscreenUserManager) r39
                javax.inject.Provider r3 = r2.notificationRemoteInputManagerProvider
                java.lang.Object r3 = r3.get()
                r40 = r3
                com.android.systemui.statusbar.NotificationRemoteInputManager r40 = (com.android.systemui.statusbar.NotificationRemoteInputManager) r40
                javax.inject.Provider r3 = r2.quickSettingsControllerProvider
                java.lang.Object r3 = r3.get()
                r41 = r3
                com.android.systemui.shade.QuickSettingsController r41 = (com.android.systemui.shade.QuickSettingsController) r41
                javax.inject.Provider r3 = r2.provideBatteryControllerProvider
                java.lang.Object r3 = r3.get()
                r42 = r3
                com.android.systemui.statusbar.policy.BatteryController r42 = (com.android.systemui.statusbar.policy.BatteryController) r42
                javax.inject.Provider r3 = r2.sysuiColorExtractorProvider
                java.lang.Object r3 = r3.get()
                r43 = r3
                com.android.systemui.colorextraction.SysuiColorExtractor r43 = (com.android.systemui.colorextraction.SysuiColorExtractor) r43
                javax.inject.Provider r3 = r1.screenLifecycleProvider
                java.lang.Object r3 = r3.get()
                r44 = r3
                com.android.systemui.keyguard.ScreenLifecycle r44 = (com.android.systemui.keyguard.ScreenLifecycle) r44
                javax.inject.Provider r3 = r2.wakefulnessLifecycleProvider
                java.lang.Object r3 = r3.get()
                r45 = r3
                com.android.systemui.keyguard.WakefulnessLifecycle r45 = (com.android.systemui.keyguard.WakefulnessLifecycle) r45
                dagger.internal.DelegateFactory r3 = r2.powerInteractorProvider
                java.lang.Object r3 = r3.get()
                r46 = r3
                com.android.systemui.power.domain.interactor.PowerInteractor r46 = (com.android.systemui.power.domain.interactor.PowerInteractor) r46
                dagger.internal.DelegateFactory r3 = r2.communalInteractorProvider
                java.lang.Object r3 = r3.get()
                r47 = r3
                com.android.systemui.communal.domain.interactor.CommunalInteractor r47 = (com.android.systemui.communal.domain.interactor.CommunalInteractor) r47
                dagger.internal.DelegateFactory r3 = r2.statusBarStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r48 = r3
                com.android.systemui.statusbar.SysuiStatusBarStateController r48 = (com.android.systemui.statusbar.SysuiStatusBarStateController) r48
                java.util.Optional r49 = r2.setBubbles
                javax.inject.Provider r3 = r2.noteTaskControllerProvider
                dagger.Lazy r50 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.provideDeviceProvisionedControllerProvider
                java.lang.Object r3 = r3.get()
                r51 = r3
                com.android.systemui.statusbar.policy.DeviceProvisionedController r51 = (com.android.systemui.statusbar.policy.DeviceProvisionedController) r51
                dagger.internal.DelegateFactory r3 = r2.navigationBarControllerImplProvider
                java.lang.Object r3 = r3.get()
                r52 = r3
                com.android.systemui.navigationbar.NavigationBarControllerImpl r52 = (com.android.systemui.navigationbar.NavigationBarControllerImpl) r52
                javax.inject.Provider r3 = r2.accessibilityFloatingMenuControllerProvider
                java.lang.Object r3 = r3.get()
                r53 = r3
                com.android.systemui.accessibility.floatingmenu.AccessibilityFloatingMenuController r53 = (com.android.systemui.accessibility.floatingmenu.AccessibilityFloatingMenuController) r53
                dagger.internal.DelegateFactory r3 = r2.assistManagerGoogleProvider
                dagger.Lazy r54 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.configurationControllerImplProvider
                java.lang.Object r3 = r3.get()
                r55 = r3
                com.android.systemui.statusbar.policy.ConfigurationController r55 = (com.android.systemui.statusbar.policy.ConfigurationController) r55
                dagger.internal.DelegateFactory r3 = r2.notificationShadeWindowControllerImplProvider
                java.lang.Object r3 = r3.get()
                r56 = r3
                com.android.systemui.statusbar.NotificationShadeWindowController r56 = (com.android.systemui.statusbar.NotificationShadeWindowController) r56
                javax.inject.Provider r3 = r2.notificationShadeWindowViewControllerProvider
                dagger.Lazy r57 = dagger.internal.DoubleCheck.lazy(r3)
                dagger.internal.DelegateFactory r3 = r2.notificationStackScrollLayoutControllerProvider
                java.lang.Object r3 = r3.get()
                r58 = r3
                com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayoutController r58 = (com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayoutController) r58
                javax.inject.Provider r3 = r2.statusBarNotificationPresenterProvider
                dagger.Lazy r59 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.statusBarNotificationActivityStarterProvider
                dagger.Lazy r60 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.provideNotificationTransitionAnimatorControllerProvider
                java.lang.Object r3 = r3.get()
                r61 = r3
                com.android.systemui.statusbar.notification.NotificationLaunchAnimatorControllerProvider r61 = (com.android.systemui.statusbar.notification.NotificationLaunchAnimatorControllerProvider) r61
                dagger.internal.DelegateFactory r3 = r2.dozeParametersProvider
                java.lang.Object r3 = r3.get()
                r62 = r3
                com.android.systemui.statusbar.phone.DozeParameters r62 = (com.android.systemui.statusbar.phone.DozeParameters) r62
                javax.inject.Provider r3 = r2.scrimControllerProvider
                java.lang.Object r3 = r3.get()
                r63 = r3
                com.android.systemui.statusbar.phone.ScrimController r63 = (com.android.systemui.statusbar.phone.ScrimController) r63
                dagger.internal.DelegateFactory r3 = r2.biometricUnlockControllerProvider
                dagger.Lazy r64 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.authRippleControllerProvider
                java.lang.Object r3 = r3.get()
                r65 = r3
                com.android.systemui.biometrics.AuthRippleController r65 = (com.android.systemui.biometrics.AuthRippleController) r65
                javax.inject.Provider r3 = r2.notificationShadeDepthControllerProvider
                dagger.Lazy r66 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.dozeServiceHostProvider
                java.lang.Object r3 = r3.get()
                r67 = r3
                com.android.systemui.statusbar.phone.DozeServiceHost r67 = (com.android.systemui.statusbar.phone.DozeServiceHost) r67
                javax.inject.Provider r3 = r2.backActionInteractorProvider
                java.lang.Object r3 = r3.get()
                r68 = r3
                com.android.systemui.back.domain.interactor.BackActionInteractor r68 = (com.android.systemui.back.domain.interactor.BackActionInteractor) r68
                javax.inject.Provider r3 = r1.providePowerManagerProvider
                java.lang.Object r3 = r3.get()
                r69 = r3
                android.os.PowerManager r69 = (android.os.PowerManager) r69
                javax.inject.Provider r3 = r2.dozeScrimControllerProvider
                java.lang.Object r3 = r3.get()
                r70 = r3
                com.android.systemui.statusbar.phone.DozeScrimController r70 = (com.android.systemui.statusbar.phone.DozeScrimController) r70
                javax.inject.Provider r3 = r2.volumeDialogComponentProvider
                java.lang.Object r3 = r3.get()
                r71 = r3
                com.android.systemui.volume.VolumeComponent r71 = (com.android.systemui.volume.VolumeComponent) r71
                javax.inject.Provider r3 = r2.provideCommandQueueProvider
                java.lang.Object r3 = r3.get()
                r72 = r3
                com.android.systemui.statusbar.CommandQueue r72 = (com.android.systemui.statusbar.CommandQueue) r72
                javax.inject.Provider r3 = r2.centralSurfacesCommandQueueCallbacksProvider
                dagger.Lazy r73 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r1.providesPluginManagerProvider
                java.lang.Object r3 = r3.get()
                r74 = r3
                com.android.systemui.plugins.PluginManager r74 = (com.android.systemui.plugins.PluginManager) r74
                dagger.internal.DelegateFactory r3 = r2.provideShadeControllerProvider
                java.lang.Object r3 = r3.get()
                r75 = r3
                com.android.systemui.shade.ShadeController r75 = (com.android.systemui.shade.ShadeController) r75
                javax.inject.Provider r3 = r2.windowRootViewVisibilityInteractorProvider
                java.lang.Object r3 = r3.get()
                r76 = r3
                com.android.systemui.scene.domain.interactor.WindowRootViewVisibilityInteractor r76 = (com.android.systemui.scene.domain.interactor.WindowRootViewVisibilityInteractor) r76
                dagger.internal.DelegateFactory r3 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r3 = r3.get()
                r77 = r3
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r77 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r77
                com.android.systemui.keyguard.KeyguardViewMediator$4 r78 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1697$$Nest$mviewMediatorCallback(r2)
                javax.inject.Provider r3 = r2.initControllerProvider
                java.lang.Object r3 = r3.get()
                r79 = r3
                com.android.systemui.InitController r79 = (com.android.systemui.InitController) r79
                javax.inject.Provider r3 = r2.provideTimeTickHandlerProvider
                java.lang.Object r3 = r3.get()
                r80 = r3
                android.os.Handler r80 = (android.os.Handler) r80
                javax.inject.Provider r3 = r1.pluginDependencyProvider
                java.lang.Object r3 = r3.get()
                r81 = r3
                com.android.systemui.plugins.PluginDependencyProvider r81 = (com.android.systemui.plugins.PluginDependencyProvider) r81
                javax.inject.Provider r3 = r2.extensionControllerImplProvider
                java.lang.Object r3 = r3.get()
                r82 = r3
                com.android.systemui.statusbar.policy.ExtensionControllerImpl r82 = (com.android.systemui.statusbar.policy.ExtensionControllerImpl) r82
                javax.inject.Provider r3 = r2.userInfoControllerImplProvider
                java.lang.Object r3 = r3.get()
                r83 = r3
                com.android.systemui.statusbar.policy.UserInfoControllerImpl r83 = (com.android.systemui.statusbar.policy.UserInfoControllerImpl) r83
                com.android.systemui.statusbar.phone.PhoneStatusBarPolicy r84 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1618$$Nest$mphoneStatusBarPolicy(r2)
                javax.inject.Provider r3 = r2.keyguardIndicationControllerGoogleProvider
                java.lang.Object r3 = r3.get()
                r85 = r3
                com.google.android.systemui.statusbar.KeyguardIndicationControllerGoogle r85 = (com.google.android.systemui.statusbar.KeyguardIndicationControllerGoogle) r85
                javax.inject.Provider r3 = r2.provideDemoModeControllerProvider
                java.lang.Object r3 = r3.get()
                r86 = r3
                com.android.systemui.demomode.DemoModeController r86 = (com.android.systemui.demomode.DemoModeController) r86
                javax.inject.Provider r3 = r2.statusBarTouchableRegionManagerProvider
                java.lang.Object r3 = r3.get()
                r87 = r3
                com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager r87 = (com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager) r87
                com.android.systemui.statusbar.phone.NotificationIconAreaController r88 = r2.notificationIconAreaController()
                com.android.systemui.settings.brightness.BrightnessSliderController$Factory r89 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1457$$Nest$mbrightnessSliderControllerFactory(r2)
                javax.inject.Provider r3 = r2.screenOffAnimationControllerProvider
                java.lang.Object r3 = r3.get()
                r90 = r3
                com.android.systemui.statusbar.phone.ScreenOffAnimationController r90 = (com.android.systemui.statusbar.phone.ScreenOffAnimationController) r90
                javax.inject.Provider r3 = r2.wallpaperControllerProvider
                java.lang.Object r3 = r3.get()
                r91 = r3
                com.android.systemui.util.WallpaperController r91 = (com.android.systemui.util.WallpaperController) r91
                javax.inject.Provider r3 = r2.statusBarHideIconsForBouncerManagerProvider
                java.lang.Object r3 = r3.get()
                r92 = r3
                com.android.systemui.statusbar.phone.StatusBarHideIconsForBouncerManager r92 = (com.android.systemui.statusbar.phone.StatusBarHideIconsForBouncerManager) r92
                javax.inject.Provider r3 = r2.lockscreenShadeTransitionControllerProvider
                java.lang.Object r3 = r3.get()
                r93 = r3
                com.android.systemui.statusbar.LockscreenShadeTransitionController r93 = (com.android.systemui.statusbar.LockscreenShadeTransitionController) r93
                dagger.internal.DelegateFactory r3 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r3 = r3.get()
                r94 = r3
                com.android.systemui.flags.FeatureFlagsClassic r94 = (com.android.systemui.flags.FeatureFlagsClassic) r94
                dagger.internal.DelegateFactory r3 = r2.keyguardUnlockAnimationControllerProvider
                java.lang.Object r3 = r3.get()
                r95 = r3
                com.android.systemui.keyguard.KeyguardUnlockAnimationController r95 = (com.android.systemui.keyguard.KeyguardUnlockAnimationController) r95
                javax.inject.Provider r3 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r3 = r3.get()
                r96 = r3
                com.android.systemui.util.concurrency.DelayableExecutor r96 = (com.android.systemui.util.concurrency.DelayableExecutor) r96
                com.android.systemui.util.concurrency.MessageRouterImpl r97 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1555$$Nest$mmainMessageRouter(r2)
                android.app.WallpaperManager r98 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m978$$Nest$mwallpaperManager(r1)
                java.util.Optional r99 = r2.setStartingSurface
                javax.inject.Provider r3 = r2.provideActivityTransitionAnimatorProvider
                java.lang.Object r3 = r3.get()
                r100 = r3
                com.android.systemui.animation.ActivityTransitionAnimator r100 = (com.android.systemui.animation.ActivityTransitionAnimator) r100
                javax.inject.Provider r3 = r1.provideAlarmManagerProvider
                java.lang.Object r3 = r3.get()
                r101 = r3
                android.app.AlarmManager r101 = (android.app.AlarmManager) r101
                javax.inject.Provider r3 = r1.provideDeviceStateManagerProvider
                java.lang.Object r3 = r3.get()
                r102 = r3
                android.hardware.devicestate.DeviceStateManager r102 = (android.hardware.devicestate.DeviceStateManager) r102
                javax.inject.Provider r3 = r2.wiredChargingRippleControllerProvider
                java.lang.Object r3 = r3.get()
                r103 = r3
                com.android.systemui.charging.WiredChargingRippleController r103 = (com.android.systemui.charging.WiredChargingRippleController) r103
                javax.inject.Provider r3 = r1.provideIDreamManagerProvider
                java.lang.Object r3 = r3.get()
                r104 = r3
                android.service.dreams.IDreamManager r104 = (android.service.dreams.IDreamManager) r104
                javax.inject.Provider r3 = r2.cameraLauncherProvider
                dagger.Lazy r105 = dagger.internal.DoubleCheck.lazy(r3)
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r3 = r2.lightRevealScrimViewModelProvider
                dagger.Lazy r106 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.providesLightRevealScrimProvider
                java.lang.Object r3 = r3.get()
                r107 = r3
                com.android.systemui.statusbar.LightRevealScrim r107 = (com.android.systemui.statusbar.LightRevealScrim) r107
                javax.inject.Provider r3 = r2.alternateBouncerInteractorProvider
                java.lang.Object r3 = r3.get()
                r108 = r3
                com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor r108 = (com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor) r108
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r109 = r3
                com.android.systemui.settings.UserTracker r109 = (com.android.systemui.settings.UserTracker) r109
                javax.inject.Provider r110 = r1.providesFingerprintManagerProvider
                dagger.internal.DelegateFactory r1 = r2.activityStarterImplProvider
                java.lang.Object r1 = r1.get()
                r111 = r1
                com.android.systemui.plugins.ActivityStarter r111 = (com.android.systemui.plugins.ActivityStarter) r111
                javax.inject.Provider r1 = r2.selectedUserInteractorProvider
                java.lang.Object r1 = r1.get()
                r112 = r1
                com.android.systemui.user.domain.interactor.SelectedUserInteractor r112 = (com.android.systemui.user.domain.interactor.SelectedUserInteractor) r112
                javax.inject.Provider r1 = r2.implProvider
                java.lang.Object r1 = r1.get()
                r113 = r1
                com.android.systemui.scene.shared.flag.SceneContainerFlags r113 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r113
                javax.inject.Provider r1 = r2.factoryProvider13
                java.lang.Object r1 = r1.get()
                r114 = r1
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$11 r114 = (com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$11) r114
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49, r50, r51, r52, r53, r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70, r71, r72, r73, r74, r75, r76, r77, r78, r79, r80, r81, r82, r83, r84, r85, r86, r87, r88, r89, r90, r91, r92, r93, r94, r95, r96, r97, r98, r99, r100, r101, r102, r103, r104, r105, r106, r107, r108, r109, r110, r111, r112, r113, r114)
                return r0
            L_0x0678:
                dagger.internal.DelegateFactory r0 = r2.centralSurfacesGoogleProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.statusbar.phone.CentralSurfaces r0 = (com.android.systemui.statusbar.phone.CentralSurfaces) r0
                java.util.Optional r0 = java.util.Optional.of(r0)
                return r0
            L_0x0685:
                com.android.systemui.statusbar.phone.ActivityStarterImpl r0 = new com.android.systemui.statusbar.phone.ActivityStarterImpl
                dagger.internal.DelegateFactory r3 = r2.optionalOfCentralSurfacesProvider
                dagger.Lazy r3 = dagger.internal.DoubleCheck.lazy(r3)
                dagger.internal.DelegateFactory r4 = r2.assistManagerGoogleProvider
                dagger.Lazy r4 = dagger.internal.DoubleCheck.lazy(r4)
                javax.inject.Provider r5 = r2.dozeServiceHostProvider
                dagger.Lazy r5 = dagger.internal.DoubleCheck.lazy(r5)
                dagger.internal.DelegateFactory r6 = r2.biometricUnlockControllerProvider
                dagger.Lazy r6 = dagger.internal.DoubleCheck.lazy(r6)
                dagger.internal.DelegateFactory r7 = r2.newKeyguardViewMediatorProvider
                dagger.Lazy r7 = dagger.internal.DoubleCheck.lazy(r7)
                dagger.internal.DelegateFactory r8 = r2.provideShadeControllerProvider
                dagger.Lazy r8 = dagger.internal.DoubleCheck.lazy(r8)
                javax.inject.Provider r9 = r2.provideCommandQueueProvider
                java.lang.Object r9 = r9.get()
                com.android.systemui.statusbar.CommandQueue r9 = (com.android.systemui.statusbar.CommandQueue) r9
                javax.inject.Provider r10 = r2.provideShadeAnimationInteractorProvider
                java.lang.Object r10 = r10.get()
                com.android.systemui.shade.domain.interactor.ShadeAnimationInteractor r10 = (com.android.systemui.shade.domain.interactor.ShadeAnimationInteractor) r10
                dagger.internal.DelegateFactory r11 = r2.statusBarKeyguardViewManagerProvider
                dagger.Lazy r11 = dagger.internal.DoubleCheck.lazy(r11)
                dagger.internal.DelegateFactory r12 = r2.notificationShadeWindowControllerImplProvider
                dagger.Lazy r12 = dagger.internal.DoubleCheck.lazy(r12)
                javax.inject.Provider r13 = r2.provideActivityTransitionAnimatorProvider
                java.lang.Object r13 = r13.get()
                com.android.systemui.animation.ActivityTransitionAnimator r13 = (com.android.systemui.animation.ActivityTransitionAnimator) r13
                android.content.Context r14 = r1.context
                int r15 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m974$$Nest$mdisplayIdInteger(r1)
                dagger.internal.DelegateFactory r16 = r2.notificationLockscreenUserManagerImplProvider
                java.lang.Object r16 = r16.get()
                com.android.systemui.statusbar.NotificationLockscreenUserManager r16 = (com.android.systemui.statusbar.NotificationLockscreenUserManager) r16
                javax.inject.Provider r17 = r2.statusBarWindowControllerProvider
                java.lang.Object r17 = r17.get()
                com.android.systemui.statusbar.window.StatusBarWindowController r17 = (com.android.systemui.statusbar.window.StatusBarWindowController) r17
                javax.inject.Provider r18 = r2.wakefulnessLifecycleProvider
                java.lang.Object r18 = r18.get()
                com.android.systemui.keyguard.WakefulnessLifecycle r18 = (com.android.systemui.keyguard.WakefulnessLifecycle) r18
                dagger.internal.DelegateFactory r19 = r2.keyguardStateControllerImplProvider
                java.lang.Object r19 = r19.get()
                com.android.systemui.statusbar.policy.KeyguardStateController r19 = (com.android.systemui.statusbar.policy.KeyguardStateController) r19
                dagger.internal.DelegateFactory r20 = r2.statusBarStateControllerImplProvider
                java.lang.Object r20 = r20.get()
                com.android.systemui.statusbar.SysuiStatusBarStateController r20 = (com.android.systemui.statusbar.SysuiStatusBarStateController) r20
                dagger.internal.DelegateFactory r21 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r21 = r21.get()
                com.android.keyguard.KeyguardUpdateMonitor r21 = (com.android.keyguard.KeyguardUpdateMonitor) r21
                javax.inject.Provider r22 = r2.provideDeviceProvisionedControllerProvider
                java.lang.Object r22 = r22.get()
                com.android.systemui.statusbar.policy.DeviceProvisionedController r22 = (com.android.systemui.statusbar.policy.DeviceProvisionedController) r22
                dagger.internal.DelegateFactory r23 = r2.provideUserTrackerProvider
                java.lang.Object r23 = r23.get()
                com.android.systemui.settings.UserTracker r23 = (com.android.systemui.settings.UserTracker) r23
                javax.inject.Provider r2 = r2.activityIntentHelperProvider
                java.lang.Object r2 = r2.get()
                r24 = r2
                com.android.systemui.ActivityIntentHelper r24 = (com.android.systemui.ActivityIntentHelper) r24
                javax.inject.Provider r1 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r1 = r1.get()
                r25 = r1
                com.android.systemui.util.concurrency.DelayableExecutor r25 = (com.android.systemui.util.concurrency.DelayableExecutor) r25
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25)
                return r0
            L_0x0750:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r0 = r1.provideApplicationContextProvider
                java.lang.Object r0 = r0.get()
                android.content.Context r0 = (android.content.Context) r0
                javax.inject.Provider r1 = r2.bgApplicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                com.android.systemui.communal.widgets.WidgetInteractionHandler r3 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1701$$Nest$mwidgetInteractionHandler(r2)
                android.os.Looper r4 = com.android.systemui.util.concurrency.GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper()
                javax.inject.Provider r2 = r2.provideCommunalLogBufferProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.log.LogBuffer r2 = (com.android.systemui.log.LogBuffer) r2
                com.android.systemui.communal.widgets.CommunalAppWidgetHost r0 = com.android.systemui.communal.widgets.CommunalWidgetModule_Companion_ProvideCommunalAppWidgetHostFactory.provideCommunalAppWidgetHost(r0, r1, r3, r4, r2)
                return r0
            L_0x077b:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r0 = r1.provideApplicationContextProvider
                java.lang.Object r0 = r0.get()
                android.content.Context r0 = (android.content.Context) r0
                java.util.Optional r0 = com.android.systemui.communal.widgets.CommunalWidgetModule_Companion_ProvideAppWidgetManagerFactory.provideAppWidgetManager(r0)
                return r0
            L_0x078a:
                com.android.systemui.communal.data.repository.CommunalWidgetRepositoryImpl r0 = new com.android.systemui.communal.data.repository.CommunalWidgetRepositoryImpl
                javax.inject.Provider r1 = r2.provideAppWidgetManagerProvider
                java.lang.Object r1 = r1.get()
                r3 = r1
                java.util.Optional r3 = (java.util.Optional) r3
                javax.inject.Provider r1 = r2.provideCommunalAppWidgetHostProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                com.android.systemui.communal.widgets.CommunalAppWidgetHost r4 = (com.android.systemui.communal.widgets.CommunalAppWidgetHost) r4
                javax.inject.Provider r1 = r2.bgApplicationScopeProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                kotlinx.coroutines.CoroutineScope r5 = (kotlinx.coroutines.CoroutineScope) r5
                javax.inject.Provider r1 = r2.bgDispatcherProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                kotlinx.coroutines.CoroutineDispatcher r6 = (kotlinx.coroutines.CoroutineDispatcher) r6
                javax.inject.Provider r1 = r2.provideCommunalWidgetHostProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.communal.widgets.CommunalWidgetHost r7 = (com.android.systemui.communal.widgets.CommunalWidgetHost) r7
                dagger.internal.DelegateFactory r1 = r2.provideCommunalWidgetDaoProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.communal.data.db.CommunalWidgetDao_Impl r8 = (com.android.systemui.communal.data.db.CommunalWidgetDao_Impl) r8
                javax.inject.Provider r1 = r2.provideCommunalLogBufferProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.log.LogBuffer r9 = (com.android.systemui.log.LogBuffer) r9
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r9
                r1.<init>(r2, r3, r4, r5, r6, r7, r8)
                return r0
            L_0x07e1:
                com.android.systemui.communal.data.repository.CommunalRepositoryImpl r0 = new com.android.systemui.communal.data.repository.CommunalRepositoryImpl
                javax.inject.Provider r1 = r2.bgApplicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.implProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.scene.shared.flag.SceneContainerFlags r3 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r3
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1637$$Nest$msceneContainerRepository(r2)
                r0.<init>(r1)
                return r0
            L_0x07fe:
                com.android.systemui.communal.domain.interactor.CommunalInteractor r0 = new com.android.systemui.communal.domain.interactor.CommunalInteractor
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                kotlinx.coroutines.CoroutineScope r5 = (kotlinx.coroutines.CoroutineScope) r5
                javax.inject.Provider r1 = r2.communalRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.communal.data.repository.CommunalRepositoryImpl r6 = (com.android.systemui.communal.data.repository.CommunalRepositoryImpl) r6
                javax.inject.Provider r1 = r2.communalWidgetRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.communal.data.repository.CommunalWidgetRepository r7 = (com.android.systemui.communal.data.repository.CommunalWidgetRepository) r7
                javax.inject.Provider r1 = r2.communalPrefsRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.communal.data.repository.CommunalPrefsRepositoryImpl r8 = (com.android.systemui.communal.data.repository.CommunalPrefsRepositoryImpl) r8
                javax.inject.Provider r1 = r2.communalMediaRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.communal.data.repository.CommunalMediaRepositoryImpl r9 = (com.android.systemui.communal.data.repository.CommunalMediaRepositoryImpl) r9
                javax.inject.Provider r1 = r2.smartspaceRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.smartspace.data.repository.SmartspaceRepositoryImpl r10 = (com.android.systemui.smartspace.data.repository.SmartspaceRepositoryImpl) r10
                dagger.internal.DelegateFactory r1 = r2.keyguardInteractorProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r11 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r11
                javax.inject.Provider r1 = r2.communalSettingsInteractorProvider
                java.lang.Object r1 = r1.get()
                r12 = r1
                com.android.systemui.communal.domain.interactor.CommunalSettingsInteractor r12 = (com.android.systemui.communal.domain.interactor.CommunalSettingsInteractor) r12
                javax.inject.Provider r1 = r2.provideCommunalAppWidgetHostProvider
                java.lang.Object r1 = r1.get()
                r13 = r1
                com.android.systemui.communal.widgets.CommunalAppWidgetHost r13 = (com.android.systemui.communal.widgets.CommunalAppWidgetHost) r13
                com.android.systemui.communal.widgets.EditWidgetsActivityStarterImpl r14 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1507$$Nest$meditWidgetsActivityStarterImpl(r2)
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                com.android.systemui.settings.UserTracker r15 = (com.android.systemui.settings.UserTracker) r15
                javax.inject.Provider r1 = r2.sceneInteractorProvider
                java.lang.Object r1 = r1.get()
                r16 = r1
                com.android.systemui.scene.domain.interactor.SceneInteractor r16 = (com.android.systemui.scene.domain.interactor.SceneInteractor) r16
                javax.inject.Provider r1 = r2.implProvider
                java.lang.Object r1 = r1.get()
                r17 = r1
                com.android.systemui.scene.shared.flag.SceneContainerFlags r17 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r17
                javax.inject.Provider r1 = r2.provideCommunalLogBufferProvider
                java.lang.Object r1 = r1.get()
                r18 = r1
                com.android.systemui.log.LogBuffer r18 = (com.android.systemui.log.LogBuffer) r18
                javax.inject.Provider r1 = r2.provideCommunalTableLogBufferProvider
                java.lang.Object r1 = r1.get()
                r19 = r1
                com.android.systemui.log.table.TableLogBuffer r19 = (com.android.systemui.log.table.TableLogBuffer) r19
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19)
                return r0
            L_0x08a1:
                com.android.systemui.keyguard.domain.interactor.FromLockscreenTransitionInteractor r0 = new com.android.systemui.keyguard.domain.interactor.FromLockscreenTransitionInteractor
                javax.inject.Provider r3 = r2.keyguardTransitionRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r21 = r3
                com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl r21 = (com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl) r21
                dagger.internal.DelegateFactory r3 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r3 = r3.get()
                r22 = r3
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r22 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r22
                javax.inject.Provider r3 = r2.bgApplicationScopeProvider
                java.lang.Object r3 = r3.get()
                r23 = r3
                kotlinx.coroutines.CoroutineScope r23 = (kotlinx.coroutines.CoroutineScope) r23
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                r24 = r3
                kotlinx.coroutines.CoroutineDispatcher r24 = (kotlinx.coroutines.CoroutineDispatcher) r24
                javax.inject.Provider r1 = r1.mainDispatcherProvider
                java.lang.Object r1 = r1.get()
                r25 = r1
                kotlinx.coroutines.CoroutineDispatcher r25 = (kotlinx.coroutines.CoroutineDispatcher) r25
                dagger.internal.DelegateFactory r1 = r2.keyguardInteractorProvider
                java.lang.Object r1 = r1.get()
                r26 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r26 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r26
                dagger.internal.DelegateFactory r1 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.flags.FeatureFlags r1 = (com.android.systemui.flags.FeatureFlags) r1
                javax.inject.Provider r1 = r2.shadeRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r27 = r1
                com.android.systemui.shade.data.repository.ShadeRepository r27 = (com.android.systemui.shade.data.repository.ShadeRepository) r27
                dagger.internal.DelegateFactory r1 = r2.powerInteractorProvider
                java.lang.Object r1 = r1.get()
                r28 = r1
                com.android.systemui.power.domain.interactor.PowerInteractor r28 = (com.android.systemui.power.domain.interactor.PowerInteractor) r28
                com.android.systemui.keyguard.domain.interactor.GlanceableHubTransitions r29 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1520$$Nest$mglanceableHubTransitions(r2)
                javax.inject.Provider r1 = r2.swipeToDismissInteractorProvider
                java.lang.Object r1 = r1.get()
                r30 = r1
                com.android.systemui.keyguard.domain.interactor.SwipeToDismissInteractor r30 = (com.android.systemui.keyguard.domain.interactor.SwipeToDismissInteractor) r30
                r20 = r0
                r20.<init>(r21, r22, r23, r24, r25, r26, r27, r28, r29, r30)
                return r0
            L_0x0921:
                com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl r0 = new com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl
                r0.<init>()
                return r0
            L_0x0927:
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r0 = new com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r3 = r1
                kotlinx.coroutines.CoroutineScope r3 = (kotlinx.coroutines.CoroutineScope) r3
                javax.inject.Provider r1 = r2.keyguardTransitionRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl r4 = (com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl) r4
                javax.inject.Provider r1 = r2.fromLockscreenTransitionInteractorProvider
                dagger.Lazy r5 = dagger.internal.DoubleCheck.lazy(r1)
                javax.inject.Provider r1 = r2.fromPrimaryBouncerTransitionInteractorProvider
                dagger.Lazy r6 = dagger.internal.DoubleCheck.lazy(r1)
                javax.inject.Provider r1 = r2.fromAodTransitionInteractorProvider
                dagger.Lazy r7 = dagger.internal.DoubleCheck.lazy(r1)
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r1.<init>(r2, r3, r4, r5, r6)
                return r0
            L_0x095d:
                com.android.systemui.shade.data.repository.ShadeRepositoryImpl r0 = new com.android.systemui.shade.data.repository.ShadeRepositoryImpl
                r0.<init>()
                return r0
            L_0x0963:
                com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor r0 = new com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor
                javax.inject.Provider r1 = r2.configurationRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.common.ui.data.repository.ConfigurationRepository r1 = (com.android.systemui.common.ui.data.repository.ConfigurationRepository) r1
                r0.<init>(r1)
                return r0
            L_0x0973:
                javax.inject.Provider r0 = r2.tableLogBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.table.TableLogBufferFactory r0 = (com.android.systemui.log.table.TableLogBufferFactory) r0
                com.android.systemui.log.table.TableLogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideBouncerLogBufferFactory.provideBouncerLogBuffer(r0)
                return r0
            L_0x0982:
                com.android.systemui.bouncer.data.repository.KeyguardBouncerRepositoryImpl r0 = new com.android.systemui.bouncer.data.repository.KeyguardBouncerRepositoryImpl
                javax.inject.Provider r3 = r2.bindSystemClockProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.util.time.SystemClock r3 = (com.android.systemui.util.time.SystemClock) r3
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r2 = r2.provideBouncerLogBufferProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.log.table.TableLogBuffer r2 = (com.android.systemui.log.table.TableLogBuffer) r2
                r0.<init>(r3, r1, r2)
                return r0
            L_0x09a6:
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r0 = new com.android.systemui.keyguard.domain.interactor.KeyguardInteractor
                javax.inject.Provider r1 = r2.keyguardRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl r5 = (com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl) r5
                javax.inject.Provider r1 = r2.provideCommandQueueProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.statusbar.CommandQueue r6 = (com.android.systemui.statusbar.CommandQueue) r6
                dagger.internal.DelegateFactory r1 = r2.powerInteractorProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.power.domain.interactor.PowerInteractor r7 = (com.android.systemui.power.domain.interactor.PowerInteractor) r7
                javax.inject.Provider r1 = r2.implProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.scene.shared.flag.SceneContainerFlags r8 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r8
                javax.inject.Provider r1 = r2.keyguardBouncerRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.bouncer.data.repository.KeyguardBouncerRepositoryImpl r9 = (com.android.systemui.bouncer.data.repository.KeyguardBouncerRepositoryImpl) r9
                javax.inject.Provider r1 = r2.configurationInteractorProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor r10 = (com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor) r10
                javax.inject.Provider r1 = r2.shadeRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                com.android.systemui.shade.data.repository.ShadeRepository r11 = (com.android.systemui.shade.data.repository.ShadeRepository) r11
                dagger.internal.DelegateFactory r1 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r1 = r1.get()
                r12 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r12 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r12
                javax.inject.Provider r13 = r2.sceneInteractorProvider
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9, r10, r11, r12, r13)
                return r0
            L_0x0a07:
                com.android.keyguard.logging.TrustRepositoryLogger r0 = new com.android.keyguard.logging.TrustRepositoryLogger
                javax.inject.Provider r1 = r2.provideKeyguardUpdateMonitorLogBufferProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r0.<init>(r1)
                return r0
            L_0x0a17:
                com.android.systemui.keyguard.data.repository.TrustRepositoryImpl r0 = new com.android.systemui.keyguard.data.repository.TrustRepositoryImpl
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                kotlinx.coroutines.CoroutineScope r3 = (kotlinx.coroutines.CoroutineScope) r3
                javax.inject.Provider r4 = r2.userRepositoryImplProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.user.data.repository.UserRepositoryImpl r4 = (com.android.systemui.user.data.repository.UserRepositoryImpl) r4
                javax.inject.Provider r1 = r1.provideTrustManagerProvider
                java.lang.Object r1 = r1.get()
                android.app.trust.TrustManager r1 = (android.app.trust.TrustManager) r1
                javax.inject.Provider r2 = r2.trustRepositoryLoggerProvider
                java.lang.Object r2 = r2.get()
                com.android.keyguard.logging.TrustRepositoryLogger r2 = (com.android.keyguard.logging.TrustRepositoryLogger) r2
                r0.<init>(r3, r4, r1, r2)
                return r0
            L_0x0a43:
                com.android.systemui.keyguard.data.repository.DeviceEntryFingerprintAuthRepositoryImpl r0 = new com.android.systemui.keyguard.data.repository.DeviceEntryFingerprintAuthRepositoryImpl
                dagger.internal.DelegateFactory r3 = r2.authControllerProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.biometrics.AuthController r3 = (com.android.systemui.biometrics.AuthController) r3
                dagger.internal.DelegateFactory r2 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r2 = r2.get()
                com.android.keyguard.KeyguardUpdateMonitor r2 = (com.android.keyguard.KeyguardUpdateMonitor) r2
                javax.inject.Provider r4 = r1.applicationScopeProvider
                java.lang.Object r4 = r4.get()
                kotlinx.coroutines.CoroutineScope r4 = (kotlinx.coroutines.CoroutineScope) r4
                javax.inject.Provider r1 = r1.mainDispatcherProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineDispatcher r1 = (kotlinx.coroutines.CoroutineDispatcher) r1
                r0.<init>(r3, r2, r4, r1)
                return r0
            L_0x0a71:
                com.android.systemui.biometrics.data.repository.FingerprintPropertyRepositoryImpl r0 = new com.android.systemui.biometrics.data.repository.FingerprintPropertyRepositoryImpl
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                kotlinx.coroutines.CoroutineScope r3 = (kotlinx.coroutines.CoroutineScope) r3
                javax.inject.Provider r2 = r2.bgDispatcherProvider
                java.lang.Object r2 = r2.get()
                kotlinx.coroutines.CoroutineDispatcher r2 = (kotlinx.coroutines.CoroutineDispatcher) r2
                javax.inject.Provider r1 = r1.providesFingerprintManagerProvider
                java.lang.Object r1 = r1.get()
                android.hardware.fingerprint.FingerprintManager r1 = (android.hardware.fingerprint.FingerprintManager) r1
                r0.<init>(r3, r2, r1)
                return r0
            L_0x0a95:
                com.android.systemui.keyguard.data.repository.DevicePostureRepositoryImpl r0 = new com.android.systemui.keyguard.data.repository.DevicePostureRepositoryImpl
                javax.inject.Provider r2 = r2.devicePostureControllerImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.policy.DevicePostureController r2 = (com.android.systemui.statusbar.policy.DevicePostureController) r2
                javax.inject.Provider r1 = r1.mainDispatcherProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineDispatcher r1 = (kotlinx.coroutines.CoroutineDispatcher) r1
                r0.<init>(r2, r1)
                return r0
            L_0x0aad:
                com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl r0 = new com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl
                android.content.Context r4 = r1.context
                javax.inject.Provider r3 = r1.provideLockPatternUtilsProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                com.android.internal.widget.LockPatternUtils r5 = (com.android.internal.widget.LockPatternUtils) r5
                javax.inject.Provider r3 = r2.broadcastDispatcherProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.broadcast.BroadcastDispatcher r6 = (com.android.systemui.broadcast.BroadcastDispatcher) r6
                dagger.internal.DelegateFactory r3 = r2.authControllerProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.biometrics.AuthController r7 = (com.android.systemui.biometrics.AuthController) r7
                javax.inject.Provider r3 = r2.userRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                com.android.systemui.user.data.repository.UserRepositoryImpl r8 = (com.android.systemui.user.data.repository.UserRepositoryImpl) r8
                javax.inject.Provider r3 = r1.provideDevicePolicyManagerProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                android.app.admin.DevicePolicyManager r9 = (android.app.admin.DevicePolicyManager) r9
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                kotlinx.coroutines.CoroutineScope r10 = (kotlinx.coroutines.CoroutineScope) r10
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                kotlinx.coroutines.CoroutineDispatcher r11 = (kotlinx.coroutines.CoroutineDispatcher) r11
                javax.inject.Provider r3 = r1.providesBiometricManagerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                android.hardware.biometrics.BiometricManager r12 = (android.hardware.biometrics.BiometricManager) r12
                javax.inject.Provider r3 = r2.devicePostureRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.systemui.keyguard.data.repository.DevicePostureRepositoryImpl r13 = (com.android.systemui.keyguard.data.repository.DevicePostureRepositoryImpl) r13
                javax.inject.Provider r3 = r2.facePropertyRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.biometrics.data.repository.FacePropertyRepositoryImpl r14 = (com.android.systemui.biometrics.data.repository.FacePropertyRepositoryImpl) r14
                javax.inject.Provider r3 = r2.fingerprintPropertyRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                com.android.systemui.biometrics.data.repository.FingerprintPropertyRepository r15 = (com.android.systemui.biometrics.data.repository.FingerprintPropertyRepository) r15
                javax.inject.Provider r2 = r2.mobileRepositorySwitcherProvider
                java.lang.Object r2 = r2.get()
                r16 = r2
                com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileConnectionsRepository r16 = (com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileConnectionsRepository) r16
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r17 = r1
                com.android.systemui.dump.DumpManager r17 = (com.android.systemui.dump.DumpManager) r17
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17)
                return r0
            L_0x0b45:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideFaceAuthLogFactory.provideFaceAuthLog(r0)
                return r0
            L_0x0b54:
                com.android.systemui.log.FaceAuthenticationLogger r0 = new com.android.systemui.log.FaceAuthenticationLogger
                javax.inject.Provider r1 = r2.provideFaceAuthLogProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r0.<init>(r1)
                return r0
            L_0x0b64:
                com.android.systemui.deviceentry.data.repository.DeviceEntryFaceAuthRepositoryImpl r0 = new com.android.systemui.deviceentry.data.repository.DeviceEntryFaceAuthRepositoryImpl
                android.content.Context r4 = r1.context
                javax.inject.Provider r3 = r1.provideFaceManagerProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                android.hardware.face.FaceManager r5 = (android.hardware.face.FaceManager) r5
                javax.inject.Provider r3 = r2.userRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.user.data.repository.UserRepositoryImpl r6 = (com.android.systemui.user.data.repository.UserRepositoryImpl) r6
                dagger.internal.DelegateFactory r3 = r2.keyguardBypassControllerProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.statusbar.phone.KeyguardBypassController r7 = (com.android.systemui.statusbar.phone.KeyguardBypassController) r7
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                kotlinx.coroutines.CoroutineScope r8 = (kotlinx.coroutines.CoroutineScope) r8
                javax.inject.Provider r3 = r1.mainDispatcherProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                kotlinx.coroutines.CoroutineDispatcher r9 = (kotlinx.coroutines.CoroutineDispatcher) r9
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                kotlinx.coroutines.CoroutineDispatcher r10 = (kotlinx.coroutines.CoroutineDispatcher) r10
                dagger.internal.DelegateFactory r3 = r2.sessionTrackerProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.log.SessionTracker r11 = (com.android.systemui.log.SessionTracker) r11
                javax.inject.Provider r3 = r1.provideUiEventLoggerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.internal.logging.UiEventLogger r12 = (com.android.internal.logging.UiEventLogger) r12
                javax.inject.Provider r3 = r2.faceAuthenticationLoggerProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.systemui.log.FaceAuthenticationLogger r13 = (com.android.systemui.log.FaceAuthenticationLogger) r13
                javax.inject.Provider r3 = r2.biometricSettingsRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl r14 = (com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl) r14
                javax.inject.Provider r3 = r2.deviceEntryFingerprintAuthRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                com.android.systemui.keyguard.data.repository.DeviceEntryFingerprintAuthRepository r15 = (com.android.systemui.keyguard.data.repository.DeviceEntryFingerprintAuthRepository) r15
                javax.inject.Provider r3 = r2.trustRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.keyguard.data.repository.TrustRepositoryImpl r16 = (com.android.systemui.keyguard.data.repository.TrustRepositoryImpl) r16
                javax.inject.Provider r3 = r2.keyguardRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl r17 = (com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl) r17
                dagger.internal.DelegateFactory r3 = r2.powerInteractorProvider
                java.lang.Object r3 = r3.get()
                r18 = r3
                com.android.systemui.power.domain.interactor.PowerInteractor r18 = (com.android.systemui.power.domain.interactor.PowerInteractor) r18
                dagger.internal.DelegateFactory r3 = r2.keyguardInteractorProvider
                java.lang.Object r3 = r3.get()
                r19 = r3
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r19 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r19
                javax.inject.Provider r3 = r2.alternateBouncerInteractorProvider
                java.lang.Object r3 = r3.get()
                r20 = r3
                com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor r20 = (com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor) r20
                javax.inject.Provider r3 = r2.provideFaceDetectTableLogProvider
                java.lang.Object r3 = r3.get()
                r21 = r3
                com.android.systemui.log.table.TableLogBuffer r21 = (com.android.systemui.log.table.TableLogBuffer) r21
                javax.inject.Provider r3 = r2.provideFaceAuthTableLogProvider
                java.lang.Object r3 = r3.get()
                r22 = r3
                com.android.systemui.log.table.TableLogBuffer r22 = (com.android.systemui.log.table.TableLogBuffer) r22
                dagger.internal.DelegateFactory r3 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r3 = r3.get()
                r23 = r3
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r23 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r23
                javax.inject.Provider r2 = r2.providesDisplayStateInteractorProvider
                java.lang.Object r2 = r2.get()
                r24 = r2
                com.android.systemui.biometrics.domain.interactor.DisplayStateInteractorImpl r24 = (com.android.systemui.biometrics.domain.interactor.DisplayStateInteractorImpl) r24
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r25 = r1
                com.android.systemui.dump.DumpManager r25 = (com.android.systemui.dump.DumpManager) r25
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25)
                return r0
            L_0x0c5a:
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryInteractor r0 = new com.android.systemui.deviceentry.domain.interactor.DeviceEntryInteractor
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r27 = r1
                kotlinx.coroutines.CoroutineScope r27 = (kotlinx.coroutines.CoroutineScope) r27
                javax.inject.Provider r1 = r2.deviceEntryRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r28 = r1
                com.android.systemui.deviceentry.data.repository.DeviceEntryRepositoryImpl r28 = (com.android.systemui.deviceentry.data.repository.DeviceEntryRepositoryImpl) r28
                javax.inject.Provider r1 = r2.authenticationInteractorProvider
                java.lang.Object r1 = r1.get()
                r29 = r1
                com.android.systemui.authentication.domain.interactor.AuthenticationInteractor r29 = (com.android.systemui.authentication.domain.interactor.AuthenticationInteractor) r29
                javax.inject.Provider r1 = r2.sceneInteractorProvider
                java.lang.Object r1 = r1.get()
                r30 = r1
                com.android.systemui.scene.domain.interactor.SceneInteractor r30 = (com.android.systemui.scene.domain.interactor.SceneInteractor) r30
                dagger.internal.DelegateFactory r1 = r2.deviceEntryFaceAuthRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r31 = r1
                com.android.systemui.deviceentry.data.repository.DeviceEntryFaceAuthRepositoryImpl r31 = (com.android.systemui.deviceentry.data.repository.DeviceEntryFaceAuthRepositoryImpl) r31
                javax.inject.Provider r1 = r2.trustRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r32 = r1
                com.android.systemui.keyguard.data.repository.TrustRepositoryImpl r32 = (com.android.systemui.keyguard.data.repository.TrustRepositoryImpl) r32
                javax.inject.Provider r1 = r2.implProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.scene.shared.flag.SceneContainerFlags r1 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r1
                javax.inject.Provider r1 = r2.deviceUnlockedInteractorProvider
                java.lang.Object r1 = r1.get()
                r33 = r1
                com.android.systemui.deviceentry.domain.interactor.DeviceUnlockedInteractor r33 = (com.android.systemui.deviceentry.domain.interactor.DeviceUnlockedInteractor) r33
                r26 = r0
                r26.<init>(r27, r28, r29, r30, r31, r32, r33)
                return r0
            L_0x0cb8:
                com.android.systemui.shade.ShadeControllerSceneImpl r0 = new com.android.systemui.shade.ShadeControllerSceneImpl
                javax.inject.Provider r1 = r1.mainDispatcherProvider
                java.lang.Object r1 = r1.get()
                r3 = r1
                kotlinx.coroutines.CoroutineDispatcher r3 = (kotlinx.coroutines.CoroutineDispatcher) r3
                javax.inject.Provider r1 = r2.bgApplicationScopeProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                kotlinx.coroutines.CoroutineScope r4 = (kotlinx.coroutines.CoroutineScope) r4
                dagger.internal.DelegateFactory r1 = r2.shadeInteractorImplProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.shade.domain.interactor.ShadeInteractor r5 = (com.android.systemui.shade.domain.interactor.ShadeInteractor) r5
                javax.inject.Provider r1 = r2.sceneInteractorProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.scene.domain.interactor.SceneInteractor r6 = (com.android.systemui.scene.domain.interactor.SceneInteractor) r6
                dagger.internal.DelegateFactory r1 = r2.deviceEntryInteractorProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryInteractor r7 = (com.android.systemui.deviceentry.domain.interactor.DeviceEntryInteractor) r7
                javax.inject.Provider r1 = r2.providesNotificationStackScrollLayoutProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout r8 = (com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout) r8
                javax.inject.Provider r1 = r2.provideShadeTouchLogBufferProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.log.LogBuffer r9 = (com.android.systemui.log.LogBuffer) r9
                javax.inject.Provider r1 = r2.provideCommandQueueProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.statusbar.CommandQueue r10 = (com.android.systemui.statusbar.CommandQueue) r10
                dagger.internal.DelegateFactory r1 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r11 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r11
                dagger.internal.DelegateFactory r1 = r2.notificationShadeWindowControllerImplProvider
                java.lang.Object r1 = r1.get()
                r12 = r1
                com.android.systemui.statusbar.NotificationShadeWindowController r12 = (com.android.systemui.statusbar.NotificationShadeWindowController) r12
                dagger.internal.DelegateFactory r1 = r2.assistManagerGoogleProvider
                dagger.Lazy r13 = dagger.internal.DoubleCheck.lazy(r1)
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r9
                r9 = r10
                r10 = r11
                r11 = r12
                r12 = r13
                r1.<init>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
                return r0
            L_0x0d3c:
                javax.inject.Provider r0 = r2.implProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.scene.shared.flag.SceneContainerFlags r0 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r0
                javax.inject.Provider unused = r2.shadeControllerSceneImplProvider
                javax.inject.Provider r0 = r2.shadeControllerImplProvider
                com.android.systemui.shade.ShadeController r0 = com.android.systemui.shade.ShadeModule_Companion_ProvideShadeControllerFactory.provideShadeController(r0)
                return r0
            L_0x0d52:
                com.android.systemui.accessibility.SystemActions r0 = new com.android.systemui.accessibility.SystemActions
                android.content.Context r3 = r1.context
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                com.android.systemui.settings.UserTracker r4 = (com.android.systemui.settings.UserTracker) r4
                dagger.internal.DelegateFactory r1 = r2.notificationShadeWindowControllerImplProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.statusbar.NotificationShadeWindowController r5 = (com.android.systemui.statusbar.NotificationShadeWindowController) r5
                dagger.internal.DelegateFactory r1 = r2.keyguardStateControllerImplProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.statusbar.policy.KeyguardStateController r6 = (com.android.systemui.statusbar.policy.KeyguardStateController) r6
                dagger.internal.DelegateFactory r1 = r2.provideShadeControllerProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.shade.ShadeController r7 = (com.android.systemui.shade.ShadeController) r7
                dagger.internal.DelegateFactory r1 = r2.notificationPanelViewControllerProvider
                dagger.Lazy r8 = dagger.internal.DoubleCheck.lazy(r1)
                javax.inject.Provider r1 = r2.provideRecentsProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.recents.Recents r1 = (com.android.systemui.recents.Recents) r1
                java.util.Optional r9 = java.util.Optional.of(r1)
                javax.inject.Provider r1 = r2.provideDisplayTrackerProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.settings.DisplayTracker r10 = (com.android.systemui.settings.DisplayTracker) r10
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r9
                r9 = r10
                r1.<init>(r2, r3, r4, r5, r6, r7, r8, r9)
                return r0
            L_0x0db0:
                com.android.systemui.accessibility.AccessibilityButtonTargetsObserver r0 = new com.android.systemui.accessibility.AccessibilityButtonTargetsObserver
                android.content.Context r1 = r1.context
                dagger.internal.DelegateFactory r2 = r2.provideUserTrackerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.settings.UserTracker r2 = (com.android.systemui.settings.UserTracker) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0dc4:
                com.android.systemui.accessibility.AccessibilityButtonModeObserver r0 = new com.android.systemui.accessibility.AccessibilityButtonModeObserver
                android.content.Context r1 = r1.context
                dagger.internal.DelegateFactory r2 = r2.provideUserTrackerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.settings.UserTracker r2 = (com.android.systemui.settings.UserTracker) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0dd8:
                com.android.systemui.navigationbar.NavBarHelper r0 = new com.android.systemui.navigationbar.NavBarHelper
                android.content.Context r4 = r1.context
                javax.inject.Provider r3 = r1.provideAccessibilityManagerProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                android.view.accessibility.AccessibilityManager r5 = (android.view.accessibility.AccessibilityManager) r5
                javax.inject.Provider r3 = r2.accessibilityButtonModeObserverProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.accessibility.AccessibilityButtonModeObserver r6 = (com.android.systemui.accessibility.AccessibilityButtonModeObserver) r6
                javax.inject.Provider r3 = r2.accessibilityButtonTargetsObserverProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.accessibility.AccessibilityButtonTargetsObserver r7 = (com.android.systemui.accessibility.AccessibilityButtonTargetsObserver) r7
                javax.inject.Provider r3 = r2.systemActionsProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                com.android.systemui.accessibility.SystemActions r8 = (com.android.systemui.accessibility.SystemActions) r8
                dagger.internal.DelegateFactory r3 = r2.overviewProxyServiceProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                com.android.systemui.recents.OverviewProxyService r9 = (com.android.systemui.recents.OverviewProxyService) r9
                dagger.internal.DelegateFactory r3 = r2.assistManagerGoogleProvider
                dagger.Lazy r10 = dagger.internal.DoubleCheck.lazy(r3)
                dagger.internal.DelegateFactory r3 = r2.optionalOfCentralSurfacesProvider
                dagger.internal.DoubleCheck.lazy(r3)
                dagger.internal.DelegateFactory r3 = r2.keyguardStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.statusbar.policy.KeyguardStateController r11 = (com.android.systemui.statusbar.policy.KeyguardStateController) r11
                javax.inject.Provider r3 = r2.navigationModeControllerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.navigationbar.NavigationModeController r12 = (com.android.systemui.navigationbar.NavigationModeController) r12
                com.android.systemui.navigationbar.gestural.EdgeBackGestureHandler$Factory r13 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1506$$Nest$medgeBackGestureHandlerFactory(r2)
                javax.inject.Provider r3 = r1.provideIWindowManagerProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                android.view.IWindowManager r14 = (android.view.IWindowManager) r14
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                com.android.systemui.settings.UserTracker r15 = (com.android.systemui.settings.UserTracker) r15
                javax.inject.Provider r3 = r2.provideDisplayTrackerProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.settings.DisplayTracker r16 = (com.android.systemui.settings.DisplayTracker) r16
                dagger.internal.DelegateFactory r3 = r2.notificationShadeWindowControllerImplProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                com.android.systemui.statusbar.NotificationShadeWindowController r17 = (com.android.systemui.statusbar.NotificationShadeWindowController) r17
                javax.inject.Provider r3 = r1.dumpManagerProvider
                java.lang.Object r3 = r3.get()
                r18 = r3
                com.android.systemui.dump.DumpManager r18 = (com.android.systemui.dump.DumpManager) r18
                javax.inject.Provider r2 = r2.provideCommandQueueProvider
                java.lang.Object r2 = r2.get()
                r19 = r2
                com.android.systemui.statusbar.CommandQueue r19 = (com.android.systemui.statusbar.CommandQueue) r19
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                r20 = r1
                java.util.concurrent.Executor r20 = (java.util.concurrent.Executor) r20
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20)
                return r0
            L_0x0e8f:
                com.android.systemui.common.ui.data.repository.ConfigurationRepositoryImpl r0 = new com.android.systemui.common.ui.data.repository.ConfigurationRepositoryImpl
                javax.inject.Provider r2 = r2.configurationControllerImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.policy.ConfigurationController r2 = (com.android.systemui.statusbar.policy.ConfigurationController) r2
                android.content.Context r3 = r1.context
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                com.android.systemui.util.wrapper.DisplayUtilsWrapper r4 = new com.android.systemui.util.wrapper.DisplayUtilsWrapper
                r4.<init>()
                r0.<init>(r2, r3, r1, r4)
                return r0
            L_0x0eb2:
                com.android.systemui.display.data.repository.DisplayRepositoryImpl r0 = new com.android.systemui.display.data.repository.DisplayRepositoryImpl
                javax.inject.Provider r1 = r1.provideDisplayManagerProvider
                java.lang.Object r1 = r1.get()
                android.hardware.display.DisplayManager r1 = (android.hardware.display.DisplayManager) r1
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r3 = r2.provideBgHandlerProvider
                java.lang.Object r3 = r3.get()
                android.os.Handler r3 = (android.os.Handler) r3
                javax.inject.Provider r4 = r2.bgApplicationScopeProvider
                java.lang.Object r4 = r4.get()
                kotlinx.coroutines.CoroutineScope r4 = (kotlinx.coroutines.CoroutineScope) r4
                javax.inject.Provider r2 = r2.bgDispatcherProvider
                java.lang.Object r2 = r2.get()
                kotlinx.coroutines.CoroutineDispatcher r2 = (kotlinx.coroutines.CoroutineDispatcher) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x0ee0:
                com.android.systemui.util.kotlin.SysUICoroutinesModule r0 = r2.sysUICoroutinesModule
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r2 = r2.bgCoroutineContextProvider
                java.lang.Object r2 = r2.get()
                kotlin.coroutines.CoroutineContext r2 = (kotlin.coroutines.CoroutineContext) r2
                kotlinx.coroutines.internal.ContextScope r0 = com.android.systemui.util.kotlin.SysUICoroutinesModule_BgApplicationScopeFactory.bgApplicationScope(r0, r1, r2)
                return r0
            L_0x0efb:
                com.android.systemui.biometrics.data.repository.DisplayStateRepositoryImpl r0 = new com.android.systemui.biometrics.data.repository.DisplayStateRepositoryImpl
                javax.inject.Provider r3 = r2.bgApplicationScopeProvider
                java.lang.Object r3 = r3.get()
                kotlinx.coroutines.CoroutineScope r3 = (kotlinx.coroutines.CoroutineScope) r3
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                android.content.Context r1 = (android.content.Context) r1
                com.android.systemui.display.data.repository.DeviceStateRepositoryImpl r4 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1499$$Nest$mdeviceStateRepositoryImpl(r2)
                javax.inject.Provider r2 = r2.displayRepositoryImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.display.data.repository.DisplayRepository r2 = (com.android.systemui.display.data.repository.DisplayRepository) r2
                r0.<init>(r3, r1, r4, r2)
                return r0
            L_0x0f21:
                com.android.systemui.biometrics.data.repository.FacePropertyRepositoryImpl r0 = new com.android.systemui.biometrics.data.repository.FacePropertyRepositoryImpl
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideApplicationContextProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                android.content.Context r6 = (android.content.Context) r6
                javax.inject.Provider r3 = r1.provideMainExecutorProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                java.util.concurrent.Executor r7 = (java.util.concurrent.Executor) r7
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                kotlinx.coroutines.CoroutineScope r8 = (kotlinx.coroutines.CoroutineScope) r8
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                kotlinx.coroutines.CoroutineDispatcher r9 = (kotlinx.coroutines.CoroutineDispatcher) r9
                javax.inject.Provider r3 = r1.provideFaceManagerProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                android.hardware.face.FaceManager r10 = (android.hardware.face.FaceManager) r10
                javax.inject.Provider r1 = r1.provideCameraManagerProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                android.hardware.camera2.CameraManager r11 = (android.hardware.camera2.CameraManager) r11
                javax.inject.Provider r1 = r2.displayStateRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r12 = r1
                com.android.systemui.biometrics.data.repository.DisplayStateRepository r12 = (com.android.systemui.biometrics.data.repository.DisplayStateRepository) r12
                javax.inject.Provider r1 = r2.configurationRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r13 = r1
                com.android.systemui.common.ui.data.repository.ConfigurationRepository r13 = (com.android.systemui.common.ui.data.repository.ConfigurationRepository) r13
                r5 = r0
                r5.<init>(r6, r7, r8, r9, r10, r11, r12, r13)
                return r0
            L_0x0f7a:
                com.android.systemui.dreams.DreamOverlayCallbackController r0 = new com.android.systemui.dreams.DreamOverlayCallbackController
                r0.<init>()
                return r0
            L_0x0f80:
                com.android.systemui.doze.DozeTransitionListener r0 = new com.android.systemui.doze.DozeTransitionListener
                r0.<init>()
                return r0
            L_0x0f86:
                com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl r0 = new com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl
                dagger.internal.DelegateFactory r3 = r2.statusBarStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.plugins.statusbar.StatusBarStateController r3 = (com.android.systemui.plugins.statusbar.StatusBarStateController) r3
                dagger.internal.DelegateFactory r4 = r2.keyguardStateControllerImplProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.statusbar.policy.KeyguardStateController r4 = (com.android.systemui.statusbar.policy.KeyguardStateController) r4
                dagger.internal.DelegateFactory r5 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r5 = r5.get()
                com.android.keyguard.KeyguardUpdateMonitor r5 = (com.android.keyguard.KeyguardUpdateMonitor) r5
                javax.inject.Provider r6 = r2.dozeTransitionListenerProvider
                java.lang.Object r6 = r6.get()
                com.android.systemui.doze.DozeTransitionListener r6 = (com.android.systemui.doze.DozeTransitionListener) r6
                dagger.internal.DelegateFactory r7 = r2.authControllerProvider
                java.lang.Object r7 = r7.get()
                com.android.systemui.biometrics.AuthController r7 = (com.android.systemui.biometrics.AuthController) r7
                javax.inject.Provider r8 = r2.dreamOverlayCallbackControllerProvider
                java.lang.Object r8 = r8.get()
                com.android.systemui.dreams.DreamOverlayCallbackController r8 = (com.android.systemui.dreams.DreamOverlayCallbackController) r8
                javax.inject.Provider r9 = r1.mainDispatcherProvider
                java.lang.Object r9 = r9.get()
                kotlinx.coroutines.CoroutineDispatcher r9 = (kotlinx.coroutines.CoroutineDispatcher) r9
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                kotlinx.coroutines.CoroutineScope r10 = (kotlinx.coroutines.CoroutineScope) r10
                javax.inject.Provider r1 = r2.bindSystemClockProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                com.android.systemui.util.time.SystemClock r11 = (com.android.systemui.util.time.SystemClock) r11
                javax.inject.Provider r1 = r2.facePropertyRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r12 = r1
                com.android.systemui.biometrics.data.repository.FacePropertyRepositoryImpl r12 = (com.android.systemui.biometrics.data.repository.FacePropertyRepositoryImpl) r12
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                r13 = r1
                com.android.systemui.settings.UserTracker r13 = (com.android.systemui.settings.UserTracker) r13
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r9
                r9 = r10
                r10 = r11
                r11 = r12
                r12 = r13
                r1.<init>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12)
                return r0
            L_0x1004:
                com.android.systemui.deviceentry.data.repository.DeviceEntryRepositoryImpl r0 = new com.android.systemui.deviceentry.data.repository.DeviceEntryRepositoryImpl
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                kotlinx.coroutines.CoroutineScope r15 = (kotlinx.coroutines.CoroutineScope) r15
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                kotlinx.coroutines.CoroutineDispatcher r16 = (kotlinx.coroutines.CoroutineDispatcher) r16
                javax.inject.Provider r3 = r2.userRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                com.android.systemui.user.data.repository.UserRepositoryImpl r17 = (com.android.systemui.user.data.repository.UserRepositoryImpl) r17
                javax.inject.Provider r1 = r1.provideLockPatternUtilsProvider
                java.lang.Object r1 = r1.get()
                r18 = r1
                com.android.internal.widget.LockPatternUtils r18 = (com.android.internal.widget.LockPatternUtils) r18
                dagger.internal.DelegateFactory r1 = r2.keyguardBypassControllerProvider
                java.lang.Object r1 = r1.get()
                r19 = r1
                com.android.systemui.statusbar.phone.KeyguardBypassController r19 = (com.android.systemui.statusbar.phone.KeyguardBypassController) r19
                dagger.internal.DelegateFactory r1 = r2.keyguardStateControllerImplProvider
                java.lang.Object r1 = r1.get()
                r20 = r1
                com.android.systemui.statusbar.policy.KeyguardStateController r20 = (com.android.systemui.statusbar.policy.KeyguardStateController) r20
                javax.inject.Provider r1 = r2.keyguardRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl r1 = (com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl) r1
                r14 = r0
                r14.<init>(r15, r16, r17, r18, r19, r20)
                return r0
            L_0x105c:
                com.android.systemui.statusbar.pipeline.mobile.data.repository.demo.DemoModeMobileConnectionDataSource r0 = new com.android.systemui.statusbar.pipeline.mobile.data.repository.demo.DemoModeMobileConnectionDataSource
                javax.inject.Provider r2 = r2.provideDemoModeControllerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.demomode.DemoModeController r2 = (com.android.systemui.demomode.DemoModeController) r2
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                r0.<init>(r2, r1)
                return r0
            L_0x1076:
                com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.CarrierMergedConnectionRepository$Factory r0 = new com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.CarrierMergedConnectionRepository$Factory
                javax.inject.Provider r3 = r1.provideTelephonyManagerProvider
                java.lang.Object r3 = r3.get()
                android.telephony.TelephonyManager r3 = (android.telephony.TelephonyManager) r3
                javax.inject.Provider r4 = r2.bgCoroutineContextProvider
                java.lang.Object r4 = r4.get()
                kotlin.coroutines.CoroutineContext r4 = (kotlin.coroutines.CoroutineContext) r4
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r2 = r2.wifiRepositorySwitcherProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepository r2 = (com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepository) r2
                r0.<init>(r3, r4, r1, r2)
                return r0
            L_0x10a2:
                com.android.systemui.statusbar.pipeline.mobile.data.repository.CarrierConfigRepository r0 = new com.android.systemui.statusbar.pipeline.mobile.data.repository.CarrierConfigRepository
                javax.inject.Provider r3 = r2.broadcastDispatcherProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.broadcast.BroadcastDispatcher r6 = (com.android.systemui.broadcast.BroadcastDispatcher) r6
                javax.inject.Provider r3 = r1.provideCarrierConfigManagerProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                android.telephony.CarrierConfigManager r7 = (android.telephony.CarrierConfigManager) r7
                javax.inject.Provider r3 = r1.dumpManagerProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                com.android.systemui.dump.DumpManager r8 = (com.android.systemui.dump.DumpManager) r8
                javax.inject.Provider r2 = r2.mobileInputLoggerProvider
                java.lang.Object r2 = r2.get()
                r9 = r2
                com.android.systemui.statusbar.pipeline.mobile.data.MobileInputLogger r9 = (com.android.systemui.statusbar.pipeline.mobile.data.MobileInputLogger) r9
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                kotlinx.coroutines.CoroutineScope r10 = (kotlinx.coroutines.CoroutineScope) r10
                r5 = r0
                r5.<init>(r6, r7, r8, r9, r10)
                return r0
            L_0x10dc:
                com.android.systemui.statusbar.pipeline.wifi.data.repository.demo.DemoModeWifiDataSource r0 = new com.android.systemui.statusbar.pipeline.wifi.data.repository.demo.DemoModeWifiDataSource
                javax.inject.Provider r2 = r2.provideDemoModeControllerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.demomode.DemoModeController r2 = (com.android.systemui.demomode.DemoModeController) r2
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                r0.<init>(r2, r1)
                return r0
            L_0x10f6:
                javax.inject.Provider r0 = r2.tableLogBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.table.TableLogBufferFactory r0 = (com.android.systemui.log.table.TableLogBufferFactory) r0
                com.android.systemui.log.table.TableLogBuffer r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideWifiTrackerLibTableLogBufferFactory.provideWifiTrackerLibTableLogBuffer(r0)
                return r0
            L_0x1105:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideWifiTrackerLibInputLogBufferFactory.provideWifiTrackerLibInputLogBuffer(r0)
                return r0
            L_0x1114:
                com.android.systemui.statusbar.connectivity.WifiPickerTrackerFactory r0 = new com.android.systemui.statusbar.connectivity.WifiPickerTrackerFactory
                android.content.Context r3 = r1.context
                javax.inject.Provider r4 = r1.provideWifiManagerProvider
                java.lang.Object r4 = r4.get()
                android.net.wifi.WifiManager r4 = (android.net.wifi.WifiManager) r4
                javax.inject.Provider r5 = r1.provideConnectivityManagagerProvider
                java.lang.Object r5 = r5.get()
                android.net.ConnectivityManager r5 = (android.net.ConnectivityManager) r5
                javax.inject.Provider r2 = r2.bindSystemClockProvider
                java.lang.Object r2 = r2.get()
                r6 = r2
                com.android.systemui.util.time.SystemClock r6 = (com.android.systemui.util.time.SystemClock) r6
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideMainHandlerProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                android.os.Handler r7 = (android.os.Handler) r7
                com.android.systemui.util.concurrency.ThreadFactoryImpl r8 = new com.android.systemui.util.concurrency.ThreadFactoryImpl
                r8.<init>()
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r1.<init>(r2, r3, r4, r5, r6, r7)
                return r0
            L_0x1152:
                com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.WifiRepositoryViaTrackerLib$Factory r0 = new com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.WifiRepositoryViaTrackerLib$Factory
                dagger.internal.DelegateFactory r3 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                com.android.systemui.flags.FeatureFlags r10 = (com.android.systemui.flags.FeatureFlags) r10
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                kotlinx.coroutines.CoroutineScope r11 = (kotlinx.coroutines.CoroutineScope) r11
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                r12 = r1
                java.util.concurrent.Executor r12 = (java.util.concurrent.Executor) r12
                javax.inject.Provider r1 = r2.bgDispatcherProvider
                java.lang.Object r1 = r1.get()
                r13 = r1
                kotlinx.coroutines.CoroutineDispatcher r13 = (kotlinx.coroutines.CoroutineDispatcher) r13
                javax.inject.Provider r1 = r2.wifiPickerTrackerFactoryProvider
                java.lang.Object r1 = r1.get()
                r14 = r1
                com.android.systemui.statusbar.connectivity.WifiPickerTrackerFactory r14 = (com.android.systemui.statusbar.connectivity.WifiPickerTrackerFactory) r14
                javax.inject.Provider r1 = r2.provideWifiTrackerLibInputLogBufferProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                com.android.systemui.log.LogBuffer r15 = (com.android.systemui.log.LogBuffer) r15
                javax.inject.Provider r1 = r2.provideWifiTrackerLibTableLogBufferProvider
                java.lang.Object r1 = r1.get()
                r16 = r1
                com.android.systemui.log.table.TableLogBuffer r16 = (com.android.systemui.log.table.TableLogBuffer) r16
                r9 = r0
                r9.<init>(r10, r11, r12, r13, r14, r15, r16)
                return r0
            L_0x11a5:
                javax.inject.Provider r0 = r1.provideWifiManagerProvider
                java.lang.Object r0 = r0.get()
                android.net.wifi.WifiManager r0 = (android.net.wifi.WifiManager) r0
                javax.inject.Provider r1 = r2.disabledWifiRepositoryProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.DisabledWifiRepository r1 = (com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.DisabledWifiRepository) r1
                javax.inject.Provider r2 = r2.factoryProvider2
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.WifiRepositoryViaTrackerLib$Factory r2 = (com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.WifiRepositoryViaTrackerLib.Factory) r2
                com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepositoryViaTrackerLibDagger r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideWifiRepositoryViaTrackerLibDaggerFactory.provideWifiRepositoryViaTrackerLibDagger(r0, r1, r2)
                return r0
            L_0x11c4:
                javax.inject.Provider r0 = r2.tableLogBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.table.TableLogBufferFactory r0 = (com.android.systemui.log.table.TableLogBufferFactory) r0
                com.android.systemui.log.table.TableLogBuffer r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideWifiTableLogBufferFactory.provideWifiTableLogBuffer(r0)
                return r0
            L_0x11d3:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideWifiInputLogBufferFactory.provideWifiInputLogBuffer(r0)
                return r0
            L_0x11e2:
                com.android.systemui.statusbar.pipeline.wifi.shared.WifiInputLogger r0 = new com.android.systemui.statusbar.pipeline.wifi.shared.WifiInputLogger
                javax.inject.Provider r1 = r2.provideWifiInputLogBufferProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r0.<init>(r1)
                return r0
            L_0x11f2:
                com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.WifiRepositoryImpl$Factory r0 = new com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.WifiRepositoryImpl$Factory
                javax.inject.Provider r3 = r2.broadcastDispatcherProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.broadcast.BroadcastDispatcher r3 = (com.android.systemui.broadcast.BroadcastDispatcher) r3
                javax.inject.Provider r4 = r1.provideConnectivityManagagerProvider
                java.lang.Object r4 = r4.get()
                android.net.ConnectivityManager r4 = (android.net.ConnectivityManager) r4
                javax.inject.Provider r5 = r2.connectivityRepositoryImplProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl r5 = (com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl) r5
                javax.inject.Provider r6 = r2.wifiInputLoggerProvider
                java.lang.Object r6 = r6.get()
                com.android.systemui.statusbar.pipeline.wifi.shared.WifiInputLogger r6 = (com.android.systemui.statusbar.pipeline.wifi.shared.WifiInputLogger) r6
                javax.inject.Provider r7 = r2.provideWifiTableLogBufferProvider
                java.lang.Object r7 = r7.get()
                com.android.systemui.log.table.TableLogBuffer r7 = (com.android.systemui.log.table.TableLogBuffer) r7
                javax.inject.Provider r8 = r1.provideMainExecutorProvider
                java.lang.Object r8 = r8.get()
                java.util.concurrent.Executor r8 = (java.util.concurrent.Executor) r8
                javax.inject.Provider r2 = r2.bgDispatcherProvider
                java.lang.Object r2 = r2.get()
                r9 = r2
                kotlinx.coroutines.CoroutineDispatcher r9 = (kotlinx.coroutines.CoroutineDispatcher) r9
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                kotlinx.coroutines.CoroutineScope r10 = (kotlinx.coroutines.CoroutineScope) r10
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10)
                return r0
            L_0x1249:
                com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.DisabledWifiRepository r0 = new com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.DisabledWifiRepository
                r0.<init>()
                return r0
            L_0x124f:
                javax.inject.Provider r0 = r1.provideWifiManagerProvider
                java.lang.Object r0 = r0.get()
                android.net.wifi.WifiManager r0 = (android.net.wifi.WifiManager) r0
                javax.inject.Provider r1 = r2.disabledWifiRepositoryProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.DisabledWifiRepository r1 = (com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.DisabledWifiRepository) r1
                javax.inject.Provider r2 = r2.factoryProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.WifiRepositoryImpl$Factory r2 = (com.android.systemui.statusbar.pipeline.wifi.data.repository.prod.WifiRepositoryImpl.Factory) r2
                com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepositoryDagger r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideWifiRepositoryDaggerFactory.provideWifiRepositoryDagger(r0, r1, r2)
                return r0
            L_0x126e:
                javax.inject.Provider r0 = r2.provideWifiRepositoryDaggerProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepositoryDagger r0 = (com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepositoryDagger) r0
                javax.inject.Provider r1 = r2.provideWifiRepositoryViaTrackerLibDaggerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepositoryViaTrackerLibDagger r1 = (com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepositoryViaTrackerLibDagger) r1
                dagger.internal.DelegateFactory r2 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.flags.FeatureFlags r2 = (com.android.systemui.flags.FeatureFlags) r2
                com.android.systemui.statusbar.pipeline.wifi.data.repository.RealWifiRepository r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideRealWifiRepositoryFactory.provideRealWifiRepository(r0, r1, r2)
                return r0
            L_0x1291:
                com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepositorySwitcher r0 = new com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepositorySwitcher
                javax.inject.Provider r3 = r2.provideRealWifiRepositoryProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.statusbar.pipeline.wifi.data.repository.RealWifiRepository r3 = (com.android.systemui.statusbar.pipeline.wifi.data.repository.RealWifiRepository) r3
                com.android.systemui.statusbar.pipeline.wifi.data.repository.demo.DemoWifiRepository r4 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1495$$Nest$mdemoWifiRepository(r2)
                javax.inject.Provider r2 = r2.provideDemoModeControllerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.demomode.DemoModeController r2 = (com.android.systemui.demomode.DemoModeController) r2
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                r0.<init>(r3, r4, r2, r1)
                return r0
            L_0x12b9:
                javax.inject.Provider r0 = r2.tableLogBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.table.TableLogBufferFactory r0 = (com.android.systemui.log.table.TableLogBufferFactory) r0
                com.android.systemui.log.table.TableLogBuffer r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideAirplaneTableLogBufferFactory.provideAirplaneTableLogBuffer(r0)
                return r0
            L_0x12c8:
                com.android.systemui.util.kotlin.SysUICoroutinesModule r0 = r2.sysUICoroutinesModule
                javax.inject.Provider r1 = r1.tracingCoroutineContextProvider
                java.lang.Object r1 = r1.get()
                kotlin.coroutines.CoroutineContext r1 = (kotlin.coroutines.CoroutineContext) r1
                javax.inject.Provider r2 = r2.bgDispatcherProvider
                java.lang.Object r2 = r2.get()
                kotlinx.coroutines.CoroutineDispatcher r2 = (kotlinx.coroutines.CoroutineDispatcher) r2
                kotlin.coroutines.CoroutineContext r0 = com.android.systemui.util.kotlin.SysUICoroutinesModule_BgCoroutineContextFactory.bgCoroutineContext(r0, r1, r2)
                return r0
            L_0x12e1:
                com.android.systemui.statusbar.pipeline.airplane.data.repository.AirplaneModeRepositoryImpl r0 = new com.android.systemui.statusbar.pipeline.airplane.data.repository.AirplaneModeRepositoryImpl
                javax.inject.Provider r3 = r1.provideConnectivityManagagerProvider
                java.lang.Object r3 = r3.get()
                android.net.ConnectivityManager r3 = (android.net.ConnectivityManager) r3
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r4 = r2.provideBgHandlerProvider
                java.lang.Object r4 = r4.get()
                android.os.Handler r4 = (android.os.Handler) r4
                javax.inject.Provider r5 = r2.bgCoroutineContextProvider
                java.lang.Object r5 = r5.get()
                kotlin.coroutines.CoroutineContext r5 = (kotlin.coroutines.CoroutineContext) r5
                com.android.systemui.util.settings.GlobalSettingsImpl r6 = r2.globalSettingsImpl()
                javax.inject.Provider r2 = r2.provideAirplaneTableLogBufferProvider
                java.lang.Object r2 = r2.get()
                r7 = r2
                com.android.systemui.log.table.TableLogBuffer r7 = (com.android.systemui.log.table.TableLogBuffer) r7
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                kotlinx.coroutines.CoroutineScope r8 = (kotlinx.coroutines.CoroutineScope) r8
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r1.<init>(r2, r3, r4, r5, r6, r7)
                return r0
            L_0x1324:
                com.android.systemui.log.table.TableLogBufferFactory r0 = new com.android.systemui.log.table.TableLogBufferFactory
                javax.inject.Provider r3 = r1.dumpManagerProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                com.android.systemui.dump.DumpManager r10 = (com.android.systemui.dump.DumpManager) r10
                javax.inject.Provider r3 = r2.bindSystemClockProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.util.time.SystemClock r11 = (com.android.systemui.util.time.SystemClock) r11
                javax.inject.Provider r3 = r2.provideLogcatEchoTrackerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.log.LogcatEchoTracker r12 = (com.android.systemui.log.LogcatEchoTracker) r12
                javax.inject.Provider r2 = r2.bgDispatcherProvider
                java.lang.Object r2 = r2.get()
                r13 = r2
                kotlinx.coroutines.CoroutineDispatcher r13 = (kotlinx.coroutines.CoroutineDispatcher) r13
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r14 = r1
                kotlinx.coroutines.CoroutineScope r14 = (kotlinx.coroutines.CoroutineScope) r14
                r9 = r0
                r9.<init>(r10, r11, r12, r13, r14)
                return r0
            L_0x1360:
                javax.inject.Provider r0 = r2.tableLogBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.table.TableLogBufferFactory r0 = (com.android.systemui.log.table.TableLogBufferFactory) r0
                com.android.systemui.log.table.TableLogBuffer r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideMobileSummaryLogBufferFactory.provideMobileSummaryLogBuffer(r0)
                return r0
            L_0x136f:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideMobileInputLogBufferFactory.provideMobileInputLogBuffer(r0)
                return r0
            L_0x137e:
                com.android.systemui.statusbar.pipeline.mobile.data.MobileInputLogger r0 = new com.android.systemui.statusbar.pipeline.mobile.data.MobileInputLogger
                javax.inject.Provider r1 = r2.provideMobileInputLogBufferProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r0.<init>(r1)
                return r0
            L_0x138e:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.statusbar.pipeline.dagger.StatusBarPipelineModule_Companion_ProvideSharedConnectivityTableLogBufferFactory.provideSharedConnectivityTableLogBuffer(r0)
                return r0
            L_0x139d:
                com.android.systemui.statusbar.pipeline.shared.ConnectivityInputLogger r0 = new com.android.systemui.statusbar.pipeline.shared.ConnectivityInputLogger
                javax.inject.Provider r1 = r2.provideSharedConnectivityTableLogBufferProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r0.<init>(r1)
                return r0
            L_0x13ad:
                com.android.systemui.statusbar.pipeline.shared.data.model.ConnectivitySlots r0 = new com.android.systemui.statusbar.pipeline.shared.data.model.ConnectivitySlots
                android.content.Context r1 = r1.context
                r0.<init>(r1)
                return r0
            L_0x13b7:
                com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl r0 = new com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl
                javax.inject.Provider r3 = r1.provideConnectivityManagagerProvider
                java.lang.Object r3 = r3.get()
                android.net.ConnectivityManager r3 = (android.net.ConnectivityManager) r3
                javax.inject.Provider r4 = r2.connectivitySlotsProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.statusbar.pipeline.shared.data.model.ConnectivitySlots r4 = (com.android.systemui.statusbar.pipeline.shared.data.model.ConnectivitySlots) r4
                android.content.Context r5 = r1.context
                javax.inject.Provider r6 = r1.dumpManagerProvider
                java.lang.Object r6 = r6.get()
                com.android.systemui.dump.DumpManager r6 = (com.android.systemui.dump.DumpManager) r6
                javax.inject.Provider r7 = r2.connectivityInputLoggerProvider
                java.lang.Object r7 = r7.get()
                com.android.systemui.statusbar.pipeline.shared.ConnectivityInputLogger r7 = (com.android.systemui.statusbar.pipeline.shared.ConnectivityInputLogger) r7
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                kotlinx.coroutines.CoroutineScope r8 = (kotlinx.coroutines.CoroutineScope) r8
                dagger.internal.DelegateFactory r1 = r2.tunerServiceImplProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.tuner.TunerService r9 = (com.android.systemui.tuner.TunerService) r9
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7, r8, r9)
                return r0
            L_0x1400:
                com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.MobileConnectionsRepositoryImpl r0 = new com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.MobileConnectionsRepositoryImpl
                javax.inject.Provider r3 = r2.connectivityRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl r11 = (com.android.systemui.statusbar.pipeline.shared.data.repository.ConnectivityRepositoryImpl) r11
                javax.inject.Provider r3 = r1.provideSubscriptionManagerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                android.telephony.SubscriptionManager r12 = (android.telephony.SubscriptionManager) r12
                com.android.systemui.statusbar.pipeline.mobile.util.SubscriptionManagerProxyImpl r13 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1687$$Nest$msubscriptionManagerProxyImpl(r2)
                javax.inject.Provider r3 = r1.provideTelephonyManagerProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                android.telephony.TelephonyManager r14 = (android.telephony.TelephonyManager) r14
                javax.inject.Provider r3 = r2.mobileInputLoggerProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                com.android.systemui.statusbar.pipeline.mobile.data.MobileInputLogger r15 = (com.android.systemui.statusbar.pipeline.mobile.data.MobileInputLogger) r15
                javax.inject.Provider r3 = r2.provideMobileSummaryLogBufferProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.log.table.TableLogBuffer r16 = (com.android.systemui.log.table.TableLogBuffer) r16
                com.android.systemui.statusbar.pipeline.mobile.util.MobileMappingsProxyImpl r17 = new com.android.systemui.statusbar.pipeline.mobile.util.MobileMappingsProxyImpl
                r17.<init>()
                javax.inject.Provider r3 = r2.broadcastDispatcherProvider
                java.lang.Object r3 = r3.get()
                r18 = r3
                com.android.systemui.broadcast.BroadcastDispatcher r18 = (com.android.systemui.broadcast.BroadcastDispatcher) r18
                android.content.Context r19 = r1.context
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                r20 = r3
                kotlinx.coroutines.CoroutineDispatcher r20 = (kotlinx.coroutines.CoroutineDispatcher) r20
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r21 = r1
                kotlinx.coroutines.CoroutineScope r21 = (kotlinx.coroutines.CoroutineScope) r21
                javax.inject.Provider r1 = r2.airplaneModeRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r22 = r1
                com.android.systemui.statusbar.pipeline.airplane.data.repository.AirplaneModeRepository r22 = (com.android.systemui.statusbar.pipeline.airplane.data.repository.AirplaneModeRepository) r22
                javax.inject.Provider r1 = r2.wifiRepositorySwitcherProvider
                java.lang.Object r1 = r1.get()
                r23 = r1
                com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepository r23 = (com.android.systemui.statusbar.pipeline.wifi.data.repository.WifiRepository) r23
                com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.FullMobileConnectionRepository$Factory r24 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1517$$Nest$mfullMobileConnectionRepositoryFactory(r2)
                dagger.internal.DelegateFactory r1 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r1 = r1.get()
                r25 = r1
                com.android.keyguard.KeyguardUpdateMonitor r25 = (com.android.keyguard.KeyguardUpdateMonitor) r25
                r10 = r0
                r10.<init>(r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25)
                return r0
            L_0x148e:
                com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileRepositorySwitcher r0 = new com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileRepositorySwitcher
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.mobileConnectionsRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.MobileConnectionsRepositoryImpl r3 = (com.android.systemui.statusbar.pipeline.mobile.data.repository.prod.MobileConnectionsRepositoryImpl) r3
                com.android.systemui.statusbar.pipeline.mobile.data.repository.demo.DemoMobileConnectionsRepository r4 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1494$$Nest$mdemoMobileConnectionsRepository(r2)
                javax.inject.Provider r2 = r2.provideDemoModeControllerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.demomode.DemoModeController r2 = (com.android.systemui.demomode.DemoModeController) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x14b6:
                android.content.res.Resources r0 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(r1)
                javax.inject.Provider r1 = r1.provideLockPatternUtilsProvider
                java.lang.Object r1 = r1.get()
                com.android.internal.widget.LockPatternUtils r1 = (com.android.internal.widget.LockPatternUtils) r1
                dagger.internal.DelegateFactory r2 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r2 = r2.get()
                com.android.keyguard.KeyguardUpdateMonitor r2 = (com.android.keyguard.KeyguardUpdateMonitor) r2
                com.android.keyguard.KeyguardSecurityModel r0 = com.android.keyguard.KeyguardSecurityModel_Factory.newInstance(r0, r1, r2)
                return r0
            L_0x14d3:
                com.android.systemui.scene.shared.flag.SceneContainerFlagsImpl r0 = com.android.systemui.scene.shared.flag.SceneContainerFlagsModule_ImplFactory.impl()
                return r0
            L_0x14d8:
                com.android.systemui.authentication.data.repository.AuthenticationRepositoryImpl r0 = new com.android.systemui.authentication.data.repository.AuthenticationRepositoryImpl
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                kotlinx.coroutines.CoroutineScope r3 = (kotlinx.coroutines.CoroutineScope) r3
                javax.inject.Provider r4 = r2.bgDispatcherProvider
                java.lang.Object r4 = r4.get()
                kotlinx.coroutines.CoroutineDispatcher r4 = (kotlinx.coroutines.CoroutineDispatcher) r4
                javax.inject.Provider r5 = r2.implProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.scene.shared.flag.SceneContainerFlags r5 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r5
                javax.inject.Provider r5 = r2.bindSystemClockProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.util.time.SystemClock r5 = (com.android.systemui.util.time.SystemClock) r5
                com.android.systemui.authentication.AuthenticationModule$getSecurityMode$1 r6 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1518$$Nest$mfunctionOfIntegerAndSecurityMode(r2)
                javax.inject.Provider r7 = r2.userRepositoryImplProvider
                java.lang.Object r7 = r7.get()
                com.android.systemui.user.data.repository.UserRepositoryImpl r7 = (com.android.systemui.user.data.repository.UserRepositoryImpl) r7
                javax.inject.Provider r8 = r1.provideLockPatternUtilsProvider
                java.lang.Object r8 = r8.get()
                com.android.internal.widget.LockPatternUtils r8 = (com.android.internal.widget.LockPatternUtils) r8
                javax.inject.Provider r1 = r1.provideDevicePolicyManagerProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                android.app.admin.DevicePolicyManager r9 = (android.app.admin.DevicePolicyManager) r9
                javax.inject.Provider r1 = r2.broadcastDispatcherProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.broadcast.BroadcastDispatcher r10 = (com.android.systemui.broadcast.BroadcastDispatcher) r10
                javax.inject.Provider r1 = r2.mobileRepositorySwitcherProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileConnectionsRepository r11 = (com.android.systemui.statusbar.pipeline.mobile.data.repository.MobileConnectionsRepository) r11
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r9
                r9 = r10
                r10 = r11
                r1.<init>(r2, r3, r4, r5, r6, r7, r8, r9, r10)
                return r0
            L_0x1549:
                com.android.systemui.authentication.domain.interactor.AuthenticationInteractor r0 = new com.android.systemui.authentication.domain.interactor.AuthenticationInteractor
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                kotlinx.coroutines.CoroutineDispatcher r3 = (kotlinx.coroutines.CoroutineDispatcher) r3
                javax.inject.Provider r4 = r2.authenticationRepositoryImplProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.authentication.data.repository.AuthenticationRepositoryImpl r4 = (com.android.systemui.authentication.data.repository.AuthenticationRepositoryImpl) r4
                javax.inject.Provider r2 = r2.selectedUserInteractorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.user.domain.interactor.SelectedUserInteractor r2 = (com.android.systemui.user.domain.interactor.SelectedUserInteractor) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x1577:
                com.android.systemui.deviceentry.domain.interactor.DeviceUnlockedInteractor r0 = new com.android.systemui.deviceentry.domain.interactor.DeviceUnlockedInteractor
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.authenticationInteractorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.authentication.domain.interactor.AuthenticationInteractor r3 = (com.android.systemui.authentication.domain.interactor.AuthenticationInteractor) r3
                javax.inject.Provider r2 = r2.deviceEntryRepositoryImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.deviceentry.data.repository.DeviceEntryRepositoryImpl r2 = (com.android.systemui.deviceentry.data.repository.DeviceEntryRepositoryImpl) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x1599:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideSceneFrameworkLogBufferFactory.provideSceneFrameworkLogBuffer(r0)
                return r0
            L_0x15a8:
                com.android.systemui.scene.shared.model.SceneDataSourceDelegator r0 = new com.android.systemui.scene.shared.model.SceneDataSourceDelegator
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r2 = r2.containerConfigProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.scene.shared.model.SceneContainerConfig r2 = (com.android.systemui.scene.shared.model.SceneContainerConfig) r2
                r0.<init>(r1, r2)
                return r0
            L_0x15c0:
                com.android.systemui.scene.shared.model.SceneContainerConfig r0 = com.android.systemui.scene.SceneContainerFrameworkModule_Companion_ContainerConfigFactory.containerConfig()
                return r0
            L_0x15c5:
                com.android.systemui.scene.domain.interactor.SceneInteractor r0 = new com.android.systemui.scene.domain.interactor.SceneInteractor
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                com.android.systemui.scene.data.repository.SceneContainerRepository r3 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1637$$Nest$msceneContainerRepository(r2)
                com.android.systemui.scene.shared.logger.SceneLogger r4 = new com.android.systemui.scene.shared.logger.SceneLogger
                javax.inject.Provider r5 = r2.provideSceneFrameworkLogBufferProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.log.LogBuffer r5 = (com.android.systemui.log.LogBuffer) r5
                r4.<init>(r5)
                javax.inject.Provider r2 = r2.deviceUnlockedInteractorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.deviceentry.domain.interactor.DeviceUnlockedInteractor r2 = (com.android.systemui.deviceentry.domain.interactor.DeviceUnlockedInteractor) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x15ee:
                com.android.systemui.model.SceneContainerPlugin r0 = new com.android.systemui.model.SceneContainerPlugin
                javax.inject.Provider r1 = r2.sceneInteractorProvider
                dagger.Lazy r1 = dagger.internal.DoubleCheck.lazy(r1)
                r0.<init>(r1)
                return r0
            L_0x15fc:
                javax.inject.Provider r0 = r2.provideDisplayTrackerProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.settings.DisplayTracker r0 = (com.android.systemui.settings.DisplayTracker) r0
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.dump.DumpManager r1 = (com.android.systemui.dump.DumpManager) r1
                javax.inject.Provider r2 = r2.sceneContainerPluginProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.model.SceneContainerPlugin r2 = (com.android.systemui.model.SceneContainerPlugin) r2
                com.android.systemui.model.SysUiState r0 = com.android.systemui.dagger.SystemUIModule_ProvideSysUiStateFactory.provideSysUiState(r0, r1, r2)
                return r0
            L_0x161f:
                com.android.systemui.navigationbar.NavigationModeController r0 = new com.android.systemui.navigationbar.NavigationModeController
                android.content.Context r3 = r1.context
                javax.inject.Provider r4 = r2.configurationControllerImplProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.statusbar.policy.ConfigurationController r4 = (com.android.systemui.statusbar.policy.ConfigurationController) r4
                dagger.internal.DelegateFactory r2 = r2.provideUserTrackerProvider
                java.lang.Object r2 = r2.get()
                r5 = r2
                com.android.systemui.settings.UserTracker r5 = (com.android.systemui.settings.UserTracker) r5
                javax.inject.Provider r2 = r1.provideMainExecutorProvider
                java.lang.Object r2 = r2.get()
                r6 = r2
                java.util.concurrent.Executor r6 = (java.util.concurrent.Executor) r6
                javax.inject.Provider r2 = r1.provideUiBackgroundExecutorProvider
                java.lang.Object r2 = r2.get()
                r7 = r2
                java.util.concurrent.Executor r7 = (java.util.concurrent.Executor) r7
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.dump.DumpManager r8 = (com.android.systemui.dump.DumpManager) r8
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r1.<init>(r2, r3, r4, r5, r6, r7)
                return r0
            L_0x1666:
                com.android.systemui.navigationbar.NavigationBarControllerImpl r0 = new com.android.systemui.navigationbar.NavigationBarControllerImpl
                android.content.Context r10 = r1.context
                dagger.internal.DelegateFactory r3 = r2.overviewProxyServiceProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.recents.OverviewProxyService r11 = (com.android.systemui.recents.OverviewProxyService) r11
                javax.inject.Provider r3 = r2.navigationModeControllerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.navigationbar.NavigationModeController r12 = (com.android.systemui.navigationbar.NavigationModeController) r12
                javax.inject.Provider r3 = r2.provideSysUiStateProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.systemui.model.SysUiState r13 = (com.android.systemui.model.SysUiState) r13
                javax.inject.Provider r3 = r2.provideCommandQueueProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.statusbar.CommandQueue r14 = (com.android.systemui.statusbar.CommandQueue) r14
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideMainHandlerProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                android.os.Handler r15 = (android.os.Handler) r15
                javax.inject.Provider r3 = r2.configurationControllerImplProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.statusbar.policy.ConfigurationController r16 = (com.android.systemui.statusbar.policy.ConfigurationController) r16
                javax.inject.Provider r3 = r2.navBarHelperProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                com.android.systemui.navigationbar.NavBarHelper r17 = (com.android.systemui.navigationbar.NavBarHelper) r17
                javax.inject.Provider r3 = r2.taskbarDelegateProvider
                java.lang.Object r3 = r3.get()
                r18 = r3
                com.android.systemui.navigationbar.TaskbarDelegate r18 = (com.android.systemui.navigationbar.TaskbarDelegate) r18
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory r3 = new com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory
                r3.<init>(r1, r2)
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r20 = r1
                com.android.systemui.dump.DumpManager r20 = (com.android.systemui.dump.DumpManager) r20
                javax.inject.Provider r1 = r2.autoHideControllerProvider
                java.lang.Object r1 = r1.get()
                r21 = r1
                com.android.systemui.statusbar.phone.AutoHideController r21 = (com.android.systemui.statusbar.phone.AutoHideController) r21
                javax.inject.Provider r1 = r2.lightBarControllerProvider
                java.lang.Object r1 = r1.get()
                r22 = r1
                com.android.systemui.statusbar.phone.LightBarController r22 = (com.android.systemui.statusbar.phone.LightBarController) r22
                javax.inject.Provider r1 = r2.provideTaskStackChangeListenersProvider
                java.lang.Object r1 = r1.get()
                r23 = r1
                com.android.systemui.shared.system.TaskStackChangeListeners r23 = (com.android.systemui.shared.system.TaskStackChangeListeners) r23
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r1 = r2.secureSettingsImplProvider
                java.lang.Object r1 = r1.get()
                r26 = r1
                com.android.systemui.util.settings.SecureSettings r26 = (com.android.systemui.util.settings.SecureSettings) r26
                javax.inject.Provider r1 = r2.provideDisplayTrackerProvider
                java.lang.Object r1 = r1.get()
                r27 = r1
                com.android.systemui.settings.DisplayTracker r27 = (com.android.systemui.settings.DisplayTracker) r27
                java.util.Optional r1 = r2.setPip
                r24 = r1
                java.util.Optional r1 = r2.setBackAnimation
                r25 = r1
                r9 = r0
                r19 = r3
                r9.<init>(r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27)
                return r0
            L_0x171b:
                com.android.systemui.recents.OverviewProxyService r0 = new com.android.systemui.recents.OverviewProxyService
                android.content.Context r29 = r1.context
                javax.inject.Provider r3 = r1.provideMainExecutorProvider
                java.lang.Object r3 = r3.get()
                r30 = r3
                java.util.concurrent.Executor r30 = (java.util.concurrent.Executor) r30
                javax.inject.Provider r3 = r2.provideCommandQueueProvider
                java.lang.Object r3 = r3.get()
                r31 = r3
                com.android.systemui.statusbar.CommandQueue r31 = (com.android.systemui.statusbar.CommandQueue) r31
                dagger.internal.DelegateFactory r3 = r2.navigationBarControllerImplProvider
                dagger.Lazy r33 = dagger.internal.DoubleCheck.lazy(r3)
                dagger.internal.DelegateFactory r3 = r2.notificationPanelViewControllerProvider
                dagger.Lazy r34 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.screenPinningRequestProvider
                java.lang.Object r3 = r3.get()
                r35 = r3
                com.android.systemui.recents.ScreenPinningRequest r35 = (com.android.systemui.recents.ScreenPinningRequest) r35
                javax.inject.Provider r3 = r2.navigationModeControllerProvider
                java.lang.Object r3 = r3.get()
                r36 = r3
                com.android.systemui.navigationbar.NavigationModeController r36 = (com.android.systemui.navigationbar.NavigationModeController) r36
                dagger.internal.DelegateFactory r3 = r2.notificationShadeWindowControllerImplProvider
                java.lang.Object r3 = r3.get()
                r37 = r3
                com.android.systemui.statusbar.NotificationShadeWindowController r37 = (com.android.systemui.statusbar.NotificationShadeWindowController) r37
                javax.inject.Provider r3 = r2.provideSysUiStateProvider
                java.lang.Object r3 = r3.get()
                r38 = r3
                com.android.systemui.model.SysUiState r38 = (com.android.systemui.model.SysUiState) r38
                javax.inject.Provider r39 = r2.sceneInteractorProvider
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r40 = r3
                com.android.systemui.settings.UserTracker r40 = (com.android.systemui.settings.UserTracker) r40
                javax.inject.Provider r3 = r2.wakefulnessLifecycleProvider
                java.lang.Object r3 = r3.get()
                r41 = r3
                com.android.systemui.keyguard.WakefulnessLifecycle r41 = (com.android.systemui.keyguard.WakefulnessLifecycle) r41
                javax.inject.Provider r3 = r1.provideUiEventLoggerProvider
                java.lang.Object r3 = r3.get()
                r42 = r3
                com.android.internal.logging.UiEventLogger r42 = (com.android.internal.logging.UiEventLogger) r42
                javax.inject.Provider r3 = r2.provideDisplayTrackerProvider
                java.lang.Object r3 = r3.get()
                r43 = r3
                com.android.systemui.settings.DisplayTracker r43 = (com.android.systemui.settings.DisplayTracker) r43
                dagger.internal.DelegateFactory r3 = r2.keyguardUnlockAnimationControllerProvider
                java.lang.Object r3 = r3.get()
                r44 = r3
                com.android.systemui.keyguard.KeyguardUnlockAnimationController r44 = (com.android.systemui.keyguard.KeyguardUnlockAnimationController) r44
                javax.inject.Provider r3 = r2.inWindowLauncherUnlockAnimationManagerProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.ui.view.InWindowLauncherUnlockAnimationManager r3 = (com.android.systemui.keyguard.ui.view.InWindowLauncherUnlockAnimationManager) r3
                javax.inject.Provider r3 = r2.provideAssistUtilsProvider
                java.lang.Object r3 = r3.get()
                r45 = r3
                com.android.internal.app.AssistUtils r45 = (com.android.internal.app.AssistUtils) r45
                dagger.internal.DelegateFactory r3 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.flags.FeatureFlags r3 = (com.android.systemui.flags.FeatureFlags) r3
                javax.inject.Provider r3 = r2.implProvider
                java.lang.Object r3 = r3.get()
                r46 = r3
                com.android.systemui.scene.shared.flag.SceneContainerFlags r46 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r46
                javax.inject.Provider r3 = r1.dumpManagerProvider
                java.lang.Object r3 = r3.get()
                r47 = r3
                com.android.systemui.dump.DumpManager r47 = (com.android.systemui.dump.DumpManager) r47
                javax.inject.Provider r1 = r1.provideProgressForwarderProvider
                java.lang.Object r1 = r1.get()
                r48 = r1
                java.util.Optional r48 = (java.util.Optional) r48
                javax.inject.Provider r1 = r2.broadcastDispatcherProvider
                java.lang.Object r1 = r1.get()
                r49 = r1
                com.android.systemui.broadcast.BroadcastDispatcher r49 = (com.android.systemui.broadcast.BroadcastDispatcher) r49
                com.android.wm.shell.sysui.ShellInterface r1 = r2.setShell
                r32 = r1
                r28 = r0
                r28.<init>(r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41, r42, r43, r44, r45, r46, r47, r48, r49)
                return r0
            L_0x180b:
                com.android.systemui.statusbar.notification.collection.render.RenderStageManager r0 = new com.android.systemui.statusbar.notification.collection.render.RenderStageManager
                r0.<init>()
                return r0
            */
            throw new UnsupportedOperationException("Method not decompiled: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider.get1$1():java.lang.Object");
        }

        /* JADX WARNING: type inference failed for: r3v17, types: [com.android.systemui.volume.panel.shared.flag.VolumePanelFlag, java.lang.Object] */
        /* JADX WARNING: type inference failed for: r0v8, types: [com.android.systemui.process.ProcessWrapper, java.lang.Object] */
        /* JADX WARNING: type inference failed for: r6v4, types: [com.android.systemui.dreams.homecontrols.DreamActivityProviderImpl, java.lang.Object] */
        /* JADX WARNING: type inference failed for: r17v7, types: [java.lang.Object, com.android.systemui.util.concurrency.ThreadFactoryImpl] */
        public Object get10() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 1000:
                    return new LaunchConversationActivity((NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBubblesManagerProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get());
                case 1001:
                    return new SensorUseStartedActivity((IndividualSensorPrivacyControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIndividualSensorPrivacyControllerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                case 1002:
                    return new EditWidgetsActivity((CommunalEditModeViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalEditModeViewModelProvider.get(), (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$26) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider31.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider.get());
                case 1003:
                    return new CommunalEditModeViewModel((CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (CommunalSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCommunalMediaHostProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider.get());
                case 1004:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$26(this);
                case 1005:
                    return new SwitchToManagedProfileForCallActivity((TelecomManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelecomManagerProvider.get());
                case 1006:
                    return new VolumePanelActivity(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider32, new Object(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get());
                case 1007:
                    return new VolumePanelViewModel.Factory((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get());
                case 1008:
                    return new SystemUISecondaryUserService(new Object());
                case 1009:
                    return new HomeControlsDreamService((ControlsSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsSettingsRepositoryImplProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$27) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider33.get(), (HomeControlsComponentInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.homeControlsComponentInteractorProvider.get(), new Object(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDreamLogBufferProvider.get());
                case 1010:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$27(this);
                case 1011:
                    return new HomeControlsComponentInteractor((SelectedComponentRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedComponentRepositoryImplProvider.get(), (ControlsComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1451$$Nest$mauthorizedPanelsRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (PackageChangeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageChangeInteractorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1503$$Nest$mdreamManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                case 1012:
                    return new PackageChangeInteractor((PackageChangeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageChangeRepositoryImplProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 1013:
                    Provider provider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.takeScreenshotExecutorProvider;
                    return new TakeScreenshotService((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$28) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider35.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$29) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider34.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (RequestProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.requestProcessorProvider.get(), provider);
                case 1014:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$28(this);
                case 1015:
                    return new ScreenshotSmartActions(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesScrnshtNotifSmartActionsProvider);
                case 1016:
                    return GoogleScreenshotModule_ProvidesScrnshtNotifSmartActionsProviderFactory.providesScrnshtNotifSmartActionsProvider((DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get());
                case 1017:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$29(this);
                case 1018:
                    return new ImageCaptureImpl((IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (IActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1019:
                    return new AssistContentRequester(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get());
                case 1020:
                    return new ScreenshotSoundControllerImpl((ScreenshotSoundProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenshotSoundProviderImplProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1021:
                    return new ScreenshotSoundProviderImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1022:
                    return new RequestProcessor((ImageCaptureImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.imageCaptureImplProvider.get(), (ScreenshotPolicyImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenshotPolicyImplProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 1023:
                    DisplayTracker displayTracker = (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get();
                    return new ScreenshotPolicyImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (IActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1024:
                    return new TakeScreenshotExecutor((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$28) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider35.get(), (DisplayRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayRepositoryImplProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (RequestProcessor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.requestProcessorProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$29) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider34.get());
                case 1025:
                    return new ScreenshotProxyService((ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 1026:
                    return new AppClipsScreenshotHelperService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles);
                case 1027:
                    return new AppClipsService((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles, (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get());
                case 1028:
                    return new NoteTaskControllerUpdateService((NoteTaskController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noteTaskControllerProvider.get());
                case 1029:
                    return new NoteTaskBubblesController.NoteTaskBubblesService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles);
                case 1030:
                    return new WalletContextualLocationsService((CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (WalletContextualSuggestionsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.walletContextualSuggestionsControllerProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1031:
                    return new WalletContextualSuggestionsController((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (QuickAccessWalletController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickAccessWalletControllerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1032:
                    return new DozeService(new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (PluginManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider.get());
                case 1033:
                    return new ImageWallpaper((DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningDelayableExecutorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 1034:
                    return new ExecutorImpl((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningLooperProvider.get());
                case 1035:
                    return SysUIConcurrencyModule_ProvideLongRunningLooperFactory.provideLongRunningLooper();
                case 1036:
                    WindowManagerLockscreenVisibilityViewModel windowManagerLockscreenVisibilityViewModel = (WindowManagerLockscreenVisibilityViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityViewModelProvider.get();
                    WindowManagerLockscreenVisibilityManager windowManagerLockscreenVisibilityManager = (WindowManagerLockscreenVisibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityManagerProvider.get();
                    KeyguardSurfaceBehindViewModel keyguardSurfaceBehindViewModel = (KeyguardSurfaceBehindViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindViewModelProvider.get();
                    KeyguardSurfaceBehindParamsApplier keyguardSurfaceBehindParamsApplier = (KeyguardSurfaceBehindParamsApplier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindParamsApplierProvider.get();
                    CoroutineScope coroutineScope = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    return new KeyguardService((KeyguardViewMediator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider.get(), (KeyguardLifecyclesDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardLifecyclesDispatcherProvider.get(), (ScreenOnCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOnCoordinatorProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setTransitions, (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get());
                case 1037:
                    return new KeyguardLifecyclesDispatcher(GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper(), (ScreenLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.screenLifecycleProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get());
                case 1038:
                    return new WindowManagerLockscreenVisibilityViewModel((WindowManagerLockscreenVisibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowManagerLockscreenVisibilityInteractorProvider.get());
                case 1039:
                    return new KeyguardSurfaceBehindViewModel((KeyguardSurfaceBehindInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSurfaceBehindInteractorProvider.get());
                case 1040:
                    return new DreamOverlayService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, new DreamOverlayLifecycleOwner(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DreamOverlayStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayStateControllerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1588$$Nest$mnamedTouchInsetManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1573$$Nest$mnamedComponentName2(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1574$$Nest$mnamedComponentName3(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DreamOverlayCallbackController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamOverlayCallbackControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1585$$Nest$mnamedString2(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1041:
                    return new NotificationListenerWithPlugins((PluginManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider.get());
                case 1042:
                    return new SystemUIService((Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1505$$Nest$mdumpHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (LogBufferEulogizer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferEulogizerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1552$$Nest$mlogBufferFreezer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1454$$Nest$mbatteryStateNotifier(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (UncaughtExceptionPreHandlerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.uncaughtExceptionPreHandlerManagerProvider.get());
                case 1043:
                    return new SystemUIAuxiliaryDumpService(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1505$$Nest$mdumpHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1044:
                    return new RecordingService((RecordingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get());
                case 1045:
                    return new ExecutorImpl((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningLooperProvider.get());
                case 1046:
                    return new RecordingService((RecordingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLongRunningExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get());
                case 1047:
                    return new ColumbusTargetRequestService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ColumbusSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsProvider.get(), (ColumbusStructuredDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusStructuredDataManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get());
                case 1048:
                    return new ColumbusSettings(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ColumbusContentObserver.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider36.get());
                case 1049:
                    return new ColumbusContentObserver.Factory((ContentResolverWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.contentResolverWrapperProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 1050:
                    return new ContentResolverWrapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1051:
                    return new ColumbusStructuredDataManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get());
                case 1052:
                    return new LowLightClockDreamService(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1460$$Nest$mchargingStatusProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1554$$Nest$mlowLightClockAnimationProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (LowLightTransitionCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.lowLightTransitionCoordinatorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1528$$Nest$miDisplay(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1053:
                    return new LockscreenWallpaperDreamService((KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (KeyguardViewMediator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider.get(), (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1054:
                    return new LauncherTileService((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 1055:
                    Resources resources = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getResources();
                    Preconditions.checkNotNullFromProvides(resources);
                    return new HealthService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (HealthManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.healthManagerProvider.get(), resources);
                case 1056:
                    return new HealthManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (AlarmManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 1057:
                    return new BatteryEventService((BatteryEventStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.batteryEventStateControllerProvider.get(), (BroadcastSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1058:
                    return new BatteryEventStateController((BatteryEventModuleProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.batteryEventModuleProvider.get(), (EventSourceMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSystemEventDataSourceProvider.get());
                case 1059:
                    return new BatteryEventModuleProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1060:
                    return new SystemEventDataSource((HalDataSource) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideHalDataSourceProvider.get(), (SettingsDataSource) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSettingsDataSourceProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1516$$Nest$mframeworkDataSource(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 1061:
                    return EventFrameworkModule_Companion_ProvideHalDataSourceFactory.provideHalDataSource();
                case 1062:
                    return EventFrameworkModule_Companion_ProvideSettingsDataSourceFactory.provideSettingsDataSource(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1063:
                    return new OverviewProxyRecentsImpl((OverviewProxyService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get());
                case 1064:
                    return new ActionProxyReceiver((ActivityManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityManagerWrapperProvider.get(), (ScreenshotSmartActions) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenshotSmartActionsProvider.get(), (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 1065:
                    return new DeleteScreenshotReceiver((ScreenshotSmartActions) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenshotSmartActionsProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get());
                case 1066:
                    return new SmartActionsReceiver((ScreenshotSmartActions) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenshotSmartActionsProvider.get());
                case 1067:
                    return new MediaOutputDialogReceiver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaOutputDialogFactory(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1565$$Nest$mmediaOutputBroadcastDialogFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1068:
                    return new VolumePanelDialogReceiver((VolumePanelFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumePanelFactoryProvider.get());
                case 1069:
                    return new PeopleSpaceWidgetPinnedReceiver((PeopleSpaceWidgetManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider.get());
                case 1070:
                    return PeopleSpaceWidgetProvider_Factory.newInstance((PeopleSpaceWidgetManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider.get());
                case 1071:
                    return new GuestResetOrExitSessionReceiver((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), new GuestResetOrExitSessionReceiver.ExitSessionDialogFactory((SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$7) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider9.get()), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1509$$Nest$mexitSessionDialogFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1072:
                    return new KeyboardShortcutsReceiver((FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1073:
                    return new HealthUpdateReceiver((HealthManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.healthManagerProvider.get());
                case 1074:
                    Dependency dependency = new Dependency();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1530$$Nest$minjectDependency(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl, dependency);
                    return dependency;
                case 1075:
                    TunerService tunerService = (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get();
                    return new Object();
                case 1076:
                    return new UiOffloadThread();
                case 1077:
                    return NotificationStatsLoggerModule_Companion_ProvideCoreStartableFactory.provideCoreStartable((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLegacyLoggerOptionalProvider.get());
                case 1078:
                    return new CoroutineScopeCoreStartable(Collections.emptySet());
                case 1079:
                    return new BroadcastDispatcherStartable((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 1080:
                    return new SideFpsOverlayViewBinder((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBiometricStatusInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntrySideFpsOverlayInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fpsUnlockTrackerProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsProgressBarViewModelProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsSensorInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider));
                case 1081:
                    return new BiometricStatusInteractorImpl((ActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityTaskManagerProvider.get(), (BiometricStatusRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricStatusRepositoryImplProvider.get());
                case 1082:
                    return new BiometricStatusRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (BiometricManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesBiometricManagerProvider.get());
                case 1083:
                    return new DeviceEntrySideFpsOverlayInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (DeviceEntryFingerprintAuthRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthRepositoryImplProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get());
                case 1084:
                    return new SideFpsProgressBarViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BiometricStatusInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBiometricStatusInteractorProvider.get(), (DeviceEntryFingerprintAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider.get(), (SideFpsSensorInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsSensorInteractorProvider.get(), (DozeServiceHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeServiceHostProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (DisplayStateInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get());
                case 1085:
                    return new SideFpsSensorInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (FingerprintPropertyRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (DisplayStateInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider.get(), Optional.of((FingerprintInteractiveToAuthProviderGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFingerprintInteractiveToAuthProvider.get()), (BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (SideFpsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsLoggerProvider.get());
                case 1086:
                    return new SideFpsLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBouncerLogProvider.get());
                case 1087:
                    return new ConfigurationControllerStartable((ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1647$$Nest$msetOfConfigurationListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1088:
                    return new VolumeUI(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (VolumeDialogComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumeDialogComponentProvider.get());
                case 1089:
                    return new PowerUI(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (IVrManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIVrManagerProvider.get(), (PowerUI.WarningsUI) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerNotificationWarningsGoogleImplProvider.get(), (EnhancedEstimates) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.enhancedEstimatesGoogleImplProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 1090:
                    return new PowerNotificationWarningsGoogleImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (BroadcastSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (EnhancedEstimates) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.enhancedEstimatesGoogleImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1453$$Nest$mbatteryEventClient(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.batterySaverConfirmationDialogProvider, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.severeLowBatteryNotificationProvider);
                case 1091:
                    UserTracker userTracker = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                    return new BatterySaverConfirmationDialog(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get());
                case 1092:
                    return new SevereLowBatteryNotification(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1093:
                    Resources resources2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getResources();
                    Preconditions.checkNotNullFromProvides(resources2);
                    return new RearDisplayDialogController((CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), resources2, (LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get(), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get());
                case 1094:
                    return new ScreenDecorations(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (PrivacyDotViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyDotViewControllerProvider.get(), new Object(), (PrivacyDotDecorProviderFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyDotDecorProviderFactoryProvider.get(), (FaceScanningProviderFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceScanningProviderFactoryProvider.get(), (ScreenDecorationsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenDecorationsLoggerProvider.get(), (FacePropertyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), new CameraProtectionLoaderImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context));
                case 1095:
                    return new PrivacyDotViewController((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (StatusBarContentInsetsProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarContentInsetsProvider.get(), (SystemStatusAnimationSchedulerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemStatusAnimationSchedulerProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 1096:
                    return new PrivacyDotDecorProviderFactory(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 1097:
                    return new FaceScanningProviderFactory((AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ScreenDecorationsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenDecorationsLoggerProvider.get(), (FacePropertyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider.get());
                case 1098:
                    return new ScreenDecorationsLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideScreenDecorationsLogProvider.get());
                case 1099:
                    return ((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get()).create(200, "ScreenDecorationsLog", true);
                default:
                    throw new AssertionError(i);
            }
        }

        /* JADX WARNING: type inference failed for: r10v6, types: [com.android.systemui.mediaprojection.MediaProjectionServiceHelper, java.lang.Object] */
        public Object get11() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 1100:
                    Context r3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    ToastLogger r7 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1692$$Nest$mtoastLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    INotificationManager asInterface = INotificationManager.Stub.asInterface(ServiceManager.getService("notification"));
                    return new ToastUI(r3, (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), asInterface, IAccessibilityManager.Stub.asInterface(ServiceManager.getService("accessibility")), (ToastFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.toastFactoryProvider.get(), r7);
                case 1101:
                    return LogModule_ProvideToastLogBufferFactory.provideToastLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 1102:
                    return new FalsingCoreStartable((FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider.get());
                case 1103:
                    Object obj = new Object();
                    ((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get()).registerCriticalDumpable("SysUIFlags", new Dumpable() {
                        public final void dump(
/*
Method generation error in method: com.android.systemui.flags.FeatureFlagsReleaseStartable.1.dump(java.io.PrintWriter, java.lang.String[]):void, dex: classes.dex
                        jadx.core.utils.exceptions.JadxRuntimeException: Method args not loaded: com.android.systemui.flags.FeatureFlagsReleaseStartable.1.dump(java.io.PrintWriter, java.lang.String[]):void, class status: UNLOADED
                        	at jadx.core.dex.nodes.MethodNode.getArgRegs(MethodNode.java:278)
                        	at jadx.core.codegen.MethodGen.addDefinition(MethodGen.java:116)
                        	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:313)
                        	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                        	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
                        	at java.util.ArrayList.forEach(ArrayList.java:1259)
                        	at java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
                        	at java.util.stream.Sink$ChainedReference.end(Sink.java:258)
                        	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)
                        	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
                        	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
                        	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
                        	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)
                        	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                        	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                        	at jadx.core.codegen.InsnGen.inlineAnonymousConstructor(InsnGen.java:676)
                        	at jadx.core.codegen.InsnGen.makeConstructor(InsnGen.java:607)
                        	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:364)
                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:231)
                        	at jadx.core.codegen.InsnGen.addWrappedArg(InsnGen.java:123)
                        	at jadx.core.codegen.InsnGen.addArg(InsnGen.java:107)
                        	at jadx.core.codegen.InsnGen.generateMethodArguments(InsnGen.java:787)
                        	at jadx.core.codegen.InsnGen.makeInvoke(InsnGen.java:728)
                        	at jadx.core.codegen.InsnGen.makeInsnBody(InsnGen.java:368)
                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:250)
                        	at jadx.core.codegen.InsnGen.makeInsn(InsnGen.java:221)
                        	at jadx.core.codegen.RegionGen.makeSimpleBlock(RegionGen.java:109)
                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:55)
                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                        	at jadx.core.codegen.RegionGen.makeRegionIndent(RegionGen.java:98)
                        	at jadx.core.codegen.RegionGen.makeSwitch(RegionGen.java:298)
                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:64)
                        	at jadx.core.codegen.RegionGen.makeSimpleRegion(RegionGen.java:92)
                        	at jadx.core.codegen.RegionGen.makeRegion(RegionGen.java:58)
                        	at jadx.core.codegen.MethodGen.addRegionInsns(MethodGen.java:211)
                        	at jadx.core.codegen.MethodGen.addInstructions(MethodGen.java:204)
                        	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:318)
                        	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:271)
                        	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:240)
                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
                        	at java.util.ArrayList.forEach(ArrayList.java:1259)
                        	at java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
                        	at java.util.stream.Sink$ChainedReference.end(Sink.java:258)
                        	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)
                        	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
                        	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
                        	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
                        	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)
                        	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                        	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                        	at jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:112)
                        	at jadx.core.codegen.ClassGen.addInnerClass(ClassGen.java:249)
                        	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:238)
                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
                        	at java.util.ArrayList.forEach(ArrayList.java:1259)
                        	at java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
                        	at java.util.stream.Sink$ChainedReference.end(Sink.java:258)
                        	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:483)
                        	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
                        	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
                        	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
                        	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
                        	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)
                        	at jadx.core.codegen.ClassGen.addInnerClsAndMethods(ClassGen.java:236)
                        	at jadx.core.codegen.ClassGen.addClassBody(ClassGen.java:227)
                        	at jadx.core.codegen.ClassGen.addClassCode(ClassGen.java:112)
                        	at jadx.core.codegen.ClassGen.makeClass(ClassGen.java:78)
                        	at jadx.core.codegen.CodeGen.wrapCodeGen(CodeGen.java:44)
                        	at jadx.core.codegen.CodeGen.generateJavaCode(CodeGen.java:33)
                        	at jadx.core.codegen.CodeGen.generate(CodeGen.java:21)
                        	at jadx.core.ProcessClass.generateCode(ProcessClass.java:61)
                        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:273)
                        
*/
                    });
                    return obj;
                case 1104:
                    return new FlagDependencies((FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (FlagDependenciesNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flagDependenciesNotifierProvider.get());
                case 1105:
                    Context unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    NotificationManager notificationManager = (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get();
                    return new Object();
                case 1106:
                    return new MotionToolStartable(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1483$$Nest$mddmHandleMotionTool(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1107:
                    return new QSFragmentStartable((FragmentService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSFragmentLegacyProvider);
                case 1108:
                    return new QSFragmentLegacy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSImplProvider, new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1109:
                    return new CarrierConfigCoreStartable((CarrierConfigRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigRepositoryProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 1110:
                    return new UserSwitcherDialogCoordinator(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.adapterProvider, DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherViewModelProvider));
                case 1111:
                    return new UserDetailView.Adapter(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserSwitcherController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherControllerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get());
                case 1112:
                    return new BiometricNotificationService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), new Handler(), (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get(), (BiometricNotificationBroadcastReceiver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricNotificationBroadcastReceiverProvider.get(), Optional.of((FingerprintReEnrollNotification) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFingerprintReEnrollNotificationProvider.get()), (FingerprintManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider.get(), (FaceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFaceManagerProvider.get());
                case 1113:
                    return BiometricNotificationBroadcastReceiver_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BiometricNotificationDialogFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricNotificationDialogFactoryProvider.get());
                case 1114:
                    return BiometricNotificationDialogFactory_Factory.newInstance(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get(), (FingerprintManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesFingerprintManagerProvider.get(), (FaceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideFaceManagerProvider.get());
                case 1115:
                    return SystemUIGoogleModule_ProvideFingerprintReEnrollNotificationFactory.provideFingerprintReEnrollNotification();
                case 1116:
                    return ClipboardListener_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.clipboardOverlayControllerProvider, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1465$$Nest$mclipboardToast(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (ClipboardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideClipboardManagerProvider.get(), (KeyguardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1117:
                    return ClipboardOverlayController_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overlayWindowContextContext(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1463$$Nest$mclipboardOverlayView(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1464$$Nest$mclipboardOverlayWindow(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (BroadcastSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider.get(), new TimeoutHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1462$$Nest$mclipboardOverlayUtils(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1461$$Nest$mclipboardImageLoader(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1466$$Nest$mclipboardTransitionExecutor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1118:
                    return new InstantAppNotifier(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get());
                case 1119:
                    return new KeyboardUI(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1455$$Nest$mbluetoothDialogDelegate(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1120:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.taskSwitcherNotificationCoordinatorProvider);
                    return new Object();
                case 1121:
                    return new TaskSwitcherNotificationCoordinator(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1691$$Nest$mtaskSwitcherNotificationViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 1122:
                    return new TaskSwitchInteractor((MediaProjectionManagerRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionManagerRepositoryProvider.get(), (ActivityTaskManagerTasksRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityTaskManagerTasksRepositoryProvider.get());
                case 1123:
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.getClass();
                    MediaProjectionManager mediaProjectionManager = (MediaProjectionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getSystemService(MediaProjectionManager.class);
                    Preconditions.checkNotNullFromProvides(mediaProjectionManager);
                    return new MediaProjectionManagerRepository(mediaProjectionManager, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (ActivityTaskManagerTasksRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityTaskManagerTasksRepositoryProvider.get(), new Object());
                case 1124:
                    return new ActivityTaskManagerTasksRepository((IActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityTaskManagerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1125:
                    return new KeyguardBiometricLockoutLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (SessionTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 1126:
                    return new LatencyTester((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 1127:
                    return new DisplaySwitchLatencyTracker(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1499$$Nest$mdeviceStateRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), new UnfoldTransitionInteractorImpl(new UnfoldTransitionRepositoryImpl((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldTransitionProgressProvider.get())), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1444$$Nest$manimationStatusRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (DisplaySwitchLatencyLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplaySwitchLatencyLoggerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get());
                case 1128:
                    return new ImmersiveModeConfirmation(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 1129:
                    return new RingtonePlayer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1130:
                    return new GesturePointerEventListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (GesturePointerEventDetector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gesturePointerEventDetectorProvider.get());
                case 1131:
                    Context unused2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DisplayTracker displayTracker = (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get();
                    String simpleName = Reflection.getOrCreateKotlinClass(GesturePointerEventDetector.class).getSimpleName();
                    Intrinsics.checkNotNull(simpleName);
                    return new GenericGestureDetector(simpleName);
                case 1132:
                    return new ShortcutKeyDispatcher(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1133:
                    return new SliceBroadcastRelayHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 1134:
                    return new StorageNotification(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get(), (StorageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideStorageManagerProvider.get());
                case 1135:
                    return new ThemeOverlayControllerGoogle(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (ThemeOverlayApplier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.themeOverlayApplierProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (SystemPropertiesHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.systemPropertiesHelperProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m978$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (UiModeManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiModeManagerProvider.get(), (ActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get());
                case 1136:
                    return new ThemeOverlayApplier((OverlayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideOverlayManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1586$$Nest$mnamedString3(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1587$$Nest$mnamedString4(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 1137:
                    Context unused3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new MediaOutputSwitcherDialogUI((CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaOutputDialogFactory());
                case 1138:
                    return new Magnification(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (ModeSwitchesController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.modeSwitchesControllerProvider.get(), (SysUiState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider.get(), (OverviewProxyService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (DisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1429$$Nest$maccessibilityLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1139:
                    return new ModeSwitchesController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider.get());
                case 1140:
                    return new WMShell(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setShell, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setPip, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setSplitScreen, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setOneHanded, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setDesktopMode, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setRecentTasks, (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (ScreenLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.screenLifecycleProvider.get(), (SysUiState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1593$$Nest$mnoteTaskInitializer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 1141:
                    return new MediaTttSenderCoordinator((ChipbarCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chipbarCoordinatorProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (MediaTttSenderLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttSenderLoggerProvider.get(), (MediaTttFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttFlagsProvider.get(), (MediaTttSenderUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttSenderUiEventLoggerProvider.get());
                case 1142:
                    return new MediaTttSenderLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaTttSenderLogBufferProvider.get());
                case 1143:
                    return MediaModule_ProvideMediaTttSenderLogBufferFactory.provideMediaTttSenderLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 1144:
                    return new MediaTttFlags((FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1145:
                    return new MediaTttSenderUiEventLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1146:
                    return new MediaTttChipControllerReceiver((CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (MediaTttReceiverLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttReceiverLoggerProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (MediaTttFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttFlagsProvider.get(), (MediaTttReceiverUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTttReceiverUiEventLoggerProvider.get(), (ViewUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.viewUtilProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1699$$Nest$mwakeLockBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1567$$Nest$mmediaTttReceiverRippleController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (TemporaryViewUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.temporaryViewUiEventLoggerProvider.get());
                case 1147:
                    return new TemporaryViewLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaTttReceiverLogBufferProvider.get(), "MediaTttReceiver");
                case 1148:
                    return MediaModule_ProvideMediaTttReceiverLogBufferFactory.provideMediaTttReceiverLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 1149:
                    return new MediaTttReceiverUiEventLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1150:
                    return new MediaTttCommandLineHelper((CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 1151:
                    return new StylusUsiPowerStartable((StylusManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.stylusManagerProvider.get(), (InputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider.get(), (StylusUsiPowerUI) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.stylusUsiPowerUIProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1152:
                    return new StylusUsiPowerUI(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (NotificationManagerCompat) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerCompatProvider.get(), (InputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1153:
                    return new PhysicalKeyboardCoreStartable(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardBacklightDialogCoordinatorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.stickyKeysIndicatorCoordinatorProvider), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1154:
                    return new KeyboardBacklightDialogCoordinator((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BacklightDialogViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.backlightDialogViewModelProvider.get());
                case 1155:
                    return new BacklightDialogViewModel((KeyboardBacklightInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardBacklightInteractorProvider.get(), (AccessibilityManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityManagerWrapperProvider.get());
                case 1156:
                    return new KeyboardBacklightInteractor((KeyboardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyboardRepositoryImplProvider.get());
                case 1157:
                    return new KeyboardRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (InputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider.get());
                case 1158:
                    return new StickyKeysIndicatorCoordinator((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (StickyKeyDialogFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.stickyKeyDialogFactoryProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1686$$Nest$mstickyKeysIndicatorViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new StickyKeysLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyboardLogBufferProvider.get()));
                case 1159:
                    return new StickyKeyDialogFactory((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get());
                case 1160:
                    return new StickyKeysRepositoryImpl((InputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputManagerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (UserAwareSecureSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userAwareSecureSettingsRepositoryImplProvider.get(), new StickyKeysLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideKeyboardLogBufferProvider.get()));
                case 1161:
                    return new UserAwareSecureSettingsRepositoryImpl((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1162:
                    return LogModule_ProvideKeyboardLogBufferFactory.provideKeyboardLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 1163:
                    return new MuteQuickAffordanceCoreStartable((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (RingerModeTrackerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ringerModeTrackerImplProvider.get(), (UserFileManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider.get(), (KeyguardQuickAffordanceRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardQuickAffordanceRepositoryProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1164:
                    return new DreamMonitor((Monitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSystemUserMonitorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1502$$Nest$mdreamCondition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1504$$Nest$mdreamStatusBarStateCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (RestartDozeListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.restartDozeListenerProvider.get());
                case 1165:
                    return SystemUIModule_ProvideSystemUserMonitorFactory.provideSystemUserMonitor((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1689$$Nest$msystemProcessCondition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMonitorTableLogBufferProvider.get());
                case 1166:
                    return LogModule_ProvideMonitorTableLogBufferFactory.provideMonitorTableLogBuffer((TableLogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tableLogBufferFactoryProvider.get());
                case 1167:
                    return new RestartDozeListener((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider.get());
                case 1168:
                    return new AssistantAttentionMonitor((Monitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSystemUserMonitorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1448$$Nest$massistantAttentionCondition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1447$$Nest$massistantAttentionCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1169:
                    return new StatusBarHeadsUpChangeListener((NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (StatusBarWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider.get(), (ShadeViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider.get(), (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get());
                case 1170:
                    return new KeyguardDismissActionBinder((KeyguardDismissActionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissActionInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1539$$Nest$mkeyguardLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1171:
                    return new KeyguardDismissBinder((KeyguardDismissInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissInteractorProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1697$$Nest$mviewMediatorCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1539$$Nest$mkeyguardLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1172:
                    return new CommunalLoggerStartable((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1173:
                    return new CommunalSceneStartable((DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                case 1174:
                    return new CommunalAppWidgetHostStartable((CommunalAppWidgetHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalAppWidgetHostProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get());
                case 1175:
                    return new HomeControlsDreamStartable(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (HomeControlsComponentInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.homeControlsComponentInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                case 1176:
                    return new ControlsStartable((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (ControlsComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1451$$Nest$mauthorizedPanelsRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SelectedComponentRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedComponentRepositoryImplProvider.get(), (PackageChangeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageChangeInteractorProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 1177:
                    return new GoogleServices(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.serviceConfigurationGoogleProvider), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideColumbusStarterProvider), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1452$$Nest$mautorotateDataService(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1178:
                    return new ServiceConfigurationGoogle(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1650$$Nest$msetOfGate(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1642$$Nest$msetOfAction(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1649$$Nest$msetOfFeedbackEffect(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (GestureSensor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesGestureSensorProvider.get());
                case 1179:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$30(this);
                case 1180:
                    return new WakeMode(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 1181:
                    return new CameraVisibility(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (CameraAction) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraActionProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1619$$Nest$mpowerState(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardVisibility(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.namedSetOfAction());
                case 1182:
                    return new CameraAction((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (AssistInvocationEffect) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistInvocationEffectProvider.get());
                case 1183:
                    return new AssistInvocationEffect((AssistManagerGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1609$$Nest$mopaHomeButton(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1610$$Nest$mopaLockscreen(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1184:
                    return new ChargingState((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1575$$Nest$mnamedInteger2(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1185:
                    return new UsbState((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1576$$Nest$mnamedInteger3(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1186:
                    return new SetupWizard((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (SettingsAction) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.settingsActionProvider.get());
                case 1187:
                    return new SettingsAction(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (LaunchOpa) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchOpaProvider.get());
                case 1188:
                    return new LaunchOpa(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (AssistManagerGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider.get(), (KeyguardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (AssistInvocationEffect) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistInvocationEffectProvider.get());
                case 1189:
                    return new SetupWizardAction((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (SettingsAction) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.settingsActionProvider.get(), (LaunchOpa) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchOpaProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$30) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider37.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get());
                case 1190:
                    return ElmyraModule_ProvidesGestureSensorFactory.providesGestureSensor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.jNIGestureSensorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cHREGestureSensorProvider));
                case 1191:
                    return new JNIGestureSensor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (GestureConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureConfigurationProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get());
                case 1192:
                    return new GestureConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1643$$Nest$msetOfAdjustment(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1193:
                    return new CHREGestureSensor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (GestureConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureConfigurationProvider.get(), (SnapshotConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.snapshotConfigurationProvider.get());
                case 1194:
                    return new SnapshotConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1195:
                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusStarterImplProvider);
                    return ColumbusModule_ProvideColumbusStarterFactory.provideColumbusStarter(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusServiceWrapperProvider));
                case 1196:
                    return new ColumbusStarterImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusManagerProvider), (ColumbusSettingsFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsFetcherProvider.get());
                case 1197:
                    return new ColumbusManager((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1628$$Nest$mquickTapSetOfGate(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (List) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickTapActionsProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1627$$Nest$mquickTapSetOfFeedbackEffect(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (WakeLock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickTapWakeLockProvider.get(), (GestureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureControllerProvider.get(), (GateFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gateFetcherProvider.get(), (ActionFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.actionFetcherProvider.get());
                case 1198:
                    EmptyList emptyList = EmptyList.INSTANCE;
                    Preconditions.checkNotNullFromProvides(emptyList);
                    return emptyList;
                case 1199:
                    return ColumbusModule_ProvideQuickTapWakeLockFactory.provideQuickTapWakeLock(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakeLockLogger());
                default:
                    throw new AssertionError(i);
            }
        }

        /* JADX WARNING: type inference failed for: r7v46, types: [com.android.systemui.utils.GlobalWindowManager, java.lang.Object] */
        public Object get12() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 1200:
                    return new GestureController((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (NoOpGestureSensor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGestureSensorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1670$$Nest$msoftSetOfGate(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (GateFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gateFetcherProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get());
                case 1201:
                    return ColumbusModule_ProvideGestureSensorFactory.provideGestureSensor(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.noOpGestureSensorProvider));
                case 1202:
                    return new Object();
                case 1203:
                    return new GateFetcher((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 1204:
                    return new ActionFetcher((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 1205:
                    return new ColumbusSettingsFetcher((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (UserFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFetcherProvider.get(), (ContentFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.contentFetcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BackupManagerProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.backupManagerProxyProvider.get());
                case 1206:
                    return new UserFetcher((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (BroadcastFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastFetcherProvider.get());
                case 1207:
                    return new BroadcastFetcher((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 1208:
                    return new ContentFetcher((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserFetcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFetcherProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get());
                case 1209:
                    return new Object();
                case 1210:
                    return new ColumbusServiceWrapper((ColumbusSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusServiceProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.settingsActionProvider2), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusStructuredDataManagerProvider));
                case 1211:
                    return new ColumbusService((List) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideColumbusActionsProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1580$$Nest$mnamedSetOfFeedbackEffect2(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1581$$Nest$mnamedSetOfGate(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (com.google.android.systemui.columbus.legacy.sensors.GestureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureControllerProvider2.get(), (PowerManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerManagerWrapperProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get());
                case 1212:
                    return ColumbusModule_ProvideColumbusActionsFactory.provideColumbusActions((List) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFullscreenActionsProvider.get(), (UnpinNotifications) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unpinNotificationsProvider.get(), (UserSelectedAction) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSelectedActionProvider.get());
                case 1213:
                    return ColumbusModule_ProvideFullscreenActionsFactory.provideFullscreenActions((DismissTimer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissTimerProvider.get(), (SnoozeAlarm) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.snoozeAlarmProvider.get(), (SilenceCall) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.silenceCallProvider.get(), (com.google.android.systemui.columbus.legacy.actions.SettingsAction) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.settingsActionProvider2.get());
                case 1214:
                    return new DismissTimer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SilenceAlertsDisabled) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.silenceAlertsDisabledProvider.get(), (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get());
                case 1215:
                    return new SilenceAlertsDisabled((ColumbusSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1216:
                    return new SnoozeAlarm(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SilenceAlertsDisabled) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.silenceAlertsDisabledProvider.get(), (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get());
                case 1217:
                    return new SilenceCall(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SilenceAlertsDisabled) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.silenceAlertsDisabledProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelecomManagerProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider));
                case 1218:
                    return new com.google.android.systemui.columbus.legacy.actions.SettingsAction(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1219:
                    return new UnpinNotifications(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SilenceAlertsDisabled) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.silenceAlertsDisabledProvider.get(), Optional.of((HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get()));
                case 1220:
                    return new UserSelectedAction(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ColumbusSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsProvider.get(), (Map) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserSelectedActionsProvider.get(), (TakeScreenshot) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.takeScreenshotProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (PowerManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerManagerWrapperProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get());
                case 1221:
                    return ColumbusModule_ProvideUserSelectedActionsFactory.provideUserSelectedActions((com.google.android.systemui.columbus.legacy.actions.LaunchOpa) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchOpaProvider2.get(), (ManageMedia) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.manageMediaProvider.get(), (TakeScreenshot) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.takeScreenshotProvider.get(), (LaunchOverview) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchOverviewProvider.get(), (OpenNotificationShade) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.openNotificationShadeProvider.get(), (LaunchApp) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchAppProvider.get(), (ToggleFlashlight) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.toggleFlashlightProvider.get());
                case 1222:
                    return new com.google.android.systemui.columbus.legacy.actions.LaunchOpa(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1579$$Nest$mnamedSetOfFeedbackEffect(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (AssistManagerGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (ColumbusContentObserver.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider36.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1223:
                    return new com.google.android.systemui.columbus.legacy.feedback.AssistInvocationEffect((AssistManagerGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider.get());
                case 1224:
                    return new ManageMedia(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (AudioManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1225:
                    return new TakeScreenshot(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1226:
                    return new LaunchOverview(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Recents) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideRecentsProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1227:
                    return new OpenNotificationShade(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1228:
                    return new LaunchApp(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (ColumbusSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsProvider.get(), (KeyguardVisibility) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardVisibilityProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 1229:
                    return new KeyguardVisibility(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider));
                case 1230:
                    return new ToggleFlashlight(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (FlashlightController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flashlightControllerImplProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1231:
                    return new PowerManagerWrapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1232:
                    return new HapticClick(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideVibratorProvider));
                case 1233:
                    return new UserActivity(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider));
                case 1234:
                    return new FlagEnabled((ColumbusSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1235:
                    return new KeyguardProximity((KeyguardVisibility) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardVisibilityProvider.get(), (Proximity) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.proximityProvider.get());
                case 1236:
                    return new Proximity(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideProximitySensorProvider));
                case 1237:
                    return new com.google.android.systemui.columbus.legacy.gates.SetupWizard(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1577$$Nest$mnamedSetOfAction2(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1238:
                    return new TelephonyActivity(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1239:
                    return new VrMode(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIVrManagerProvider), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1240:
                    return new com.google.android.systemui.columbus.legacy.gates.CameraVisibility(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (List) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFullscreenActionsProvider.get(), (KeyguardVisibility) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardVisibilityProvider.get(), (PowerState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerStateProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1241:
                    return new PowerState(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1242:
                    return new PowerSaveState((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1243:
                    return new com.google.android.systemui.columbus.legacy.sensors.GestureController((com.google.android.systemui.columbus.legacy.sensors.GestureSensor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGestureSensorProvider2.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1582$$Nest$mnamedSetOfGate2(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1244:
                    return com.google.android.systemui.columbus.legacy.ColumbusModule_ProvideGestureSensorFactory.provideGestureSensor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ColumbusSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cHREGestureSensorProvider2), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cHREGestureSensorDelegatorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureSensorImplProvider));
                case 1245:
                    return new com.google.android.systemui.columbus.legacy.sensors.CHREGestureSensor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (com.google.android.systemui.columbus.legacy.sensors.config.GestureConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.gestureConfigurationProvider2.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                case 1246:
                    return new com.google.android.systemui.columbus.legacy.sensors.config.GestureConfiguration((List) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideGestureAdjustmentsProvider.get(), (SensorConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sensorConfigurationProvider.get());
                case 1247:
                    return Collections.singletonList((LowSensitivitySettingAdjustment) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lowSensitivitySettingAdjustmentProvider.get());
                case 1248:
                    Context context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new LowSensitivitySettingAdjustment((ColumbusSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.columbusSettingsProvider.get(), (SensorConfiguration) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sensorConfigurationProvider.get());
                case 1249:
                    return new SensorConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1250:
                    return new CHREGestureSensorDelegator((AmbientContextManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAmbientContextManagerProvider.get(), (com.google.android.systemui.columbus.legacy.sensors.CHREGestureSensor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cHREGestureSensorProvider2.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aiAiCHREGestureSensorProvider), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                case 1251:
                    return new AiAiCHREGestureSensor((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (AmbientContextManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAmbientContextManagerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get());
                case 1252:
                    return new GestureSensorImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 1253:
                    return new com.google.android.systemui.columbus.legacy.gates.ChargingState((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 1254:
                    return new com.google.android.systemui.columbus.legacy.gates.UsbState(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1255:
                    return new SystemKeyPress(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1583$$Nest$mnamedSetOfInteger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 1256:
                    return new ScreenTouch((PowerState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerStateProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideInputMonitorProvider);
                case 1257:
                    return ColumbusModule_ProvideInputMonitorFactory.provideInputMonitor();
                case 1258:
                    return new AdaptivePPNService(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vpnNetworkMonitorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vpnPackageMonitorProvider));
                case 1259:
                    Context context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new VpnNetworkMonitor((ConnectivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideConnectivityManagagerProvider.get(), (BroadcastSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (UserFileManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 1260:
                    return new VpnPackageMonitor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastSender) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastSenderProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (UserFileManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 1261:
                    return new ActiveUnlockChipbarManager((KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (ChipbarCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chipbarCoordinatorProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (SessionTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sessionTrackerProvider.get());
                case 1262:
                    return new RefreshRateRequesterBinder(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.refreshRateInteractorProvider), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 1263:
                    return new RefreshRateInteractor((BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get());
                case 1264:
                    Context context3 = (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get();
                    AlarmManager alarmManager = (AlarmManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider.get();
                    SelectedUserInteractor selectedUserInteractor = (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get();
                    AmbientIndicationInteractor ambientIndicationInteractor = (AmbientIndicationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientIndicationInteractorProvider.get();
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get();
                    return new Object();
                case 1265:
                    return new ContextualTipsInteractor((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (ContextualTipsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.contextualTipsRepositoryProvider.get(), (GlobalActionsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsInteractorProvider.get(), (AssistInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistInteractorProvider.get());
                case 1266:
                    Context context4 = (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get();
                    return new ContextualTipsRepository((CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl());
                case 1267:
                    return new NotificationMemoryMonitor((FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (NotificationMemoryDumper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationMemoryDumperProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationMemoryLoggerProvider));
                case 1268:
                    return new NotificationMemoryDumper((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (NotifPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get());
                case 1269:
                    return new NotificationMemoryLogger((NotifPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (StatsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideStatsManagerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get());
                case 1270:
                    return new SideFpsProgressBarViewBinder((SideFpsProgressBarViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsProgressBarViewModelProvider.get(), (SideFpsProgressBar) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsProgressBarProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsControllerProvider), (SideFpsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sideFpsLoggerProvider.get(), (CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get());
                case 1271:
                    return new SideFpsProgressBar((LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get());
                case 1272:
                    return new BouncerMessageAuditLogger((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (BouncerMessageRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerMessageRepositoryImplProvider.get());
                case 1273:
                    return new LiftToRunFaceAuthBinder((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (AsyncSensorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.asyncSensorManagerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get());
                case 1274:
                    return new KeyguardTransitionCoreStartable(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1657$$Nest$msetOfTransitionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (KeyguardTransitionAuditLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAuditLoggerProvider.get());
                case 1275:
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    CoroutineDispatcher coroutineDispatcher2 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get();
                    KeyguardInteractor keyguardInteractor = (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get();
                    PowerInteractor powerInteractor = (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get();
                    return new FromGoneTransitionInteractor((CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (KeyguardTransitionRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider.get(), keyguardInteractor, (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), powerInteractor, coroutineDispatcher, coroutineDispatcher2, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                case 1276:
                    return new FromDreamingLockscreenHostedTransitionInteractor((KeyguardTransitionRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get());
                case 1277:
                    CoroutineDispatcher coroutineDispatcher3 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    CoroutineDispatcher coroutineDispatcher4 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get();
                    KeyguardInteractor keyguardInteractor2 = (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get();
                    PowerInteractor powerInteractor2 = (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get();
                    return new FromOccludedTransitionInteractor((CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (KeyguardTransitionRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider.get(), keyguardInteractor2, (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), powerInteractor2, coroutineDispatcher3, coroutineDispatcher4, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                case 1278:
                    CoroutineDispatcher coroutineDispatcher5 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    CoroutineDispatcher coroutineDispatcher6 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get();
                    KeyguardInteractor keyguardInteractor3 = (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get();
                    PowerInteractor powerInteractor3 = (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get();
                    return new FromDozingTransitionInteractor((CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (KeyguardTransitionRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider.get(), keyguardInteractor3, (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), powerInteractor3, coroutineDispatcher5, coroutineDispatcher6, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                case 1279:
                    CoroutineDispatcher coroutineDispatcher7 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    CoroutineDispatcher coroutineDispatcher8 = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get();
                    KeyguardInteractor keyguardInteractor4 = (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get();
                    return new FromAlternateBouncerTransitionInteractor((CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (KeyguardTransitionRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider.get(), keyguardInteractor4, (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), coroutineDispatcher7, coroutineDispatcher8, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get());
                case 1280:
                    return new FromGlanceableHubTransitionInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1520$$Nest$mglanceableHubTransitions(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (KeyguardTransitionRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get());
                case 1281:
                    KeyguardTransitionInteractor keyguardTransitionInteractor = (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get();
                    return new KeyguardTransitionAuditLogger((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1539$$Nest$mkeyguardLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (SharedNotificationContainerViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerViewModelProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 1282:
                    return new ResourceTrimmer((KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), new Object(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 1283:
                    return new CollapsedStatusBarFragmentStartable((FragmentService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.collapsedStatusBarFragmentProvider);
                case 1284:
                    return new ConnectingDisplayViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ConnectedDisplayInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectedDisplayInteractorImplProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get());
                case 1285:
                    return new MediaMuteAwaitConnectionCli((CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), (AudioManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider.get());
                case 1286:
                    return new QSPipelineCoreStartable((CurrentTilesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.currentTilesInteractorImplProvider.get(), (AccessibilityTilesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityTilesInteractorProvider.get(), (AutoAddInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.autoAddInteractorProvider.get(), (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get(), (RestoreReconciliationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.restoreReconciliationInteractorProvider.get());
                case 1287:
                    return new AccessibilityTilesInteractor((AccessibilityQsShortcutsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityQsShortcutsRepositoryImplProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 1288:
                    return new AccessibilityQsShortcutsRepositoryImpl((AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$31) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider38.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 1289:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$31(this);
                case 1290:
                    return new AutoAddInteractor(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1644$$Nest$msetOfAutoAddable(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (AutoAddSettingRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.autoAddSettingRepositoryProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1624$$Nest$mqSPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 1291:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$32(this);
                case 1292:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$33(this);
                case 1293:
                    return new CastAutoAddable((CastController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castControllerImplProvider.get());
                case 1294:
                    return new DataSaverAutoAddable((DataSaverControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDataSaverControllerProvider.get());
                case 1295:
                    return new DeviceControlsAutoAddable((DeviceControlsControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceControlsControllerImplProvider.get());
                case 1296:
                    return new HotspotAutoAddable((HotspotController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hotspotControllerImplProvider.get());
                case 1297:
                    return new NightDisplayAutoAddable(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1589$$Nest$mnightDisplayListenerModuleBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 1298:
                    return new ReduceBrightColorsAutoAddable((ReduceBrightColorsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reduceBrightColorsControllerProvider.get(), ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.isReduceBrightColorsAvailableProvider.get()).booleanValue());
                case 1299:
                    return new WalletAutoAddable((WalletControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.walletControllerImplProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }

        /* JADX WARNING: type inference failed for: r0v21, types: [java.lang.Object, com.android.systemui.bouncer.ui.BouncerViewImpl] */
        /* JADX WARNING: type inference failed for: r1v291, types: [java.lang.Object, com.android.systemui.statusbar.notification.row.PrecomputedTextViewFactory] */
        /* JADX WARNING: type inference failed for: r2v36, types: [com.android.systemui.statusbar.notification.row.NotificationOptimizedLinearLayoutFactory, java.lang.Object] */
        /* JADX WARNING: type inference failed for: r11v25, types: [java.lang.Object, com.android.systemui.util.concurrency.ThreadFactoryImpl] */
        public Object get2() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 200:
                    return new UserSetupRepositoryImpl((DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 201:
                    return new KeyguardIndicationControllerGoogle(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1699$$Nest$mwakeLockBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (IBatteryStats) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIBatteryStatsProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get(), (ScreenLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.screenLifecycleProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (FaceHelpMessageDeferralFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceHelpMessageDeferralFactoryProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1539$$Nest$mkeyguardLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (AlarmManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (BouncerMessageInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerMessageInteractorProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (IndicationHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.indicationHelperProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get());
                case 202:
                    return SysUIConcurrencyModule_ProvideBackgroundDelayableExecutorFactory.provideBackgroundDelayableExecutor((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get());
                case 203:
                    return new FaceHelpMessageDeferralFactory(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBiometricLogBufferProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 204:
                    return LogModule_ProvideBiometricLogBufferFactory.provideBiometricLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 205:
                    return LogModule_ProvideKeyguardLogBufferFactory.provideKeyguardLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 206:
                    FingerprintPropertyRepository fingerprintPropertyRepository = (FingerprintPropertyRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider.get();
                    CoroutineScope coroutineScope = (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get();
                    return new AlternateBouncerInteractor((StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (KeyguardBouncerRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBouncerRepositoryImplProvider.get(), (BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get());
                case 207:
                    return new BouncerMessageInteractor((BouncerMessageRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerMessageRepositoryImplProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (CountDownTimerUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.countDownTimerUtilProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (TrustRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustRepositoryImplProvider.get(), (BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (SystemPropertiesHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.systemPropertiesHelperProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (FacePropertyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider.get(), (DeviceEntryFingerprintAuthRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthRepositoryImplProvider.get(), (DeviceEntryFaceAuthRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFaceAuthRepositoryImplProvider.get(), (KeyguardSecurityModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSecurityModelProvider.get());
                case 208:
                    return new BouncerMessageRepositoryImpl();
                case 209:
                    return new Object();
                case 210:
                    return new PrimaryBouncerInteractor((KeyguardBouncerRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBouncerRepositoryImplProvider.get(), (BouncerViewImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerViewImplProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (KeyguardSecurityModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSecurityModelProvider.get(), (PrimaryBouncerCallbackInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerCallbackInteractorProvider.get(), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider.get(), (DismissCallbackRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dismissCallbackRegistryProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (TrustRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustRepositoryImplProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get());
                case 211:
                    ? obj = new Object();
                    obj._delegate = new WeakReference((Object) null);
                    return obj;
                case 212:
                    return new PrimaryBouncerCallbackInteractor();
                case 213:
                    Object obj2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorImplProvider.get();
                    FalsingCollectorNoOp falsingCollectorNoOp = (FalsingCollectorNoOp) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorNoOpProvider.get();
                    return FalsingModule_ProvidesFalsingCollectorLegacyFactory.providesFalsingCollectorLegacy(obj2, (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get());
                case 214:
                    return new Object();
                case 215:
                    return new DismissCallbackRegistry((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider.get());
                case 216:
                    Context context = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    FaceWakeUpTriggersConfig faceWakeUpTriggersConfig = (FaceWakeUpTriggersConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceWakeUpTriggersConfigImplProvider.get();
                    return new SystemUIDeviceEntryFaceAuthInteractor(context, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (DeviceEntryFaceAuthRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFaceAuthRepositoryImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (FaceAuthenticationLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceAuthenticationLoggerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (DeviceEntryFingerprintAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (FacePropertyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider.get(), faceWakeUpTriggersConfig, (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (TrustManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider.get());
                case 217:
                    return new DeviceEntryFingerprintAuthInteractor((DeviceEntryFingerprintAuthRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthRepositoryImplProvider.get());
                case 218:
                    return new IndicationHelper((KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get());
                case 219:
                    return new AmbientIndicationInteractor((AmbientIndicationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientIndicationRepositoryProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get());
                case 220:
                    return new AmbientIndicationRepository();
                case 221:
                    return CentralSurfacesGoogleModule_ProvideHealthManagerFactory.provideHealthManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (AlarmManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 222:
                    return NotificationsModule_ProvideNotificationsControllerFactory.provideNotificationsController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsControllerImplProvider, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsControllerStubProvider);
                case 223:
                    return new NotificationsControllerImpl((NotificationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider), (NotifLiveDataStoreImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifLiveDataStoreImplProvider.get(), (TargetSdkResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.targetSdkResolverProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineInitializerProvider), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1594$$Nest$mnotifBindPipelineInitializer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLegacyLoggerOptionalProvider.get(), (NotificationRowBinderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRowBinderImplProvider.get(), (NotificationMediaManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider.get(), (HeadsUpViewBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpViewBinderProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1599$$Nest$mnotificationClickerBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (AnimatedImageNotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.animatedImageNotificationManagerProvider.get(), (PeopleSpaceWidgetManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles);
                case 224:
                    return new NotificationListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1666$$Nest$msilentNotificationStatusIconsVisibilityInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (PluginManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider.get());
                case 225:
                    return new NotificationListenerSettingsRepository();
                case 226:
                    return new TargetSdkResolver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 227:
                    return new NotifPipelineInitializer((NotifPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1522$$Nest$mgroupCoalescer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get(), (ShadeListBuilder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeListBuilderProvider.get(), (RenderStageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.renderStageManagerProvider.get(), (NotifCoordinatorsImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCoordinatorsProvider.get(), (NotifInflaterImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifInflaterImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$1) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeViewManagerFactoryProvider.get());
                case 228:
                    NotifCoordinatorsImpl notifCoordinatorsImpl = (NotifCoordinatorsImpl) new DaggerSysUIGoogleGlobalRootComponent$CoordinatorsSubcomponentImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl).notifCoordinatorsImplProvider.get();
                    Preconditions.checkNotNullFromProvides(notifCoordinatorsImpl);
                    return notifCoordinatorsImpl;
                case 229:
                    return new NotifInflaterImpl((NotifInflationErrorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifInflationErrorManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1597$$Nest$mnotifInflaterLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 230:
                    return new NotifInflationErrorManager();
                case 231:
                    return LogModule_ProvideNotifInflationLogBufferFactory.provideNotifInflationLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 232:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$1(this);
                case 233:
                    return new MediaContainerController((LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get());
                case 234:
                    return new NotificationSectionsFeatureManager((DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 235:
                    return new SectionHeaderVisibilityProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 236:
                    return new NotifViewBarn();
                case 237:
                    return new NotifBindPipeline((CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1595$$Nest$mnotifBindPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper());
                case 238:
                    return new RowContentBindStage((NotificationContentInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationContentInflaterProvider.get(), (NotifInflationErrorManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifInflationErrorManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1635$$Nest$mrowContentBindStageLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 239:
                    return new NotificationContentInflater((NotifRemoteViewCache) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifRemoteViewCacheProvider.get(), (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1479$$Nest$mconversationNotificationProcessor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new MediaFeatureFlag(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInflationExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1668$$Nest$msmartReplyStateInflaterImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$2) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1600$$Nest$mnotificationContentInflaterLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 240:
                    return new NotifRemoteViewCacheImpl((CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get());
                case 241:
                    Context context2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    return new NotificationRemoteInputManager(context2, (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (SmartReplyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSmartReplyControllerProvider.get(), (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (RemoteInputUriController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputUriControllerProvider.get(), (RemoteInputControllerLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputControllerLoggerProvider.get(), (NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get(), new ActionClickLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInteractionLogBufferProvider.get()), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 242:
                    return new SmartReplyController((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get());
                case 243:
                    return new RemoteInputUriController((IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get());
                case 244:
                    return new RemoteInputControllerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationRemoteInputLogBufferProvider.get());
                case 245:
                    return LogModule_ProvideNotificationRemoteInputLogBufferFactory.provideNotificationRemoteInputLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 246:
                    return LogModule_ProvideNotifInteractionLogBufferFactory.provideNotifInteractionLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 247:
                    return new ConversationNotificationManager((BindEventManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindEventManagerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get());
                case 248:
                    return new BindEventManagerImpl();
                case 249:
                    return new ExecutorImpl((Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInflationLooperProvider.get());
                case 250:
                    Looper looper = (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get();
                    Preconditions.checkNotNullFromProvides(looper);
                    return looper;
                case 251:
                    return new SmartReplyConstants((Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get());
                case 252:
                    return SharedLibraryModule_ProvideActivityManagerWrapperFactory.provideActivityManagerWrapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedLibraryModule);
                case 253:
                    SharedLibraryModule_ProvideDevicePolicyManagerWrapperFactory.provideDevicePolicyManagerWrapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedLibraryModule);
                    return DevicePolicyManagerWrapper.sInstance;
                case 254:
                    return new KeyguardDismissUtil((KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 255:
                    return new HeadsUpManagerPhone(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1526$$Nest$mheadsUpManagerLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (GroupMembershipManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider.get(), (VisualStabilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualStabilityProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (AccessibilityManagerWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityManagerWrapperProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 256:
                    return LogModule_ProvideNotificationHeadsUpLogBufferFactory.provideNotificationHeadsUpLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 257:
                    return new Object();
                case 258:
                    return new VisualStabilityProvider();
                case 259:
                    return new AccessibilityManagerWrapper((AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get());
                case 260:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$2(this);
                case 261:
                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    return new NotifRemoteViewsFactoryContainerImpl(new Object(), new Object());
                case 262:
                    return NotificationStatsLoggerModule_Companion_ProvideLegacyLoggerOptionalFactory.provideLegacyLoggerOptional((NotificationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider.get(), (NotifLiveDataStoreImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifLiveDataStoreImplProvider.get(), (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (NotifPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (WindowRootViewVisibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1510$$Nest$mexpansionStateLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (NotificationPanelLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationPanelLoggerProvider.get());
                case 263:
                    SceneContainerFlags sceneContainerFlags = (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get();
                    return new WindowRootViewVisibilityInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (WindowRootViewVisibilityRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityRepositoryProvider.get(), (KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (ActiveNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider.get());
                case 264:
                    return new WindowRootViewVisibilityRepository((IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider.get());
                case 265:
                    return new Object();
                case 266:
                    Context context3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.androidInternalsModule.getClass();
                    return new NotificationRowBinderImpl(context3, new NotificationMessagingUtil(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Object) null), (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (NotifBindPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifBindPipelineProvider.get(), (RowContentBindStage) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rowContentBindStageProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rowInflaterTaskProvider, new DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusViewComponentImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (IconManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1604$$Nest$mnotificationRowBinderLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 267:
                    return new Object();
                case 268:
                    return new IconManager((CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get(), new IconBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context));
                case 269:
                    return new NotificationMediaManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (NotifPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get(), (MediaDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataManagerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 270:
                    return new MediaDataManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, new Object(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), new MediaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (MediaTimeoutListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTimeoutListenerProvider.get(), (MediaResumeListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaResumeListenerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1566$$Nest$mmediaSessionBasedFilter(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1564$$Nest$mmediaDeviceManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new MediaDataCombineLatest(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1563$$Nest$mmediaDataFilter(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), new SmartspaceMediaDataProvider(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get(), (MediaUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaUiEventLoggerProvider.get(), (SmartspaceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSmartspaceManagerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get());
                case 271:
                    return new MediaTimeoutListener(new MediaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (MediaTimeoutLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaTimeoutLoggerProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get());
                case 272:
                    return new MediaTimeoutLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesMediaTimeoutListenerLogBufferProvider.get());
                case 273:
                    return LogModule_ProvidesMediaTimeoutListenerLogBufferFactory.providesMediaTimeoutListenerLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 274:
                    return new MediaFlags((FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get());
                case 275:
                    return new MediaResumeListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1631$$Nest$mresumeMediaBrowserFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (MediaFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaFlagsProvider.get());
                case 276:
                    return new ResumeMediaBrowserLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaBrowserBufferProvider.get());
                case 277:
                    return LogModule_ProvideMediaBrowserBufferFactory.provideMediaBrowserBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 278:
                    return SettingsLibraryModule_ProvideLocalBluetoothControllerFactory.provideLocalBluetoothController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get());
                case 279:
                    return new MediaMuteAwaitConnectionManagerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (MediaMuteAwaitLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaMuteAwaitLoggerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 280:
                    return new MediaMuteAwaitLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMediaMuteAwaitLogBufferProvider.get());
                case 281:
                    return LogModule_ProvideMediaMuteAwaitLogBufferFactory.provideMediaMuteAwaitLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 282:
                    return new MediaUiEventLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 283:
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.androidInternalsModule.getClass();
                    return new HeadsUpViewBinder(new NotificationMessagingUtil(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Object) null), (RowContentBindStage) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rowContentBindStageProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1527$$Nest$mheadsUpViewBinderLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 284:
                    return new AnimatedImageNotificationManager((CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (BindEventManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindEventManagerImplProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get());
                case 285:
                    Context context4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Optional optional = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles;
                    return new PeopleSpaceWidgetManager(context4, (LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get(), (CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), optional, (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 286:
                    return new NotificationsControllerStub((NotificationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerProvider.get());
                case 287:
                    return new FragmentService((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$3) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider4.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 288:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$3(this);
                case 289:
                    return new LightBarController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (DarkIconDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.darkIconDispatcherImplProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get(), (StatusBarModeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get());
                case 290:
                    return new DarkIconDispatcherImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider5.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 291:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4(this);
                case 292:
                    return new StatusBarModeRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getDisplayId(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$5) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModePerDisplayRepositoryFactoryProvider.get());
                case 293:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$5(this);
                case 294:
                    return new LetterboxAppearanceCalculator(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (LetterboxBackgroundProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.letterboxBackgroundProvider.get());
                case 295:
                    return new LetterboxBackgroundProvider((IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m978$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get());
                case 296:
                    return new OngoingCallRepository();
                case 297:
                    return new AutoHideController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get());
                case 298:
                    return new StatusBarInitializer((StatusBarWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.collapsedStatusBarFragmentProvider, Collections.singleton((StatusBarInitializer.OnStatusBarViewInitializedListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get()));
                case 299:
                    Preconditions.checkNotNullFromProvides(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getResources());
                    return new StatusBarWindowController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (StatusBarWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesStatusBarWindowViewProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (StatusBarContentInsetsProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarContentInsetsProvider.get(), (FragmentService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldTransitionProgressProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get3() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 300:
                    return StatusBarWindowModule_ProvidesStatusBarWindowViewFactory.providesStatusBarWindowView((LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get());
                case 301:
                    return new StatusBarContentInsetsProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), (SysUICutoutProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUICutoutProvider.get());
                case 302:
                    return new SysUICutoutProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, new CameraProtectionLoaderImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context));
                case 303:
                    return new CollapsedStatusBarFragment(new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (OngoingCallController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ongoingCallControllerProvider.get(), (SystemStatusAnimationSchedulerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemStatusAnimationSchedulerProvider.get(), (StatusBarLocationPublisher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarLocationPublisherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationIconAreaController(), (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get(), (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get(), (StatusBarIconController.DarkIconManager.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider8.get(), (CollapsedStatusBarViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.collapsedStatusBarViewModelImplProvider.get(), (CollapsedStatusBarViewBinderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.collapsedStatusBarViewBinderImplProvider.get(), (StatusBarHideIconsForBouncerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarHideIconsForBouncerManagerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (ShadeViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1601$$Nest$mnotificationIconContainerStatusBarViewBinder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (CarrierConfigTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1469$$Nest$mcollapsedStatusBarFragmentLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1611$$Nest$moperatorNameViewControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (StatusBarWindowStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowStateControllerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (DemoModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider.get());
                case 304:
                    return new OngoingCallController((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (OngoingCallRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ongoingCallRepositoryProvider.get(), (CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get(), (OngoingCallLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ongoingCallLoggerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (StatusBarWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider.get(), (SwipeStatusBarAwayGestureHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeStatusBarAwayGestureHandlerProvider.get(), (StatusBarModeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get());
                case 305:
                    return new OngoingCallLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 306:
                    return new SwipeStatusBarAwayGestureHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (SwipeUpGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeUpGestureLoggerProvider.get(), (StatusBarWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider.get());
                case 307:
                    return new SwipeUpGestureLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSwipeUpLogBufferProvider.get());
                case 308:
                    return LogModule_ProvideSwipeUpLogBufferFactory.provideSwipeUpLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 309:
                    return new SystemStatusAnimationSchedulerImpl((SystemEventCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemEventCoordinatorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1688$$Nest$msystemEventChipAnimationController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (StatusBarWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (SystemStatusAnimationSchedulerLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemStatusAnimationSchedulerLoggerProvider.get());
                case 310:
                    return new SystemEventCoordinator((SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (PrivacyItemController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyItemControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (ConnectedDisplayInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectedDisplayInteractorImplProvider.get());
                case 311:
                    return new PrivacyItemController((DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider.get(), (PrivacyConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyConfigProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1655$$Nest$msetOfPrivacyItemMonitor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new PrivacyLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePrivacyLogBufferProvider.get()), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 312:
                    return new PrivacyConfig((DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 313:
                    return new AppOpsPrivacyItemMonitor((AppOpsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appOpsControllerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (PrivacyConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyConfigProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider.get(), new PrivacyLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePrivacyLogBufferProvider.get()));
                case 314:
                    return new AppOpsControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (AudioManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider.get(), (IndividualSensorPrivacyControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIndividualSensorPrivacyControllerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get());
                case 315:
                    return SystemUIGoogleModule_ProvideIndividualSensorPrivacyControllerFactory.provideIndividualSensorPrivacyController((SensorPrivacyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSensorPrivacyManagerProvider.get());
                case 316:
                    return LogModule_ProvidePrivacyLogBufferFactory.providePrivacyLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 317:
                    return new ConnectedDisplayInteractorImpl((VirtualDeviceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideVirtualDeviceManagerProvider.get(), (KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get(), (DisplayRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayRepositoryImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1499$$Nest$mdeviceStateRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 318:
                    return new SystemStatusAnimationSchedulerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSystemStatusAnimationSchedulerLogBufferProvider.get());
                case 319:
                    return StatusBarEventsModule_Companion_ProvideSystemStatusAnimationSchedulerLogBufferFactory.provideSystemStatusAnimationSchedulerLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 320:
                    return new StatusBarLocationPublisher();
                case 321:
                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    return new LegacyNotificationIconAreaControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (NotificationWakeUpCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationWakeUpCoordinatorProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (NotificationMediaManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider.get(), (NotificationListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerProvider.get(), (DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get(), (SectionStyleProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionStyleProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles, (DemoModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider.get(), (DarkIconDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.darkIconDispatcherImplProvider.get(), (StatusBarWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get());
                case 322:
                    return new NotificationWakeUpCoordinator((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1607$$Nest$mnotificationWakeUpCoordinatorLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new NotificationsKeyguardInteractor((NotificationsKeyguardViewStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsKeyguardViewStateRepositoryProvider.get()));
                case 323:
                    return new ScreenOffAnimationController((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUIUnfoldComponentProvider.get(), (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get());
                case 324:
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIUnfoldModule.getClass();
                    UnfoldTransitionProgressProvider unfoldTransitionProgressProvider = (UnfoldTransitionProgressProvider) ((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldTransitionProgressProvider.get()).orElse((Object) null);
                    NaturalRotationUnfoldProgressProvider naturalRotationUnfoldProgressProvider = (NaturalRotationUnfoldProgressProvider) ((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNaturalRotationProgressProvider.get()).orElse((Object) null);
                    ScopedUnfoldTransitionProgressProvider scopedUnfoldTransitionProgressProvider = (ScopedUnfoldTransitionProgressProvider) ((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideStatusBarScopedTransitionProvider.get()).orElse((Object) null);
                    UnfoldTransitionProgressProvider unfoldTransitionProgressProvider2 = (UnfoldTransitionProgressProvider) ((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldBgTransitionProgressProvider.get()).orElse((Object) null);
                    if (unfoldTransitionProgressProvider == null || naturalRotationUnfoldProgressProvider == null || scopedUnfoldTransitionProgressProvider == null || unfoldTransitionProgressProvider2 == null) {
                        Optional empty = Optional.empty();
                        Intrinsics.checkNotNull(empty);
                        return empty;
                    }
                    Optional of = Optional.of(new DaggerSysUIGoogleGlobalRootComponent$SysUIUnfoldComponentImpl(this.sysUIGoogleGlobalRootComponentImpl, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl, unfoldTransitionProgressProvider, naturalRotationUnfoldProgressProvider, scopedUnfoldTransitionProgressProvider, unfoldTransitionProgressProvider2));
                    Intrinsics.checkNotNull(of);
                    return of;
                case 325:
                    return new UnlockedScreenOffAnimationController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (StatusBarStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), new Handler());
                case 326:
                    return new WakefulnessLifecycle(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, IWallpaperManager.Stub.asInterface(ServiceManager.getService("wallpaper")), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 327:
                    return LogModule_ProvideNotificationLockScreenLogBufferFactory.provideNotificationLockScreenLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 328:
                    return new NotificationsKeyguardViewStateRepository();
                case 329:
                    return new SectionStyleProvider();
                case 330:
                    return new NotificationIconAreaControllerViewBinderWrapperImpl();
                case 331:
                    return new ShadeExpansionStateManager();
                case 332:
                    return new StatusBarIconController.DarkIconManager.Factory((WifiUiAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiUiAdapterProvider.get(), (MobileContextProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileContextProvider.get(), (MobileUiAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileUiAdapterProvider.get(), (DarkIconDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.darkIconDispatcherImplProvider.get());
                case 333:
                    return new WifiUiAdapter((StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get(), (WifiViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiViewModelProvider.get());
                case 334:
                    return new WifiViewModel((AirplaneModeViewModelImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeViewModelImplProvider.get(), (Supplier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideFirstMobileSubShowingNetworkTypeIconProvider.get(), (ConnectivityConstants) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityConstantsProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWifiTableLogBufferProvider.get(), (WifiInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiInteractorImplProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (WifiConstants) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiConstantsProvider.get());
                case 335:
                    return new AirplaneModeViewModelImpl((AirplaneModeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeInteractorProvider.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAirplaneTableLogBufferProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 336:
                    return new AirplaneModeInteractor((AirplaneModeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeRepositoryImplProvider.get(), (ConnectivityRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider.get(), (MobileConnectionsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileRepositorySwitcherProvider.get());
                case 337:
                    return StatusBarPipelineModule_Companion_ProvideFirstMobileSubShowingNetworkTypeIconProviderFactory.provideFirstMobileSubShowingNetworkTypeIconProvider((MobileIconsViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsViewModelProvider.get());
                case 338:
                    return new MobileIconsViewModel((MobileViewLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileViewLoggerProvider.get(), (VerboseMobileViewLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.verboseMobileViewLoggerProvider.get(), (MobileIconsInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsInteractorImplProvider.get(), (AirplaneModeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeInteractorProvider.get(), (ConnectivityConstants) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityConstantsProvider.get(), (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 339:
                    return new MobileViewLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideMobileViewLogBufferProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 340:
                    return StatusBarPipelineModule_Companion_ProvideMobileViewLogBufferFactory.provideMobileViewLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 341:
                    return new VerboseMobileViewLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVerboseMobileViewLogBufferProvider.get());
                case 342:
                    return StatusBarPipelineModule_Companion_ProvideVerboseMobileViewLogBufferFactory.provideVerboseMobileViewLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 343:
                    return new ConnectivityConstants(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (TelephonyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider.get());
                case 344:
                    return new WifiInteractorImpl((ConnectivityRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider.get(), (WifiRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiRepositorySwitcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 345:
                    return new WifiConstants(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 346:
                    return new MobileContextProvider((NetworkController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.networkControllerImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (DemoModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider.get());
                case 347:
                    return new NetworkControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (SubscriptionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSubscriptionManagerProvider.get(), (CallbackHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.callbackHandlerProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ConnectivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideConnectivityManagagerProvider.get(), (TelephonyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider.get(), (TelephonyListenerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider.get(), (WifiManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWifiManagerProvider.get(), (AccessPointControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAccessPointControllerImplProvider.get(), (StatusBarPipelineFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarPipelineFlagsProvider.get(), (DemoModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider.get(), (CarrierConfigTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1702$$Nest$mwifiStatusTrackerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (MobileSignalControllerFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileSignalControllerFactoryProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (InternetDialogManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.internetDialogManagerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideStatusBarNetworkControllerBufferProvider.get());
                case 348:
                    return CallbackHandler_Factory.newInstance(GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper());
                case 349:
                    return StatusBarPolicyModule_ProvideAccessPointControllerImplFactory.provideAccessPointControllerImpl((UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (WifiPickerTrackerFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiPickerTrackerFactoryProvider.get());
                case 350:
                    return new MobileSignalControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CallbackHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.callbackHandlerProvider.get(), (CarrierConfigTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigTrackerProvider.get(), new MobileMappingsProxyImpl());
                case 351:
                    return new InternetDialogManager((DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$6) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider7.get());
                case 352:
                    return CentralSurfacesDependenciesModule_ProvideDialogTransitionAnimatorFactory.provideDialogTransitionAnimator((IDreamManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), (CentralSurfacesDependenciesModule$2) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAnimationFeatureFlagsProvider.get());
                case 353:
                    return CentralSurfacesDependenciesModule_ProvideAnimationFeatureFlagsFactory.provideAnimationFeatureFlags();
                case 354:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$6(this);
                case 355:
                    return new ToastFactory((LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get(), (PluginManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 356:
                    return new LocationControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (AppOpsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appOpsControllerImplProvider.get(), (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (BootCompleteCacheImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bootCompleteCacheImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 357:
                    return new WifiStateWorker((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider.get(), (WifiManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWifiManagerProvider.get());
                case 358:
                    return LogModule_ProvideStatusBarNetworkControllerBufferFactory.provideStatusBarNetworkControllerBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 359:
                    return new MobileUiAdapter((StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get(), (MobileIconsViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsViewModelProvider.get(), (MobileViewLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileViewLoggerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 360:
                    return new CollapsedStatusBarViewModelImpl((LightsOutInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightsOutInteractorProvider.get(), (ActiveNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 361:
                    return new LightsOutInteractor((StatusBarModeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarModeRepositoryImplProvider.get());
                case 362:
                    return new CollapsedStatusBarViewBinderImpl();
                case 363:
                    return new StatusBarHideIconsForBouncerManager((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (StatusBarWindowStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowStateControllerProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 364:
                    return new StatusBarWindowStateController(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m974$$Nest$mdisplayIdInteger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get());
                case 365:
                    int r24 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m974$$Nest$mdisplayIdInteger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    ShadeLogger r27 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1663$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SwitchingProvider switchingProvider = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.builderProvider;
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    StatusBarStateController statusBarStateController = (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory2 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory3 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory4 = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SwitchingProvider r63 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaViewControllerProvider;
                    KeyguardBottomAreaViewModel keyguardBottomAreaViewModel = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaViewModel();
                    KeyguardClockPositionAlgorithm r96 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1537$$Nest$mkeyguardClockPositionAlgorithm(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory5 = daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory4;
                    return new NotificationPanelViewController((NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (NotificationWakeUpCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationWakeUpCoordinatorProvider.get(), (PulseExpansionHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulseExpansionHandlerProvider.get(), (DynamicPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dynamicPrivacyControllerProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), statusBarStateController, (StatusBarWindowStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowStateControllerProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (DozeLog) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeLogProvider.get(), (DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (VibratorHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider.get(), (LatencyTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLatencyTrackerProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), r24, (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), r27, (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), switchingProvider, (StatusBarTouchableRegionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarTouchableRegionManagerProvider.get(), (ConversationNotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.conversationNotificationManagerProvider.get(), (MediaHierarchyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (NotificationGutsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationGutsManagerProvider.get(), (NotificationsQSContainerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsQSContainerControllerProvider.get(), (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory2, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory3, daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory5, (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get(), (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (MediaDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataManagerProvider.get(), (NotificationShadeDepthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider.get(), (AmbientState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider.get(), (LockIconViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockIconViewControllerProvider.get(), (KeyguardMediaController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardMediaControllerProvider.get(), (TapAgainViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tapAgainViewControllerProvider.get(), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get(), (NavigationBarControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider.get(), (QuickSettingsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsControllerProvider.get(), (FragmentService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider.get(), (IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get(), (ShadeHeaderController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderControllerProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get(), (LockscreenGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenGestureLoggerProvider.get(), (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get(), (ShadeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUIUnfoldComponentProvider.get(), (SysUiState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider.get(), r63, (KeyguardUnlockAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider.get(), (KeyguardIndicationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider.get(), (NotificationStackScrollLayoutController.NotificationListContainerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideListContainerProvider.get(), (NotificationStackSizeCalculator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackSizeCalculatorProvider.get(), (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get(), (ShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeTransitionControllerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), keyguardBottomAreaViewModel, (KeyguardBottomAreaInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaInteractorProvider.get(), (KeyguardClockInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (DreamingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider.get(), (OccludedToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider.get(), (LockscreenToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDreamingTransitionViewModelProvider.get(), (GoneToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDreamingTransitionViewModelProvider.get(), (GoneToDreamingLockscreenHostedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDreamingLockscreenHostedTransitionViewModelProvider.get(), (LockscreenToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToOccludedTransitionViewModelProvider.get(), (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (KeyguardLongPressViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardLongPressViewModelProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (SharedNotificationContainerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerInteractorProvider.get(), (ActiveNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider.get(), (ShadeAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeAnimationInteractorProvider.get(), (KeyguardViewConfigurator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardViewConfiguratorProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), r96, (NaturalScrollingSettingObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.naturalScrollingSettingObserverProvider.get());
                case 366:
                    return ShadeViewProviderModule_Companion_ProvidesNotificationPanelViewFactory.providesNotificationPanelView((NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get());
                case 367:
                    SceneContainerFlags sceneContainerFlags = (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get();
                    return ShadeViewProviderModule_Companion_ProvidesNotificationShadeWindowViewFactory.providesNotificationShadeWindowView((WindowRootView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesWindowRootViewProvider.get());
                case 368:
                    SceneContainerFlags sceneContainerFlags2 = (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get();
                    Provider unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneContainerViewModelProvider;
                    Provider unused2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider;
                    SwitchingProvider unused3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setOfSceneProvider;
                    NotificationInsetsImpl notificationInsetsImpl = (NotificationInsetsImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationInsetsImplProvider.get();
                    Provider unused4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneDataSourceDelegatorProvider;
                    return ShadeViewProviderModule_Companion_ProvidesWindowRootViewFactory.providesWindowRootView((LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get());
                case 369:
                    return new SceneContainerViewModel((SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get(), (FalsingInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get());
                case 370:
                    return new FalsingInteractor((FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingCollectorImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get());
                case 371:
                    SetBuilder setBuilder = new SetBuilder(7);
                    setBuilder.addAll(EmptySceneModule_EmptySceneSetFactory.emptySceneSet());
                    setBuilder.add((ComposableScene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerSceneProvider.get());
                    setBuilder.add((ComposableScene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSceneProvider.get());
                    setBuilder.add((ComposableScene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneSceneProvider.get());
                    setBuilder.add((ComposableScene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenSceneProvider.get());
                    setBuilder.add((ComposableScene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsSceneProvider.get());
                    setBuilder.add((ComposableScene) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeSceneProvider.get());
                    return setBuilder.build();
                case 372:
                    return new BouncerScene((BouncerViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.viewModelProvider.get(), (BouncerViewModule$Companion$bouncerDialogFactory$1) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerDialogFactoryProvider.get());
                case 373:
                    return BouncerViewModelModule_ViewModelFactory.viewModel((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (BouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerInteractorProvider.get(), (InputMethodInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inputMethodInteractorProvider.get(), (SimBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.simBouncerInteractorProvider.get(), (BouncerActionButtonInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerActionButtonInteractorProvider.get(), (AuthenticationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), (ComposeBouncerFlagsImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider2.get(), (UserSwitcherViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherViewModelProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get());
                case 374:
                    return new BouncerInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (BouncerRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerRepositoryProvider.get(), (AuthenticationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get(), (FalsingInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (SimBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.simBouncerInteractorProvider.get());
                case 375:
                    return new BouncerRepository((FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 376:
                    return new SimBouncerInteractor((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (SimBouncerRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.simBouncerRepositoryImplProvider.get(), (TelephonyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelephonyManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (EuiccManager) ((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get()).getSystemService("euicc"), (MobileConnectionsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileRepositorySwitcherProvider.get());
                case 377:
                    return new SimBouncerRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1687$$Nest$msubscriptionManagerProxyImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (EuiccManager) ((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get()).getSystemService("euicc"));
                case 378:
                    return new InputMethodInteractor((InputMethodRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.inputMethodRepositoryImplProvider.get());
                case 379:
                    return new InputMethodRepositoryImpl((CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (InputMethodManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInputMethodManagerProvider.get());
                case 380:
                    return new BouncerActionButtonInteractor((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (EmergencyServicesRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.emergencyServicesRepositoryProvider.get(), (MobileConnectionsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileRepositorySwitcherProvider.get(), (TelephonyInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyInteractorProvider.get(), (AuthenticationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), (ActivityTaskManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityTaskManagerProvider.get(), (TelecomManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelecomManagerProvider.get(), (EmergencyAffordanceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.emergencyAffordanceManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1508$$Nest$memergencyDialerIntentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), new DozeLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDozeLogBufferProvider.get()));
                case 381:
                    return new EmergencyServicesRepository((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (ConfigurationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationRepositoryImplProvider.get());
                case 382:
                    return new TelephonyInteractor((TelephonyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyRepositoryImplProvider.get());
                case 383:
                    return new TelephonyRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (TelephonyListenerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider.get(), (TelecomManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelecomManagerProvider.get());
                case 384:
                    return BouncerInteractorModule_EmergencyAffordanceManagerFactory.emergencyAffordanceManager((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get());
                case 385:
                    return ComposeBouncerFlagsModule_ImplFactory.impl((SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get());
                case 386:
                    return new UserSwitcherViewModel((UserSwitcherInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider.get(), (GuestUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.guestUserInteractorProvider.get());
                case 387:
                    UserRestrictionChecker userRestrictionChecker = r1;
                    UserRestrictionChecker userRestrictionChecker2 = new UserRestrictionChecker();
                    ProcessWrapper processWrapper = r1;
                    ProcessWrapper processWrapper2 = new ProcessWrapper();
                    return new UserSwitcherInteractor((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (HeadlessSystemUserModeImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headlessSystemUserModeImplProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (TelephonyInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyInteractorProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (ActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider.get(), (RefreshUsersScheduler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.refreshUsersSchedulerProvider.get(), (GuestUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.guestUserInteractorProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), userRestrictionChecker, processWrapper);
                case 388:
                    return new HeadlessSystemUserModeImpl();
                case 389:
                    return new RefreshUsersScheduler((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get());
                case 390:
                    return new GuestUserInteractor((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (RefreshUsersScheduler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.refreshUsersSchedulerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (GuestResumeSessionReceiver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.guestResumeSessionReceiverProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1523$$Nest$mguestResetOrExitSessionReceiver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 391:
                    GuestSessionNotification r6 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1524$$Nest$mguestSessionNotification(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    GuestResetOrExitSessionReceiver.ExitSessionDialogFactory exitSessionDialogFactory = new GuestResetOrExitSessionReceiver.ExitSessionDialogFactory((SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$7) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider9.get());
                    return new GuestResumeSessionReceiver((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), r6, exitSessionDialogFactory);
                case 392:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$7(this);
                case 393:
                    return new UserSwitcherController((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.guestUserInteractorProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 394:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$8(this);
                case 395:
                    return BouncerViewModule_Companion_BouncerDialogFactoryFactory.bouncerDialogFactory((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get());
                case 396:
                    return new CommunalScene((CommunalViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalViewModelProvider.get());
                case 397:
                    return new CommunalViewModel((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (CommunalTutorialInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTutorialInteractorProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCommunalMediaHostProvider.get(), (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalLogBufferProvider.get());
                case 398:
                    return new CommunalTutorialInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CommunalTutorialDisabledRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalTutorialDisabledRepositoryImplProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (CommunalSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalSettingsInteractorProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (TableLogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommunalTableLogBufferProvider.get());
                case 399:
                    return new CommunalTutorialDisabledRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }

        /* JADX WARNING: type inference failed for: r6v9, types: [com.android.systemui.util.reference.WeakReferenceFactory] */
        /* JADX WARNING: type inference failed for: r5v47, types: [java.lang.Object, com.android.systemui.doze.util.BurnInHelperWrapper] */
        /* JADX WARNING: Multi-variable type inference failed */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public java.lang.Object get4() {
            /*
                r42 = this;
                r0 = r42
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r1 = r0.sysUIGoogleGlobalRootComponentImpl
                java.lang.Object r2 = r0.wMComponentImpl
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl r2 = (com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) r2
                int r3 = r0.id
                switch(r3) {
                    case 400: goto L_0x1253;
                    case 401: goto L_0x1213;
                    case 402: goto L_0x1204;
                    case 403: goto L_0x11de;
                    case 404: goto L_0x1116;
                    case 405: goto L_0x1054;
                    case 406: goto L_0x0fa2;
                    case 407: goto L_0x0f9c;
                    case 408: goto L_0x0f8c;
                    case 409: goto L_0x0f7d;
                    case 410: goto L_0x0f6e;
                    case 411: goto L_0x0f54;
                    case 412: goto L_0x0f44;
                    case 413: goto L_0x0f35;
                    case 414: goto L_0x0f2b;
                    case 415: goto L_0x0f11;
                    case 416: goto L_0x0f0b;
                    case 417: goto L_0x0efb;
                    case 418: goto L_0x0eec;
                    case 419: goto L_0x0eb4;
                    case 420: goto L_0x0ea5;
                    case 421: goto L_0x0e96;
                    case 422: goto L_0x0e88;
                    case 423: goto L_0x0e52;
                    case 424: goto L_0x0e42;
                    case 425: goto L_0x0e3c;
                    case 426: goto L_0x0e1a;
                    case 427: goto L_0x0de6;
                    case 428: goto L_0x0dd6;
                    case 429: goto L_0x0d79;
                    case 430: goto L_0x0d67;
                    case 431: goto L_0x0d2d;
                    case 432: goto L_0x0d1d;
                    case 433: goto L_0x0ce5;
                    case 434: goto L_0x0c8b;
                    case 435: goto L_0x0c7c;
                    case 436: goto L_0x0c6d;
                    case 437: goto L_0x0c5e;
                    case 438: goto L_0x0c18;
                    case 439: goto L_0x0be3;
                    case 440: goto L_0x0bbb;
                    case 441: goto L_0x0b65;
                    case 442: goto L_0x0b55;
                    case 443: goto L_0x0aa8;
                    case 444: goto L_0x0a49;
                    case 445: goto L_0x0a1b;
                    case 446: goto L_0x09f3;
                    case 447: goto L_0x09cc;
                    case 448: goto L_0x09a0;
                    case 449: goto L_0x0956;
                    case 450: goto L_0x08c5;
                    case 451: goto L_0x0890;
                    case 452: goto L_0x0878;
                    case 453: goto L_0x0832;
                    case 454: goto L_0x0818;
                    case 455: goto L_0x07ae;
                    case 456: goto L_0x079b;
                    case 457: goto L_0x073d;
                    case 458: goto L_0x0686;
                    case 459: goto L_0x061f;
                    case 460: goto L_0x0619;
                    case 461: goto L_0x0607;
                    case 462: goto L_0x05d9;
                    case 463: goto L_0x05d3;
                    case 464: goto L_0x05af;
                    case 465: goto L_0x057b;
                    case 466: goto L_0x0575;
                    case 467: goto L_0x0567;
                    case 468: goto L_0x0511;
                    case 469: goto L_0x04ed;
                    case 470: goto L_0x04c1;
                    case 471: goto L_0x047b;
                    case 472: goto L_0x0468;
                    case 473: goto L_0x0450;
                    case 474: goto L_0x0419;
                    case 475: goto L_0x03cc;
                    case 476: goto L_0x033d;
                    case 477: goto L_0x0323;
                    case 478: goto L_0x02d7;
                    case 479: goto L_0x02a6;
                    case 480: goto L_0x0282;
                    case 481: goto L_0x025e;
                    case 482: goto L_0x0240;
                    case 483: goto L_0x0231;
                    case 484: goto L_0x0221;
                    case 485: goto L_0x0211;
                    case 486: goto L_0x01ed;
                    case 487: goto L_0x01a6;
                    case 488: goto L_0x0198;
                    case 489: goto L_0x017a;
                    case 490: goto L_0x016c;
                    case 491: goto L_0x0156;
                    case 492: goto L_0x013c;
                    case 493: goto L_0x0126;
                    case 494: goto L_0x0118;
                    case 495: goto L_0x0106;
                    case 496: goto L_0x00f8;
                    case 497: goto L_0x00de;
                    case 498: goto L_0x00cc;
                    case 499: goto L_0x0013;
                    default: goto L_0x000d;
                }
            L_0x000d:
                java.lang.AssertionError r0 = new java.lang.AssertionError
                r0.<init>(r3)
                throw r0
            L_0x0013:
                com.android.keyguard.LockIconViewController r0 = new com.android.keyguard.LockIconViewController
                dagger.internal.DelegateFactory r3 = r2.statusBarStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                com.android.systemui.plugins.statusbar.StatusBarStateController r5 = (com.android.systemui.plugins.statusbar.StatusBarStateController) r5
                dagger.internal.DelegateFactory r3 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.keyguard.KeyguardUpdateMonitor r6 = (com.android.keyguard.KeyguardUpdateMonitor) r6
                dagger.internal.DelegateFactory r3 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r7 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r7
                dagger.internal.DelegateFactory r3 = r2.keyguardStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                com.android.systemui.statusbar.policy.KeyguardStateController r8 = (com.android.systemui.statusbar.policy.KeyguardStateController) r8
                dagger.internal.DelegateFactory r3 = r2.falsingManagerProxyProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                com.android.systemui.plugins.FalsingManager r9 = (com.android.systemui.plugins.FalsingManager) r9
                dagger.internal.DelegateFactory r3 = r2.authControllerProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                com.android.systemui.biometrics.AuthController r10 = (com.android.systemui.biometrics.AuthController) r10
                javax.inject.Provider r3 = r1.dumpManagerProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.dump.DumpManager r11 = (com.android.systemui.dump.DumpManager) r11
                javax.inject.Provider r3 = r1.provideAccessibilityManagerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                android.view.accessibility.AccessibilityManager r12 = (android.view.accessibility.AccessibilityManager) r12
                javax.inject.Provider r3 = r2.configurationControllerImplProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.systemui.statusbar.policy.ConfigurationController r13 = (com.android.systemui.statusbar.policy.ConfigurationController) r13
                javax.inject.Provider r3 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.util.concurrency.DelayableExecutor r14 = (com.android.systemui.util.concurrency.DelayableExecutor) r14
                javax.inject.Provider r3 = r2.vibratorHelperProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                com.android.systemui.statusbar.VibratorHelper r15 = (com.android.systemui.statusbar.VibratorHelper) r15
                javax.inject.Provider r3 = r2.authRippleControllerProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.biometrics.AuthRippleController r16 = (com.android.systemui.biometrics.AuthRippleController) r16
                android.content.Context r3 = r1.context
                android.content.res.Resources r17 = r3.getResources()
                dagger.internal.Preconditions.checkNotNullFromProvides(r17)
                dagger.internal.DelegateFactory r3 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r3 = r3.get()
                r18 = r3
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r18 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r18
                dagger.internal.DelegateFactory r3 = r2.keyguardInteractorProvider
                java.lang.Object r3 = r3.get()
                r19 = r3
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r19 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r19
                dagger.internal.DelegateFactory r3 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r3 = r3.get()
                r20 = r3
                com.android.systemui.flags.FeatureFlags r20 = (com.android.systemui.flags.FeatureFlags) r20
                dagger.internal.DelegateFactory r3 = r2.primaryBouncerInteractorProvider
                java.lang.Object r3 = r3.get()
                r21 = r3
                com.android.systemui.bouncer.domain.interactor.PrimaryBouncerInteractor r21 = (com.android.systemui.bouncer.domain.interactor.PrimaryBouncerInteractor) r21
                dagger.internal.DelegateFactory r3 = r2.deviceEntryInteractorProvider
                dagger.Lazy r23 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r2 = r2.implProvider
                java.lang.Object r2 = r2.get()
                r24 = r2
                com.android.systemui.scene.shared.flag.SceneContainerFlags r24 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r24
                android.content.Context r1 = r1.context
                r22 = r1
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24)
                return r0
            L_0x00cc:
                com.android.systemui.keyguard.ui.viewmodel.LockscreenToPrimaryBouncerTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LockscreenToPrimaryBouncerTransitionViewModel
                com.android.systemui.keyguard.ui.viewmodel.ShadeDependentFlows r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1660$$Nest$mshadeDependentFlows(r2)
                javax.inject.Provider r2 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r2 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r2
                r0.<init>(r1, r2)
                return r0
            L_0x00de:
                com.android.systemui.keyguard.ui.viewmodel.LockscreenToOccludedTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LockscreenToOccludedTransitionViewModel
                com.android.systemui.keyguard.ui.viewmodel.ShadeDependentFlows r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1660$$Nest$mshadeDependentFlows(r2)
                javax.inject.Provider r3 = r2.configurationInteractorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor r3 = (com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor) r3
                javax.inject.Provider r2 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r2 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x00f8:
                com.android.systemui.keyguard.ui.viewmodel.LockscreenToGoneTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LockscreenToGoneTransitionViewModel
                javax.inject.Provider r1 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r1 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r1
                r0.<init>(r1)
                return r0
            L_0x0106:
                com.android.systemui.keyguard.ui.viewmodel.LockscreenToDreamingTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LockscreenToDreamingTransitionViewModel
                com.android.systemui.keyguard.ui.viewmodel.ShadeDependentFlows r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1660$$Nest$mshadeDependentFlows(r2)
                javax.inject.Provider r2 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r2 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0118:
                com.android.systemui.keyguard.ui.viewmodel.LockscreenToDreamingHostedTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LockscreenToDreamingHostedTransitionViewModel
                javax.inject.Provider r1 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r1 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r1
                r0.<init>(r1)
                return r0
            L_0x0126:
                com.android.systemui.keyguard.ui.viewmodel.LockscreenToDozingTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LockscreenToDozingTransitionViewModel
                javax.inject.Provider r1 = r2.deviceEntryUdfpsInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor r1 = (com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor) r1
                javax.inject.Provider r2 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r2 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r2
                r0.<init>(r1, r2)
                return r0
            L_0x013c:
                com.android.systemui.keyguard.ui.viewmodel.LockscreenToAodTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LockscreenToAodTransitionViewModel
                javax.inject.Provider r1 = r2.deviceEntryUdfpsInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor r1 = (com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor) r1
                com.android.systemui.keyguard.ui.viewmodel.ShadeDependentFlows r3 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1660$$Nest$mshadeDependentFlows(r2)
                javax.inject.Provider r2 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r2 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x0156:
                com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToLockscreenTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.PrimaryBouncerToLockscreenTransitionViewModel
                javax.inject.Provider r1 = r2.deviceEntryUdfpsInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor r1 = (com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor) r1
                javax.inject.Provider r2 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r2 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r2
                r0.<init>(r1, r2)
                return r0
            L_0x016c:
                com.android.systemui.keyguard.ui.viewmodel.OffToLockscreenTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.OffToLockscreenTransitionViewModel
                javax.inject.Provider r1 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r1 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r1
                r0.<init>(r1)
                return r0
            L_0x017a:
                com.android.systemui.keyguard.ui.viewmodel.OccludedToLockscreenTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.OccludedToLockscreenTransitionViewModel
                javax.inject.Provider r1 = r2.deviceEntryUdfpsInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor r1 = (com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor) r1
                javax.inject.Provider r1 = r2.configurationInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor r1 = (com.android.systemui.common.ui.domain.interactor.ConfigurationInteractor) r1
                javax.inject.Provider r2 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r2 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0198:
                com.android.systemui.keyguard.ui.viewmodel.GoneToLockscreenTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.GoneToLockscreenTransitionViewModel
                javax.inject.Provider r1 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r1 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r1
                r0.<init>(r1)
                return r0
            L_0x01a6:
                com.android.systemui.keyguard.domain.interactor.FromDreamingTransitionInteractor r0 = new com.android.systemui.keyguard.domain.interactor.FromDreamingTransitionInteractor
                javax.inject.Provider r3 = r2.keyguardTransitionRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl r3 = (com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl) r3
                dagger.internal.DelegateFactory r4 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r4 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r4
                javax.inject.Provider r5 = r2.bgApplicationScopeProvider
                java.lang.Object r5 = r5.get()
                kotlinx.coroutines.CoroutineScope r5 = (kotlinx.coroutines.CoroutineScope) r5
                javax.inject.Provider r6 = r2.bgDispatcherProvider
                java.lang.Object r6 = r6.get()
                kotlinx.coroutines.CoroutineDispatcher r6 = (kotlinx.coroutines.CoroutineDispatcher) r6
                javax.inject.Provider r1 = r1.mainDispatcherProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                kotlinx.coroutines.CoroutineDispatcher r7 = (kotlinx.coroutines.CoroutineDispatcher) r7
                dagger.internal.DelegateFactory r1 = r2.keyguardInteractorProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r8 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r8
                com.android.systemui.keyguard.domain.interactor.GlanceableHubTransitions r9 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1520$$Nest$mglanceableHubTransitions(r2)
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7, r8, r9)
                return r0
            L_0x01ed:
                com.android.systemui.keyguard.ui.viewmodel.DreamingToLockscreenTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.DreamingToLockscreenTransitionViewModel
                dagger.internal.DelegateFactory r1 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r1 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r1
                javax.inject.Provider r3 = r2.fromDreamingTransitionInteractorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.domain.interactor.FromDreamingTransitionInteractor r3 = (com.android.systemui.keyguard.domain.interactor.FromDreamingTransitionInteractor) r3
                javax.inject.Provider r2 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r2 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x0211:
                com.android.systemui.keyguard.ui.viewmodel.DreamingHostedToLockscreenTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.DreamingHostedToLockscreenTransitionViewModel
                javax.inject.Provider r1 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r1 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r1
                r0.<init>(r1)
                return r0
            L_0x0221:
                com.android.systemui.keyguard.ui.viewmodel.DozingToLockscreenTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.DozingToLockscreenTransitionViewModel
                javax.inject.Provider r1 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r1 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r1
                r0.<init>(r1)
                return r0
            L_0x0231:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideKeyguardTransitionAnimationLogBufferFactory.provideKeyguardTransitionAnimationLogBuffer(r0)
                return r0
            L_0x0240:
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r0 = new com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                dagger.internal.DelegateFactory r3 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r3 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r3
                com.android.keyguard.logging.KeyguardTransitionAnimationLogger r2 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1543$$Nest$mkeyguardTransitionAnimationLogger(r2)
                r0.<init>(r1, r3, r2)
                return r0
            L_0x025e:
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor r0 = new com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor
                javax.inject.Provider r1 = r2.fingerprintPropertyRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.biometrics.data.repository.FingerprintPropertyRepository r1 = (com.android.systemui.biometrics.data.repository.FingerprintPropertyRepository) r1
                javax.inject.Provider r3 = r2.deviceEntryFingerprintAuthRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.data.repository.DeviceEntryFingerprintAuthRepository r3 = (com.android.systemui.keyguard.data.repository.DeviceEntryFingerprintAuthRepository) r3
                javax.inject.Provider r2 = r2.biometricSettingsRepositoryImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl r2 = (com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x0282:
                com.android.systemui.keyguard.ui.viewmodel.AodToLockscreenTransitionViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.AodToLockscreenTransitionViewModel
                javax.inject.Provider r1 = r2.deviceEntryUdfpsInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor r1 = (com.android.systemui.deviceentry.domain.interactor.DeviceEntryUdfpsInteractor) r1
                dagger.internal.DelegateFactory r1 = r2.shadeInteractorImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.shade.domain.interactor.ShadeInteractor r1 = (com.android.systemui.shade.domain.interactor.ShadeInteractor) r1
                javax.inject.Provider r2 = r2.keyguardTransitionAnimationFlowProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow r2 = (com.android.systemui.keyguard.ui.KeyguardTransitionAnimationFlow) r2
                r0.<init>(r1, r2)
                return r0
            L_0x02a6:
                com.android.systemui.keyguard.domain.interactor.BurnInInteractor r0 = new com.android.systemui.keyguard.domain.interactor.BurnInInteractor
                android.content.Context r4 = r1.context
                com.android.systemui.doze.util.BurnInHelperWrapper r5 = new com.android.systemui.doze.util.BurnInHelperWrapper
                r5.<init>()
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                kotlinx.coroutines.CoroutineScope r6 = (kotlinx.coroutines.CoroutineScope) r6
                javax.inject.Provider r1 = r2.configurationRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.common.ui.data.repository.ConfigurationRepository r7 = (com.android.systemui.common.ui.data.repository.ConfigurationRepository) r7
                dagger.internal.DelegateFactory r1 = r2.keyguardInteractorProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r8 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r8
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8)
                return r0
            L_0x02d7:
                com.android.systemui.stylus.StylusManager r0 = new com.android.systemui.stylus.StylusManager
                android.content.Context r10 = r1.context
                javax.inject.Provider r3 = r1.provideInputManagerProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                android.hardware.input.InputManager r11 = (android.hardware.input.InputManager) r11
                javax.inject.Provider r3 = r1.provideBluetoothAdapterProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                android.bluetooth.BluetoothAdapter r12 = (android.bluetooth.BluetoothAdapter) r12
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r3 = r2.provideBgHandlerProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                android.os.Handler r13 = (android.os.Handler) r13
                javax.inject.Provider r3 = r2.provideBackgroundExecutorProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                java.util.concurrent.Executor r14 = (java.util.concurrent.Executor) r14
                dagger.internal.DelegateFactory r2 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r2 = r2.get()
                r15 = r2
                com.android.systemui.flags.FeatureFlags r15 = (com.android.systemui.flags.FeatureFlags) r15
                javax.inject.Provider r1 = r1.provideUiEventLoggerProvider
                java.lang.Object r1 = r1.get()
                r16 = r1
                com.android.internal.logging.UiEventLogger r16 = (com.android.internal.logging.UiEventLogger) r16
                r9 = r0
                r9.<init>(r10, r11, r12, r13, r14, r15, r16)
                return r0
            L_0x0323:
                com.android.systemui.notetask.NoteTaskBubblesController r0 = new com.android.systemui.notetask.NoteTaskBubblesController
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                android.content.Context r1 = (android.content.Context) r1
                javax.inject.Provider r2 = r2.bgDispatcherProvider
                java.lang.Object r2 = r2.get()
                kotlinx.coroutines.CoroutineDispatcher r2 = (kotlinx.coroutines.CoroutineDispatcher) r2
                r0.<init>(r1, r2)
                return r0
            L_0x033d:
                com.android.systemui.notetask.NoteTaskController r0 = new com.android.systemui.notetask.NoteTaskController
                android.content.Context r4 = r1.context
                javax.inject.Provider r3 = r1.provideRoleManagerProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                android.app.role.RoleManager r5 = (android.app.role.RoleManager) r5
                javax.inject.Provider r3 = r1.provideShortcutManagerProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                android.content.pm.ShortcutManager r6 = (android.content.pm.ShortcutManager) r6
                com.android.systemui.notetask.NoteTaskInfoResolver r7 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1592$$Nest$mnoteTaskInfoResolver(r2)
                com.android.systemui.notetask.NoteTaskEventLogger r8 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1591$$Nest$mnoteTaskEventLogger(r2)
                javax.inject.Provider r3 = r2.noteTaskBubblesControllerProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                com.android.systemui.notetask.NoteTaskBubblesController r9 = (com.android.systemui.notetask.NoteTaskBubblesController) r9
                javax.inject.Provider r3 = r1.provideUserManagerProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                android.os.UserManager r10 = (android.os.UserManager) r10
                javax.inject.Provider r3 = r1.provideKeyguardManagerProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                android.app.KeyguardManager r11 = (android.app.KeyguardManager) r11
                javax.inject.Provider r3 = r1.provideActivityManagerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                android.app.ActivityManager r12 = (android.app.ActivityManager) r12
                boolean r13 = r2.noteTaskEnabledKeyBoolean()
                javax.inject.Provider r3 = r1.provideDevicePolicyManagerProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                android.app.admin.DevicePolicyManager r14 = (android.app.admin.DevicePolicyManager) r14
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                com.android.systemui.settings.UserTracker r15 = (com.android.systemui.settings.UserTracker) r15
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r3 = r2.secureSettingsImplProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.util.settings.SecureSettings r16 = (com.android.systemui.util.settings.SecureSettings) r16
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r17 = r1
                kotlinx.coroutines.CoroutineScope r17 = (kotlinx.coroutines.CoroutineScope) r17
                javax.inject.Provider r1 = r2.bgCoroutineContextProvider
                java.lang.Object r1 = r1.get()
                r18 = r1
                kotlin.coroutines.CoroutineContext r18 = (kotlin.coroutines.CoroutineContext) r18
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18)
                return r0
            L_0x03cc:
                com.android.systemui.keyguard.data.quickaffordance.VideoCameraQuickAffordanceConfig r0 = new com.android.systemui.keyguard.data.quickaffordance.VideoCameraQuickAffordanceConfig
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideApplicationContextProvider
                java.lang.Object r3 = r3.get()
                r20 = r3
                android.content.Context r20 = (android.content.Context) r20
                com.android.systemui.camera.CameraIntentsWrapper r3 = new com.android.systemui.camera.CameraIntentsWrapper
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r4 = r2.sysUIGoogleGlobalRootComponentImpl
                android.content.Context r4 = r4.context
                r3.<init>(r4)
                javax.inject.Provider r4 = r2.activityIntentHelperProvider
                java.lang.Object r4 = r4.get()
                r22 = r4
                com.android.systemui.ActivityIntentHelper r22 = (com.android.systemui.ActivityIntentHelper) r22
                dagger.internal.DelegateFactory r4 = r2.provideUserTrackerProvider
                java.lang.Object r4 = r4.get()
                r23 = r4
                com.android.systemui.settings.UserTracker r23 = (com.android.systemui.settings.UserTracker) r23
                javax.inject.Provider r1 = r1.provideDevicePolicyManagerProvider
                java.lang.Object r1 = r1.get()
                r24 = r1
                android.app.admin.DevicePolicyManager r24 = (android.app.admin.DevicePolicyManager) r24
                javax.inject.Provider r1 = r2.bgDispatcherProvider
                java.lang.Object r1 = r1.get()
                r25 = r1
                kotlinx.coroutines.CoroutineDispatcher r25 = (kotlinx.coroutines.CoroutineDispatcher) r25
                r19 = r0
                r21 = r3
                r19.<init>(r20, r21, r22, r23, r24, r25)
                return r0
            L_0x0419:
                com.android.systemui.qrcodescanner.controller.QRCodeScannerController r0 = new com.android.systemui.qrcodescanner.controller.QRCodeScannerController
                android.content.Context r5 = r1.context
                javax.inject.Provider r1 = r2.provideBackgroundExecutorProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                java.util.concurrent.Executor r6 = (java.util.concurrent.Executor) r6
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r1 = r2.secureSettingsImplProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.util.settings.SecureSettings r7 = (com.android.systemui.util.settings.SecureSettings) r7
                javax.inject.Provider r1 = r2.deviceConfigProxyProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.util.DeviceConfigProxy r8 = (com.android.systemui.util.DeviceConfigProxy) r8
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.settings.UserTracker r9 = (com.android.systemui.settings.UserTracker) r9
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9)
                return r0
            L_0x0450:
                com.android.systemui.keyguard.data.quickaffordance.QrCodeScannerKeyguardQuickAffordanceConfig r0 = new com.android.systemui.keyguard.data.quickaffordance.QrCodeScannerKeyguardQuickAffordanceConfig
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                android.content.Context r1 = (android.content.Context) r1
                javax.inject.Provider r2 = r2.qRCodeScannerControllerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.qrcodescanner.controller.QRCodeScannerController r2 = (com.android.systemui.qrcodescanner.controller.QRCodeScannerController) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0468:
                android.content.Context r0 = r1.context
                javax.inject.Provider r1 = r2.provideBackgroundExecutorProvider
                java.lang.Object r1 = r1.get()
                java.util.concurrent.Executor r1 = (java.util.concurrent.Executor) r1
                android.service.quickaccesswallet.QuickAccessWalletClient r0 = com.android.systemui.wallet.dagger.WalletModule_ProvideQuickAccessWalletClientFactory.provideQuickAccessWalletClient(r0, r1)
                return r0
            L_0x047b:
                com.android.systemui.wallet.controller.QuickAccessWalletController r0 = new com.android.systemui.wallet.controller.QuickAccessWalletController
                android.content.Context r3 = r1.context
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                java.util.concurrent.Executor r4 = (java.util.concurrent.Executor) r4
                javax.inject.Provider r1 = r2.provideBackgroundExecutorProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                java.util.concurrent.Executor r5 = (java.util.concurrent.Executor) r5
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r1 = r2.secureSettingsImplProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.util.settings.SecureSettings r6 = (com.android.systemui.util.settings.SecureSettings) r6
                javax.inject.Provider r1 = r2.provideQuickAccessWalletClientProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                android.service.quickaccesswallet.QuickAccessWalletClient r7 = (android.service.quickaccesswallet.QuickAccessWalletClient) r7
                javax.inject.Provider r1 = r2.bindSystemClockProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.util.time.SystemClock r8 = (com.android.systemui.util.time.SystemClock) r8
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r1.<init>(r2, r3, r4, r5, r6, r7)
                return r0
            L_0x04c1:
                com.android.systemui.keyguard.data.quickaffordance.QuickAccessWalletKeyguardQuickAffordanceConfig r0 = new com.android.systemui.keyguard.data.quickaffordance.QuickAccessWalletKeyguardQuickAffordanceConfig
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                android.content.Context r1 = (android.content.Context) r1
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                kotlinx.coroutines.CoroutineDispatcher r3 = (kotlinx.coroutines.CoroutineDispatcher) r3
                javax.inject.Provider r4 = r2.quickAccessWalletControllerProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.wallet.controller.QuickAccessWalletController r4 = (com.android.systemui.wallet.controller.QuickAccessWalletController) r4
                dagger.internal.DelegateFactory r2 = r2.activityStarterImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.plugins.ActivityStarter r2 = (com.android.systemui.plugins.ActivityStarter) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x04ed:
                com.android.systemui.util.RingerModeTrackerImpl r0 = new com.android.systemui.util.RingerModeTrackerImpl
                javax.inject.Provider r1 = r1.provideAudioManagerProvider
                java.lang.Object r1 = r1.get()
                android.media.AudioManager r1 = (android.media.AudioManager) r1
                javax.inject.Provider r3 = r2.broadcastDispatcherProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.broadcast.BroadcastDispatcher r3 = (com.android.systemui.broadcast.BroadcastDispatcher) r3
                javax.inject.Provider r2 = r2.provideBackgroundExecutorProvider
                java.lang.Object r2 = r2.get()
                java.util.concurrent.Executor r2 = (java.util.concurrent.Executor) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x0511:
                com.android.systemui.keyguard.data.quickaffordance.MuteQuickAffordanceConfig r0 = new com.android.systemui.keyguard.data.quickaffordance.MuteQuickAffordanceConfig
                android.content.Context r5 = r1.context
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.settings.UserTracker r6 = (com.android.systemui.settings.UserTracker) r6
                javax.inject.Provider r3 = r2.userFileManagerImplProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.settings.UserFileManager r7 = (com.android.systemui.settings.UserFileManager) r7
                javax.inject.Provider r3 = r2.ringerModeTrackerImplProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                com.android.systemui.util.RingerModeTrackerImpl r8 = (com.android.systemui.util.RingerModeTrackerImpl) r8
                javax.inject.Provider r3 = r1.provideAudioManagerProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                android.media.AudioManager r9 = (android.media.AudioManager) r9
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                kotlinx.coroutines.CoroutineScope r10 = (kotlinx.coroutines.CoroutineScope) r10
                javax.inject.Provider r1 = r1.mainDispatcherProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                kotlinx.coroutines.CoroutineDispatcher r11 = (kotlinx.coroutines.CoroutineDispatcher) r11
                javax.inject.Provider r1 = r2.bgDispatcherProvider
                java.lang.Object r1 = r1.get()
                r12 = r1
                kotlinx.coroutines.CoroutineDispatcher r12 = (kotlinx.coroutines.CoroutineDispatcher) r12
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9, r10, r11, r12)
                return r0
            L_0x0567:
                com.google.android.systemui.controls.GoogleControlsTileResourceConfigurationImpl r0 = new com.google.android.systemui.controls.GoogleControlsTileResourceConfigurationImpl
                dagger.internal.DelegateFactory r1 = r2.controlsComponentProvider
                dagger.Lazy r1 = dagger.internal.DoubleCheck.lazy(r1)
                r0.<init>(r1)
                return r0
            L_0x0575:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$10 r1 = new com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$10
                r1.<init>(r0)
                return r1
            L_0x057b:
                com.android.systemui.controls.controller.ControlsBindingControllerImpl r0 = new com.android.systemui.controls.controller.ControlsBindingControllerImpl
                android.content.Context r3 = r1.context
                javax.inject.Provider r1 = r2.provideBackgroundDelayableExecutorProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                com.android.systemui.util.concurrency.DelayableExecutor r4 = (com.android.systemui.util.concurrency.DelayableExecutor) r4
                dagger.internal.DelegateFactory r1 = r2.controlsControllerImplProvider
                dagger.Lazy r5 = dagger.internal.DoubleCheck.lazy(r1)
                javax.inject.Provider r1 = r2.factoryProvider12
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$10 r6 = (com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$10) r6
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.settings.UserTracker r7 = (com.android.systemui.settings.UserTracker) r7
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7)
                return r0
            L_0x05af:
                com.android.systemui.controls.panels.SelectedComponentRepositoryImpl r0 = new com.android.systemui.controls.panels.SelectedComponentRepositoryImpl
                javax.inject.Provider r1 = r2.userFileManagerImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.settings.UserFileManager r1 = (com.android.systemui.settings.UserFileManager) r1
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.settings.UserTracker r3 = (com.android.systemui.settings.UserTracker) r3
                javax.inject.Provider r2 = r2.bgDispatcherProvider
                java.lang.Object r2 = r2.get()
                kotlinx.coroutines.CoroutineDispatcher r2 = (kotlinx.coroutines.CoroutineDispatcher) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x05d3:
                com.android.systemui.controls.CustomIconCache r0 = new com.android.systemui.controls.CustomIconCache
                r0.<init>()
                return r0
            L_0x05d9:
                com.android.systemui.controls.settings.ControlsSettingsRepositoryImpl r0 = new com.android.systemui.controls.settings.ControlsSettingsRepositoryImpl
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                kotlinx.coroutines.CoroutineDispatcher r3 = (kotlinx.coroutines.CoroutineDispatcher) r3
                javax.inject.Provider r4 = r2.userRepositoryImplProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.user.data.repository.UserRepositoryImpl r4 = (com.android.systemui.user.data.repository.UserRepositoryImpl) r4
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r2 = r2.secureSettingsImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.util.settings.SecureSettings r2 = (com.android.systemui.util.settings.SecureSettings) r2
                r0.<init>(r4, r2, r3, r1)
                return r0
            L_0x0607:
                com.android.systemui.statusbar.VibratorHelper r0 = new com.android.systemui.statusbar.VibratorHelper
                javax.inject.Provider r1 = r1.provideVibratorProvider
                java.lang.Object r1 = r1.get()
                android.os.Vibrator r1 = (android.os.Vibrator) r1
                java.util.concurrent.ExecutorService r2 = java.util.concurrent.Executors.newSingleThreadExecutor()
                r0.<init>(r1, r2)
                return r0
            L_0x0619:
                com.android.systemui.controls.ControlsMetricsLoggerImpl r0 = new com.android.systemui.controls.ControlsMetricsLoggerImpl
                r0.<init>()
                return r0
            L_0x061f:
                com.android.systemui.controls.ui.ControlActionCoordinatorImpl r0 = new com.android.systemui.controls.ui.ControlActionCoordinatorImpl
                android.content.Context r3 = r1.context
                javax.inject.Provider r4 = r2.provideBackgroundDelayableExecutorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.util.concurrency.DelayableExecutor r4 = (com.android.systemui.util.concurrency.DelayableExecutor) r4
                javax.inject.Provider r1 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.util.concurrency.DelayableExecutor r5 = (com.android.systemui.util.concurrency.DelayableExecutor) r5
                dagger.internal.DelegateFactory r1 = r2.activityStarterImplProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.plugins.ActivityStarter r6 = (com.android.systemui.plugins.ActivityStarter) r6
                javax.inject.Provider r1 = r2.broadcastSenderProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.broadcast.BroadcastSender r7 = (com.android.systemui.broadcast.BroadcastSender) r7
                dagger.internal.DelegateFactory r1 = r2.keyguardStateControllerImplProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.statusbar.policy.KeyguardStateController r8 = (com.android.systemui.statusbar.policy.KeyguardStateController) r8
                javax.inject.Provider r1 = r2.controlsMetricsLoggerImplProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.controls.ControlsMetricsLoggerImpl r9 = (com.android.systemui.controls.ControlsMetricsLoggerImpl) r9
                javax.inject.Provider r1 = r2.vibratorHelperProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.statusbar.VibratorHelper r10 = (com.android.systemui.statusbar.VibratorHelper) r10
                javax.inject.Provider r1 = r2.controlsSettingsRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                com.android.systemui.controls.settings.ControlsSettingsRepository r11 = (com.android.systemui.controls.settings.ControlsSettingsRepository) r11
                java.util.Optional r12 = r2.setTaskViewFactory
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r12
                r1.<init>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11)
                return r0
            L_0x0686:
                com.android.systemui.controls.ui.ControlsUiControllerImpl r0 = new com.android.systemui.controls.ui.ControlsUiControllerImpl
                dagger.internal.DelegateFactory r3 = r2.controlsControllerImplProvider
                dagger.Lazy r14 = dagger.internal.DoubleCheck.lazy(r3)
                android.content.Context r15 = r1.context
                javax.inject.Provider r3 = r1.providePackageManagerProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                android.content.pm.PackageManager r16 = (android.content.pm.PackageManager) r16
                javax.inject.Provider r3 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                com.android.systemui.util.concurrency.DelayableExecutor r17 = (com.android.systemui.util.concurrency.DelayableExecutor) r17
                javax.inject.Provider r3 = r2.provideBackgroundDelayableExecutorProvider
                java.lang.Object r3 = r3.get()
                r18 = r3
                com.android.systemui.util.concurrency.DelayableExecutor r18 = (com.android.systemui.util.concurrency.DelayableExecutor) r18
                dagger.internal.DelegateFactory r3 = r2.controlsListingControllerImplProvider
                dagger.Lazy r19 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.controlActionCoordinatorImplProvider
                java.lang.Object r3 = r3.get()
                r20 = r3
                com.android.systemui.controls.ui.ControlActionCoordinatorImpl r20 = (com.android.systemui.controls.ui.ControlActionCoordinatorImpl) r20
                dagger.internal.DelegateFactory r3 = r2.activityStarterImplProvider
                java.lang.Object r3 = r3.get()
                r21 = r3
                com.android.systemui.plugins.ActivityStarter r21 = (com.android.systemui.plugins.ActivityStarter) r21
                javax.inject.Provider r3 = r2.customIconCacheProvider
                java.lang.Object r3 = r3.get()
                r22 = r3
                com.android.systemui.controls.CustomIconCache r22 = (com.android.systemui.controls.CustomIconCache) r22
                javax.inject.Provider r3 = r2.controlsMetricsLoggerImplProvider
                java.lang.Object r3 = r3.get()
                r23 = r3
                com.android.systemui.controls.ControlsMetricsLoggerImpl r23 = (com.android.systemui.controls.ControlsMetricsLoggerImpl) r23
                dagger.internal.DelegateFactory r3 = r2.keyguardStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r24 = r3
                com.android.systemui.statusbar.policy.KeyguardStateController r24 = (com.android.systemui.statusbar.policy.KeyguardStateController) r24
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r25 = r3
                com.android.systemui.settings.UserTracker r25 = (com.android.systemui.settings.UserTracker) r25
                javax.inject.Provider r3 = r2.controlsSettingsRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r27 = r3
                com.android.systemui.controls.settings.ControlsSettingsRepository r27 = (com.android.systemui.controls.settings.ControlsSettingsRepository) r27
                com.android.systemui.controls.panels.AuthorizedPanelsRepositoryImpl r28 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1451$$Nest$mauthorizedPanelsRepositoryImpl(r2)
                javax.inject.Provider r3 = r2.selectedComponentRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r29 = r3
                com.android.systemui.controls.panels.SelectedComponentRepositoryImpl r29 = (com.android.systemui.controls.panels.SelectedComponentRepositoryImpl) r29
                dagger.internal.DelegateFactory r3 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.flags.FeatureFlags r3 = (com.android.systemui.flags.FeatureFlags) r3
                com.android.systemui.controls.ui.ControlsDialogsFactory r30 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1478$$Nest$mcontrolsDialogsFactory(r2)
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r31 = r1
                com.android.systemui.dump.DumpManager r31 = (com.android.systemui.dump.DumpManager) r31
                java.util.Optional r1 = r2.setTaskViewFactory
                r26 = r1
                r13 = r0
                r13.<init>(r14, r15, r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30, r31)
                return r0
            L_0x073d:
                com.android.systemui.controls.controller.ControlsControllerImpl r0 = new com.android.systemui.controls.controller.ControlsControllerImpl
                android.content.Context r3 = r1.context
                javax.inject.Provider r4 = r2.provideBackgroundDelayableExecutorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.util.concurrency.DelayableExecutor r4 = (com.android.systemui.util.concurrency.DelayableExecutor) r4
                javax.inject.Provider r5 = r2.controlsUiControllerImplProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.controls.ui.ControlsUiControllerImpl r5 = (com.android.systemui.controls.ui.ControlsUiControllerImpl) r5
                javax.inject.Provider r6 = r2.selectedComponentRepositoryImplProvider
                java.lang.Object r6 = r6.get()
                com.android.systemui.controls.panels.SelectedComponentRepositoryImpl r6 = (com.android.systemui.controls.panels.SelectedComponentRepositoryImpl) r6
                javax.inject.Provider r7 = r2.controlsBindingControllerImplProvider
                java.lang.Object r7 = r7.get()
                com.android.systemui.controls.controller.ControlsBindingController r7 = (com.android.systemui.controls.controller.ControlsBindingController) r7
                dagger.internal.DelegateFactory r8 = r2.controlsListingControllerImplProvider
                java.lang.Object r8 = r8.get()
                com.android.systemui.controls.management.ControlsListingController r8 = (com.android.systemui.controls.management.ControlsListingController) r8
                javax.inject.Provider r9 = r2.userFileManagerImplProvider
                java.lang.Object r9 = r9.get()
                com.android.systemui.settings.UserFileManager r9 = (com.android.systemui.settings.UserFileManager) r9
                dagger.internal.DelegateFactory r10 = r2.provideUserTrackerProvider
                java.lang.Object r10 = r10.get()
                com.android.systemui.settings.UserTracker r10 = (com.android.systemui.settings.UserTracker) r10
                com.android.systemui.controls.panels.AuthorizedPanelsRepositoryImpl r11 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1451$$Nest$mauthorizedPanelsRepositoryImpl(r2)
                java.util.Optional r12 = java.util.Optional.empty()
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r13 = r1
                com.android.systemui.dump.DumpManager r13 = (com.android.systemui.dump.DumpManager) r13
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13)
                return r0
            L_0x079b:
                javax.inject.Provider r0 = r1.providePackageManagerProvider
                java.lang.Object r0 = r0.get()
                android.content.pm.PackageManager r0 = (android.content.pm.PackageManager) r0
                boolean r0 = com.android.systemui.controls.dagger.ControlsModule.providesControlsFeatureEnabled(r0)
                java.lang.Boolean r0 = java.lang.Boolean.valueOf(r0)
                return r0
            L_0x07ae:
                com.android.systemui.controls.dagger.ControlsComponent r0 = new com.android.systemui.controls.dagger.ControlsComponent
                javax.inject.Provider r3 = r2.providesControlsFeatureEnabledProvider
                java.lang.Object r3 = r3.get()
                java.lang.Boolean r3 = (java.lang.Boolean) r3
                boolean r3 = r3.booleanValue()
                dagger.internal.DelegateFactory r4 = r2.controlsControllerImplProvider
                dagger.Lazy r4 = dagger.internal.DoubleCheck.lazy(r4)
                javax.inject.Provider r5 = r2.controlsUiControllerImplProvider
                dagger.Lazy r5 = dagger.internal.DoubleCheck.lazy(r5)
                dagger.internal.DelegateFactory r6 = r2.controlsListingControllerImplProvider
                dagger.Lazy r6 = dagger.internal.DoubleCheck.lazy(r6)
                javax.inject.Provider r1 = r1.provideLockPatternUtilsProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.internal.widget.LockPatternUtils r7 = (com.android.internal.widget.LockPatternUtils) r7
                dagger.internal.DelegateFactory r1 = r2.keyguardStateControllerImplProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.statusbar.policy.KeyguardStateController r8 = (com.android.systemui.statusbar.policy.KeyguardStateController) r8
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.settings.UserTracker r9 = (com.android.systemui.settings.UserTracker) r9
                javax.inject.Provider r1 = r2.controlsSettingsRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.controls.settings.ControlsSettingsRepository r10 = (com.android.systemui.controls.settings.ControlsSettingsRepository) r10
                javax.inject.Provider r1 = r2.googleControlsTileResourceConfigurationImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.controls.controller.ControlsTileResourceConfiguration r1 = (com.android.systemui.controls.controller.ControlsTileResourceConfiguration) r1
                java.util.Optional r11 = java.util.Optional.of(r1)
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r9
                r9 = r10
                r10 = r11
                r1.<init>(r2, r3, r4, r5, r6, r7, r8, r9, r10)
                return r0
            L_0x0818:
                com.android.systemui.keyguard.data.quickaffordance.HomeControlsKeyguardQuickAffordanceConfig r0 = new com.android.systemui.keyguard.data.quickaffordance.HomeControlsKeyguardQuickAffordanceConfig
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                android.content.Context r1 = (android.content.Context) r1
                dagger.internal.DelegateFactory r2 = r2.controlsComponentProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.controls.dagger.ControlsComponent r2 = (com.android.systemui.controls.dagger.ControlsComponent) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0832:
                com.android.systemui.statusbar.policy.FlashlightControllerImpl r0 = new com.android.systemui.statusbar.policy.FlashlightControllerImpl
                javax.inject.Provider r3 = r1.dumpManagerProvider
                java.lang.Object r3 = r3.get()
                r4 = r3
                com.android.systemui.dump.DumpManager r4 = (com.android.systemui.dump.DumpManager) r4
                javax.inject.Provider r3 = r1.provideCameraManagerProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                android.hardware.camera2.CameraManager r5 = (android.hardware.camera2.CameraManager) r5
                javax.inject.Provider r3 = r2.provideBackgroundExecutorProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                java.util.concurrent.Executor r6 = (java.util.concurrent.Executor) r6
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r3 = r2.secureSettingsImplProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.util.settings.SecureSettings r7 = (com.android.systemui.util.settings.SecureSettings) r7
                javax.inject.Provider r2 = r2.broadcastSenderProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.broadcast.BroadcastSender r2 = (com.android.systemui.broadcast.BroadcastSender) r2
                javax.inject.Provider r1 = r1.providePackageManagerProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                android.content.pm.PackageManager r8 = (android.content.pm.PackageManager) r8
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8)
                return r0
            L_0x0878:
                com.android.systemui.keyguard.data.quickaffordance.FlashlightQuickAffordanceConfig r0 = new com.android.systemui.keyguard.data.quickaffordance.FlashlightQuickAffordanceConfig
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                android.content.Context r1 = (android.content.Context) r1
                javax.inject.Provider r2 = r2.flashlightControllerImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.policy.FlashlightController r2 = (com.android.systemui.statusbar.policy.FlashlightController) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0890:
                com.android.systemui.keyguard.data.quickaffordance.DoNotDisturbQuickAffordanceConfig r0 = new com.android.systemui.keyguard.data.quickaffordance.DoNotDisturbQuickAffordanceConfig
                android.content.Context r4 = r1.context
                javax.inject.Provider r1 = r2.zenModeControllerImplProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.statusbar.policy.ZenModeController r5 = (com.android.systemui.statusbar.policy.ZenModeController) r5
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r1 = r2.secureSettingsImplProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.util.settings.SecureSettings r6 = (com.android.systemui.util.settings.SecureSettings) r6
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.settings.UserTracker r7 = (com.android.systemui.settings.UserTracker) r7
                javax.inject.Provider r1 = r2.bgDispatcherProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                kotlinx.coroutines.CoroutineDispatcher r8 = (kotlinx.coroutines.CoroutineDispatcher) r8
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8)
                return r0
            L_0x08c5:
                com.android.systemui.camera.CameraGestureHelper r0 = new com.android.systemui.camera.CameraGestureHelper
                android.content.Context r10 = r1.context
                dagger.internal.DelegateFactory r3 = r2.centralSurfacesGoogleProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.statusbar.phone.CentralSurfaces r11 = (com.android.systemui.statusbar.phone.CentralSurfaces) r11
                dagger.internal.DelegateFactory r3 = r2.keyguardStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.statusbar.policy.KeyguardStateController r12 = (com.android.systemui.statusbar.policy.KeyguardStateController) r12
                dagger.internal.DelegateFactory r3 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r13 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r13
                javax.inject.Provider r3 = r1.providePackageManagerProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                android.content.pm.PackageManager r14 = (android.content.pm.PackageManager) r14
                javax.inject.Provider r3 = r1.provideActivityManagerProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                android.app.ActivityManager r15 = (android.app.ActivityManager) r15
                dagger.internal.DelegateFactory r3 = r2.activityStarterImplProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.plugins.ActivityStarter r16 = (com.android.systemui.plugins.ActivityStarter) r16
                javax.inject.Provider r3 = r2.activityIntentHelperProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                com.android.systemui.ActivityIntentHelper r17 = (com.android.systemui.ActivityIntentHelper) r17
                javax.inject.Provider r3 = r1.provideIActivityTaskManagerProvider
                java.lang.Object r3 = r3.get()
                r18 = r3
                android.app.IActivityTaskManager r18 = (android.app.IActivityTaskManager) r18
                com.android.systemui.camera.CameraIntentsWrapper r3 = new com.android.systemui.camera.CameraIntentsWrapper
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r4 = r2.sysUIGoogleGlobalRootComponentImpl
                android.content.Context r4 = r4.context
                r3.<init>(r4)
                javax.inject.Provider r4 = r1.provideContentResolverProvider
                java.lang.Object r4 = r4.get()
                r20 = r4
                android.content.ContentResolver r20 = (android.content.ContentResolver) r20
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                r21 = r1
                java.util.concurrent.Executor r21 = (java.util.concurrent.Executor) r21
                javax.inject.Provider r1 = r2.selectedUserInteractorProvider
                java.lang.Object r1 = r1.get()
                r22 = r1
                com.android.systemui.user.domain.interactor.SelectedUserInteractor r22 = (com.android.systemui.user.domain.interactor.SelectedUserInteractor) r22
                r9 = r0
                r19 = r3
                r9.<init>(r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22)
                return r0
            L_0x0956:
                com.android.systemui.keyguard.data.quickaffordance.CameraQuickAffordanceConfig r0 = new com.android.systemui.keyguard.data.quickaffordance.CameraQuickAffordanceConfig
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideApplicationContextProvider
                java.lang.Object r3 = r3.get()
                r24 = r3
                android.content.Context r24 = (android.content.Context) r24
                javax.inject.Provider r3 = r1.providePackageManagerProvider
                java.lang.Object r3 = r3.get()
                r25 = r3
                android.content.pm.PackageManager r25 = (android.content.pm.PackageManager) r25
                javax.inject.Provider r3 = r2.cameraGestureHelperProvider
                dagger.Lazy r26 = dagger.internal.DoubleCheck.lazy(r3)
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r27 = r3
                com.android.systemui.settings.UserTracker r27 = (com.android.systemui.settings.UserTracker) r27
                javax.inject.Provider r1 = r1.provideDevicePolicyManagerProvider
                java.lang.Object r1 = r1.get()
                r28 = r1
                android.app.admin.DevicePolicyManager r28 = (android.app.admin.DevicePolicyManager) r28
                javax.inject.Provider r1 = r2.bgDispatcherProvider
                java.lang.Object r1 = r1.get()
                r29 = r1
                kotlinx.coroutines.CoroutineDispatcher r29 = (kotlinx.coroutines.CoroutineDispatcher) r29
                r23 = r0
                r23.<init>(r24, r25, r26, r27, r28, r29)
                return r0
            L_0x09a0:
                com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLegacySettingSyncer r0 = new com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLegacySettingSyncer
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                kotlinx.coroutines.CoroutineDispatcher r3 = (kotlinx.coroutines.CoroutineDispatcher) r3
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r4 = r2.secureSettingsImplProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.util.settings.SecureSettings r4 = (com.android.systemui.util.settings.SecureSettings) r4
                javax.inject.Provider r2 = r2.keyguardQuickAffordanceLocalUserSelectionManagerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLocalUserSelectionManager r2 = (com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLocalUserSelectionManager) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x09cc:
                com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceRemoteUserSelectionManager r0 = new com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceRemoteUserSelectionManager
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.settings.UserTracker r3 = (com.android.systemui.settings.UserTracker) r3
                com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceProviderClientFactoryImpl r2 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1542$$Nest$mkeyguardQuickAffordanceProviderClientFactoryImpl(r2)
                android.os.UserHandle r4 = new android.os.UserHandle
                int r5 = android.os.UserHandle.myUserId()
                r4.<init>(r5)
                r0.<init>(r1, r3, r2, r4)
                return r0
            L_0x09f3:
                com.android.systemui.settings.UserFileManagerImpl r0 = new com.android.systemui.settings.UserFileManagerImpl
                android.content.Context r3 = r1.context
                javax.inject.Provider r1 = r1.provideUserManagerProvider
                java.lang.Object r1 = r1.get()
                android.os.UserManager r1 = (android.os.UserManager) r1
                javax.inject.Provider r4 = r2.broadcastDispatcherProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.broadcast.BroadcastDispatcher r4 = (com.android.systemui.broadcast.BroadcastDispatcher) r4
                javax.inject.Provider r2 = r2.provideBackgroundDelayableExecutorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.util.concurrency.DelayableExecutor r2 = (com.android.systemui.util.concurrency.DelayableExecutor) r2
                r0.<init>(r3, r1, r4, r2)
                return r0
            L_0x0a1b:
                com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLocalUserSelectionManager r0 = new com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLocalUserSelectionManager
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                android.content.Context r1 = (android.content.Context) r1
                javax.inject.Provider r3 = r2.userFileManagerImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.settings.UserFileManager r3 = (com.android.systemui.settings.UserFileManager) r3
                dagger.internal.DelegateFactory r4 = r2.provideUserTrackerProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.settings.UserTracker r4 = (com.android.systemui.settings.UserTracker) r4
                javax.inject.Provider r2 = r2.broadcastDispatcherProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.broadcast.BroadcastDispatcher r2 = (com.android.systemui.broadcast.BroadcastDispatcher) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x0a49:
                com.android.systemui.keyguard.data.repository.KeyguardQuickAffordanceRepository r0 = new com.android.systemui.keyguard.data.repository.KeyguardQuickAffordanceRepository
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideApplicationContextProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                android.content.Context r6 = (android.content.Context) r6
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                kotlinx.coroutines.CoroutineScope r7 = (kotlinx.coroutines.CoroutineScope) r7
                javax.inject.Provider r3 = r2.keyguardQuickAffordanceLocalUserSelectionManagerProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLocalUserSelectionManager r8 = (com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLocalUserSelectionManager) r8
                javax.inject.Provider r3 = r2.keyguardQuickAffordanceRemoteUserSelectionManagerProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceRemoteUserSelectionManager r9 = (com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceRemoteUserSelectionManager) r9
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                com.android.systemui.settings.UserTracker r10 = (com.android.systemui.settings.UserTracker) r10
                javax.inject.Provider r3 = r2.keyguardQuickAffordanceLegacySettingSyncerProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLegacySettingSyncer r11 = (com.android.systemui.keyguard.data.quickaffordance.KeyguardQuickAffordanceLegacySettingSyncer) r11
                java.util.Set r12 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1653$$Nest$msetOfKeyguardQuickAffordanceConfig(r2)
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r13 = r1
                com.android.systemui.dump.DumpManager r13 = (com.android.systemui.dump.DumpManager) r13
                android.os.UserHandle r14 = new android.os.UserHandle
                int r1 = android.os.UserHandle.myUserId()
                r14.<init>(r1)
                r5 = r0
                r5.<init>(r6, r7, r8, r9, r10, r11, r12, r13, r14)
                return r0
            L_0x0aa8:
                com.android.systemui.keyguard.domain.interactor.KeyguardQuickAffordanceInteractor r0 = new com.android.systemui.keyguard.domain.interactor.KeyguardQuickAffordanceInteractor
                dagger.internal.DelegateFactory r3 = r2.keyguardInteractorProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r16 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r16
                dagger.internal.DelegateFactory r3 = r2.shadeInteractorImplProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                com.android.systemui.shade.domain.interactor.ShadeInteractor r17 = (com.android.systemui.shade.domain.interactor.ShadeInteractor) r17
                javax.inject.Provider r3 = r1.provideLockPatternUtilsProvider
                java.lang.Object r3 = r3.get()
                r18 = r3
                com.android.internal.widget.LockPatternUtils r18 = (com.android.internal.widget.LockPatternUtils) r18
                dagger.internal.DelegateFactory r3 = r2.keyguardStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r19 = r3
                com.android.systemui.statusbar.policy.KeyguardStateController r19 = (com.android.systemui.statusbar.policy.KeyguardStateController) r19
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r20 = r3
                com.android.systemui.settings.UserTracker r20 = (com.android.systemui.settings.UserTracker) r20
                dagger.internal.DelegateFactory r3 = r2.activityStarterImplProvider
                java.lang.Object r3 = r3.get()
                r21 = r3
                com.android.systemui.plugins.ActivityStarter r21 = (com.android.systemui.plugins.ActivityStarter) r21
                dagger.internal.DelegateFactory r3 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r3 = r3.get()
                r22 = r3
                com.android.systemui.flags.FeatureFlags r22 = (com.android.systemui.flags.FeatureFlags) r22
                dagger.internal.DelegateFactory r3 = r2.keyguardQuickAffordanceRepositoryProvider
                dagger.Lazy r23 = dagger.internal.DoubleCheck.lazy(r3)
                javax.inject.Provider r3 = r2.provideDialogTransitionAnimatorProvider
                java.lang.Object r3 = r3.get()
                r24 = r3
                com.android.systemui.animation.DialogTransitionAnimator r24 = (com.android.systemui.animation.DialogTransitionAnimator) r24
                com.android.systemui.keyguard.shared.quickaffordance.KeyguardQuickAffordancesMetricsLoggerImpl r25 = com.android.systemui.keyguard.dagger.KeyguardModule_ProvidesKeyguardQuickAffordancesMetricsLoggerFactory.providesKeyguardQuickAffordancesMetricsLogger()
                javax.inject.Provider r3 = r1.provideDevicePolicyManagerProvider
                java.lang.Object r3 = r3.get()
                r26 = r3
                android.app.admin.DevicePolicyManager r26 = (android.app.admin.DevicePolicyManager) r26
                dagger.internal.DelegateFactory r3 = r2.dockObserverProvider
                java.lang.Object r3 = r3.get()
                r27 = r3
                com.android.systemui.dock.DockManager r27 = (com.android.systemui.dock.DockManager) r27
                javax.inject.Provider r3 = r2.biometricSettingsRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r28 = r3
                com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl r28 = (com.android.systemui.keyguard.data.repository.BiometricSettingsRepositoryImpl) r28
                javax.inject.Provider r2 = r2.bgDispatcherProvider
                java.lang.Object r2 = r2.get()
                r29 = r2
                kotlinx.coroutines.CoroutineDispatcher r29 = (kotlinx.coroutines.CoroutineDispatcher) r29
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                r30 = r1
                android.content.Context r30 = (android.content.Context) r30
                r15 = r0
                r15.<init>(r16, r17, r18, r19, r20, r21, r22, r23, r24, r25, r26, r27, r28, r29, r30)
                return r0
            L_0x0b55:
                com.android.systemui.keyguard.domain.interactor.KeyguardBottomAreaInteractor r0 = new com.android.systemui.keyguard.domain.interactor.KeyguardBottomAreaInteractor
                javax.inject.Provider r1 = r2.keyguardRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl r1 = (com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl) r1
                r0.<init>(r1)
                return r0
            L_0x0b65:
                com.android.systemui.keyguard.ui.view.layout.blueprints.DefaultKeyguardBlueprint r0 = new com.android.systemui.keyguard.ui.view.layout.blueprints.DefaultKeyguardBlueprint
                com.android.systemui.keyguard.ui.view.layout.sections.DefaultIndicationAreaSection r3 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1486$$Nest$mdefaultIndicationAreaSection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.DefaultDeviceEntrySection r4 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1485$$Nest$mdefaultDeviceEntrySection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.DefaultShortcutsSection r5 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1489$$Nest$mdefaultShortcutsSection(r2)
                com.google.android.systemui.keyguard.ui.sections.DefaultAmbientIndicationAreaSection r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1484$$Nest$mdefaultAmbientIndicationAreaSection(r2)
                java.util.Optional r6 = java.util.Optional.of(r1)
                com.android.systemui.keyguard.ui.view.layout.sections.DefaultSettingsPopupMenuSection r7 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1488$$Nest$mdefaultSettingsPopupMenuSection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.DefaultStatusViewSection r8 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1491$$Nest$mdefaultStatusViewSection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.DefaultStatusBarSection r9 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1490$$Nest$mdefaultStatusBarSection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.DefaultNotificationStackScrollLayoutSection r10 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1487$$Nest$mdefaultNotificationStackScrollLayoutSection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.AodNotificationIconsSection r11 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1446$$Nest$maodNotificationIconsSection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.AodBurnInSection r12 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1445$$Nest$maodBurnInSection(r2)
                com.android.systemui.communal.ui.view.layout.sections.CommunalTutorialIndicatorSection r13 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1476$$Nest$mcommunalTutorialIndicatorSection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.ClockSection r14 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1468$$Nest$mclockSection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.SmartspaceSection r15 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1669$$Nest$msmartspaceSection(r2)
                com.android.systemui.keyguard.ui.view.layout.sections.KeyguardSliceViewSection r1 = new com.android.systemui.keyguard.ui.view.layout.sections.KeyguardSliceViewSection
                r42 = r15
                javax.inject.Provider r15 = r2.lockscreenSmartspaceControllerProvider
                java.lang.Object r15 = r15.get()
                com.android.systemui.statusbar.lockscreen.LockscreenSmartspaceController r15 = (com.android.systemui.statusbar.lockscreen.LockscreenSmartspaceController) r15
                r1.<init>(r15)
                com.android.systemui.keyguard.ui.view.layout.sections.DefaultUdfpsAccessibilityOverlaySection r17 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1492$$Nest$mdefaultUdfpsAccessibilityOverlaySection(r2)
                r2 = r0
                r15 = r42
                r16 = r1
                r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17)
                return r0
            L_0x0bbb:
                com.android.systemui.keyguard.data.repository.KeyguardBlueprintRepository r0 = new com.android.systemui.keyguard.data.repository.KeyguardBlueprintRepository
                javax.inject.Provider r3 = r2.configurationRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.common.ui.data.repository.ConfigurationRepository r3 = (com.android.systemui.common.ui.data.repository.ConfigurationRepository) r3
                java.util.Set r4 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1652$$Nest$msetOfKeyguardBlueprint(r2)
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideMainHandlerProvider
                java.lang.Object r1 = r1.get()
                android.os.Handler r1 = (android.os.Handler) r1
                javax.inject.Provider r2 = r2.providesThreadAssertProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.util.ThreadAssert r2 = (com.android.systemui.util.ThreadAssert) r2
                r0.<init>(r3, r4, r1, r2)
                return r0
            L_0x0be3:
                com.android.systemui.keyguard.domain.interactor.KeyguardBlueprintInteractor r0 = new com.android.systemui.keyguard.domain.interactor.KeyguardBlueprintInteractor
                dagger.internal.DelegateFactory r3 = r2.keyguardBlueprintRepositoryProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.keyguard.data.repository.KeyguardBlueprintRepository r6 = (com.android.systemui.keyguard.data.repository.KeyguardBlueprintRepository) r6
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                kotlinx.coroutines.CoroutineScope r7 = (kotlinx.coroutines.CoroutineScope) r7
                android.content.Context r8 = r1.context
                javax.inject.Provider r1 = r2.splitShadeStateControllerImplProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.statusbar.policy.SplitShadeStateControllerImpl r9 = (com.android.systemui.statusbar.policy.SplitShadeStateControllerImpl) r9
                javax.inject.Provider r1 = r2.keyguardClockInteractorProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardClockInteractor r10 = (com.android.systemui.keyguard.domain.interactor.KeyguardClockInteractor) r10
                r5 = r0
                r5.<init>(r6, r7, r8, r9, r10)
                return r0
            L_0x0c18:
                com.android.systemui.statusbar.policy.ZenModeControllerImpl r0 = new com.android.systemui.statusbar.policy.ZenModeControllerImpl
                android.content.Context r12 = r1.context
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideMainHandlerProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                android.os.Handler r13 = (android.os.Handler) r13
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r3 = r2.provideBgHandlerProvider
                java.lang.Object r3 = r3.get()
                android.os.Handler r3 = (android.os.Handler) r3
                javax.inject.Provider r3 = r2.broadcastDispatcherProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.broadcast.BroadcastDispatcher r14 = (com.android.systemui.broadcast.BroadcastDispatcher) r14
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                com.android.systemui.dump.DumpManager r15 = (com.android.systemui.dump.DumpManager) r15
                com.android.systemui.util.settings.GlobalSettingsImpl r16 = r2.globalSettingsImpl()
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                r17 = r1
                com.android.systemui.settings.UserTracker r17 = (com.android.systemui.settings.UserTracker) r17
                r11 = r0
                r11.<init>(r12, r13, r14, r15, r16, r17)
                return r0
            L_0x0c5e:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideKeyguardLargeClockLogFactory.provideKeyguardLargeClockLog(r0)
                return r0
            L_0x0c6d:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideKeyguardSmallClockLogFactory.provideKeyguardSmallClockLog(r0)
                return r0
            L_0x0c7c:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideKeyguardClockLogFactory.provideKeyguardClockLog(r0)
                return r0
            L_0x0c8b:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r0 = r1.provideApplicationContextProvider
                java.lang.Object r0 = r0.get()
                r3 = r0
                android.content.Context r3 = (android.content.Context) r3
                javax.inject.Provider r0 = r1.providesPluginManagerProvider
                java.lang.Object r0 = r0.get()
                r4 = r0
                com.android.systemui.plugins.PluginManager r4 = (com.android.systemui.plugins.PluginManager) r4
                javax.inject.Provider r0 = r1.applicationScopeProvider
                java.lang.Object r0 = r0.get()
                r5 = r0
                kotlinx.coroutines.CoroutineScope r5 = (kotlinx.coroutines.CoroutineScope) r5
                javax.inject.Provider r0 = r1.mainDispatcherProvider
                java.lang.Object r0 = r0.get()
                r6 = r0
                kotlinx.coroutines.CoroutineDispatcher r6 = (kotlinx.coroutines.CoroutineDispatcher) r6
                javax.inject.Provider r0 = r2.bgDispatcherProvider
                java.lang.Object r0 = r0.get()
                r7 = r0
                kotlinx.coroutines.CoroutineDispatcher r7 = (kotlinx.coroutines.CoroutineDispatcher) r7
                dagger.internal.DelegateFactory r0 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r0 = r0.get()
                r8 = r0
                com.android.systemui.flags.FeatureFlags r8 = (com.android.systemui.flags.FeatureFlags) r8
                android.content.res.Resources r9 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(r1)
                javax.inject.Provider r0 = r1.providerLayoutInflaterProvider
                java.lang.Object r0 = r0.get()
                r10 = r0
                android.view.LayoutInflater r10 = (android.view.LayoutInflater) r10
                com.android.systemui.plugins.clocks.ClockMessageBuffers r11 = r2.clockMessageBuffers()
                com.android.systemui.shared.clocks.ClockRegistry r0 = com.android.keyguard.dagger.ClockRegistryModule_GetClockRegistryFactory.getClockRegistry(r3, r4, r5, r6, r7, r8, r9, r10, r11)
                return r0
            L_0x0ce5:
                com.android.systemui.keyguard.data.repository.KeyguardClockRepositoryImpl r0 = new com.android.systemui.keyguard.data.repository.KeyguardClockRepositoryImpl
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r3 = r2.secureSettingsImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.util.settings.SecureSettings r3 = (com.android.systemui.util.settings.SecureSettings) r3
                javax.inject.Provider r4 = r2.getClockRegistryProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.shared.clocks.ClockRegistry r4 = (com.android.systemui.shared.clocks.ClockRegistry) r4
                com.android.keyguard.ClockEventController r5 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1467$$Nest$mclockEventController(r2)
                javax.inject.Provider r2 = r2.bgDispatcherProvider
                java.lang.Object r2 = r2.get()
                r6 = r2
                kotlinx.coroutines.CoroutineDispatcher r6 = (kotlinx.coroutines.CoroutineDispatcher) r6
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                kotlinx.coroutines.CoroutineScope r7 = (kotlinx.coroutines.CoroutineScope) r7
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r1.<init>(r2, r3, r4, r5, r6)
                return r0
            L_0x0d1d:
                com.android.systemui.keyguard.domain.interactor.KeyguardClockInteractor r0 = new com.android.systemui.keyguard.domain.interactor.KeyguardClockInteractor
                javax.inject.Provider r1 = r2.keyguardClockRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.data.repository.KeyguardClockRepositoryImpl r1 = (com.android.systemui.keyguard.data.repository.KeyguardClockRepositoryImpl) r1
                r0.<init>(r1)
                return r0
            L_0x0d2d:
                com.android.systemui.keyguard.ui.viewmodel.LockscreenContentViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LockscreenContentViewModel
                javax.inject.Provider r1 = r2.keyguardClockInteractorProvider
                java.lang.Object r1 = r1.get()
                r3 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardClockInteractor r3 = (com.android.systemui.keyguard.domain.interactor.KeyguardClockInteractor) r3
                dagger.internal.DelegateFactory r1 = r2.keyguardBlueprintInteractorProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardBlueprintInteractor r4 = (com.android.systemui.keyguard.domain.interactor.KeyguardBlueprintInteractor) r4
                dagger.internal.DelegateFactory r1 = r2.authControllerProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.biometrics.AuthController r5 = (com.android.systemui.biometrics.AuthController) r5
                javax.inject.Provider r1 = r2.keyguardLongPressViewModelProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.keyguard.ui.viewmodel.KeyguardLongPressViewModel r6 = (com.android.systemui.keyguard.ui.viewmodel.KeyguardLongPressViewModel) r6
                javax.inject.Provider r1 = r2.splitShadeStateControllerImplProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.statusbar.policy.SplitShadeStateControllerImpl r7 = (com.android.systemui.statusbar.policy.SplitShadeStateControllerImpl) r7
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7)
                return r0
            L_0x0d67:
                com.android.systemui.keyguard.ui.composable.LockscreenContent r0 = new com.android.systemui.keyguard.ui.composable.LockscreenContent
                dagger.internal.DelegateFactory r1 = r2.lockscreenContentViewModelProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.ui.viewmodel.LockscreenContentViewModel r1 = (com.android.systemui.keyguard.ui.viewmodel.LockscreenContentViewModel) r1
                java.util.Set r2 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1645$$Nest$msetOfComposableLockscreenSceneBlueprint(r2)
                r0.<init>(r1, r2)
                return r0
            L_0x0d79:
                com.android.systemui.keyguard.domain.interactor.KeyguardLongPressInteractor r0 = new com.android.systemui.keyguard.domain.interactor.KeyguardLongPressInteractor
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideApplicationContextProvider
                java.lang.Object r3 = r3.get()
                r4 = r3
                android.content.Context r4 = (android.content.Context) r4
                javax.inject.Provider r3 = r1.applicationScopeProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                kotlinx.coroutines.CoroutineScope r5 = (kotlinx.coroutines.CoroutineScope) r5
                dagger.internal.DelegateFactory r3 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r6 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r6
                javax.inject.Provider r3 = r2.keyguardRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl r7 = (com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl) r7
                javax.inject.Provider r1 = r1.provideUiEventLoggerProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.internal.logging.UiEventLogger r8 = (com.android.internal.logging.UiEventLogger) r8
                dagger.internal.DelegateFactory r1 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.flags.FeatureFlags r9 = (com.android.systemui.flags.FeatureFlags) r9
                javax.inject.Provider r1 = r2.broadcastDispatcherProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.systemui.broadcast.BroadcastDispatcher r10 = (com.android.systemui.broadcast.BroadcastDispatcher) r10
                javax.inject.Provider r1 = r2.accessibilityManagerWrapperProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                com.android.systemui.statusbar.policy.AccessibilityManagerWrapper r11 = (com.android.systemui.statusbar.policy.AccessibilityManagerWrapper) r11
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8, r9, r10, r11)
                return r0
            L_0x0dd6:
                com.android.systemui.keyguard.ui.viewmodel.KeyguardLongPressViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.KeyguardLongPressViewModel
                javax.inject.Provider r1 = r2.keyguardLongPressInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardLongPressInteractor r1 = (com.android.systemui.keyguard.domain.interactor.KeyguardLongPressInteractor) r1
                r0.<init>(r1)
                return r0
            L_0x0de6:
                com.android.systemui.keyguard.ui.viewmodel.LockscreenSceneViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LockscreenSceneViewModel
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                dagger.internal.DelegateFactory r3 = r2.deviceEntryInteractorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryInteractor r3 = (com.android.systemui.deviceentry.domain.interactor.DeviceEntryInteractor) r3
                dagger.internal.DelegateFactory r4 = r2.communalInteractorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.communal.domain.interactor.CommunalInteractor r4 = (com.android.systemui.communal.domain.interactor.CommunalInteractor) r4
                javax.inject.Provider r5 = r2.keyguardLongPressViewModelProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.keyguard.ui.viewmodel.KeyguardLongPressViewModel r5 = (com.android.systemui.keyguard.ui.viewmodel.KeyguardLongPressViewModel) r5
                javax.inject.Provider r2 = r2.notificationsPlaceholderViewModelProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationsPlaceholderViewModel r2 = (com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationsPlaceholderViewModel) r2
                r0.<init>(r1, r3, r4)
                return r0
            L_0x0e1a:
                com.android.systemui.keyguard.ui.composable.LockscreenScene r0 = new com.android.systemui.keyguard.ui.composable.LockscreenScene
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.lockscreenSceneViewModelProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.ui.viewmodel.LockscreenSceneViewModel r3 = (com.android.systemui.keyguard.ui.viewmodel.LockscreenSceneViewModel) r3
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r2 = r2.lockscreenContentProvider
                dagger.Lazy r2 = dagger.internal.DoubleCheck.lazy(r2)
                r0.<init>(r1, r3, r2)
                return r0
            L_0x0e3c:
                com.android.systemui.statusbar.notification.stack.data.repository.NotificationStackAppearanceRepository r0 = new com.android.systemui.statusbar.notification.stack.data.repository.NotificationStackAppearanceRepository
                r0.<init>()
                return r0
            L_0x0e42:
                com.android.systemui.statusbar.notification.stack.domain.interactor.NotificationStackAppearanceInteractor r0 = new com.android.systemui.statusbar.notification.stack.domain.interactor.NotificationStackAppearanceInteractor
                javax.inject.Provider r1 = r2.notificationStackAppearanceRepositoryProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.notification.stack.data.repository.NotificationStackAppearanceRepository r1 = (com.android.systemui.statusbar.notification.stack.data.repository.NotificationStackAppearanceRepository) r1
                r0.<init>(r1)
                return r0
            L_0x0e52:
                com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationsPlaceholderViewModel r0 = new com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationsPlaceholderViewModel
                javax.inject.Provider r1 = r2.notificationStackAppearanceInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.notification.stack.domain.interactor.NotificationStackAppearanceInteractor r1 = (com.android.systemui.statusbar.notification.stack.domain.interactor.NotificationStackAppearanceInteractor) r1
                dagger.internal.DelegateFactory r3 = r2.shadeInteractorImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.shade.domain.interactor.ShadeInteractor r3 = (com.android.systemui.shade.domain.interactor.ShadeInteractor) r3
                javax.inject.Provider r4 = r2.implProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.scene.shared.flag.SceneContainerFlags r4 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r4
                dagger.internal.DelegateFactory r4 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.flags.FeatureFlagsClassic r4 = (com.android.systemui.flags.FeatureFlagsClassic) r4
                dagger.internal.DelegateFactory r2 = r2.keyguardInteractorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r2 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x0e88:
                com.android.systemui.scene.ui.composable.GoneScene r0 = new com.android.systemui.scene.ui.composable.GoneScene
                javax.inject.Provider r1 = r2.notificationsPlaceholderViewModelProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationsPlaceholderViewModel r1 = (com.android.systemui.statusbar.notification.stack.ui.viewmodel.NotificationsPlaceholderViewModel) r1
                r0.<init>()
                return r0
            L_0x0e96:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideCommunalLogBufferFactory.provideCommunalLogBuffer(r0)
                return r0
            L_0x0ea5:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideDreamLogBufferFactory.provideDreamLogBuffer(r0)
                return r0
            L_0x0eb4:
                com.android.systemui.dreams.DreamOverlayStateController r0 = new com.android.systemui.dreams.DreamOverlayStateController
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                r3 = r1
                java.util.concurrent.Executor r3 = (java.util.concurrent.Executor) r3
                java.lang.Boolean r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1569$$Nest$mnamedBoolean(r2)
                boolean r4 = r1.booleanValue()
                dagger.internal.DelegateFactory r1 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.flags.FeatureFlags r5 = (com.android.systemui.flags.FeatureFlags) r5
                javax.inject.Provider r1 = r2.provideDreamLogBufferProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.log.LogBuffer r6 = (com.android.systemui.log.LogBuffer) r6
                com.android.systemui.util.reference.WeakReferenceFactoryImpl r7 = new com.android.systemui.util.reference.WeakReferenceFactoryImpl
                r7.<init>()
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r1.<init>(r2, r3, r4, r5, r6)
                return r0
            L_0x0eec:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideMediaCarouselControllerBufferFactory.provideMediaCarouselControllerBuffer(r0)
                return r0
            L_0x0efb:
                com.android.systemui.media.controls.ui.controller.MediaCarouselControllerLogger r0 = new com.android.systemui.media.controls.ui.controller.MediaCarouselControllerLogger
                javax.inject.Provider r1 = r2.provideMediaCarouselControllerBufferProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r0.<init>(r1)
                return r0
            L_0x0f0b:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$9 r1 = new com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$9
                r1.<init>(r0)
                return r1
            L_0x0f11:
                com.android.systemui.bluetooth.BroadcastDialogController r0 = new com.android.systemui.bluetooth.BroadcastDialogController
                javax.inject.Provider r1 = r2.provideDialogTransitionAnimatorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.animation.DialogTransitionAnimator r1 = (com.android.systemui.animation.DialogTransitionAnimator) r1
                javax.inject.Provider r2 = r2.factoryProvider11
                java.lang.Object r2 = r2.get()
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$9 r2 = (com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$9) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0f2b:
                com.android.systemui.ActivityIntentHelper r0 = new com.android.systemui.ActivityIntentHelper
                android.content.Context r1 = r1.context
                r0.<init>(r1)
                return r0
            L_0x0f35:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideNearbyMediaDevicesLogBufferFactory.provideNearbyMediaDevicesLogBuffer(r0)
                return r0
            L_0x0f44:
                com.android.systemui.media.nearby.NearbyMediaDevicesLogger r0 = new com.android.systemui.media.nearby.NearbyMediaDevicesLogger
                javax.inject.Provider r1 = r2.provideNearbyMediaDevicesLogBufferProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r0.<init>(r1)
                return r0
            L_0x0f54:
                com.android.systemui.media.nearby.NearbyMediaDevicesManager r0 = new com.android.systemui.media.nearby.NearbyMediaDevicesManager
                javax.inject.Provider r1 = r2.provideCommandQueueProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.CommandQueue r1 = (com.android.systemui.statusbar.CommandQueue) r1
                javax.inject.Provider r2 = r2.nearbyMediaDevicesLoggerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.media.nearby.NearbyMediaDevicesLogger r2 = (com.android.systemui.media.nearby.NearbyMediaDevicesLogger) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0f6e:
                javax.inject.Provider r0 = r2.provideBackgroundDelayableExecutorProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.util.concurrency.DelayableExecutor r0 = (com.android.systemui.util.concurrency.DelayableExecutor) r0
                com.android.systemui.util.concurrency.RepeatableExecutorImpl r0 = com.android.systemui.util.concurrency.SysUIConcurrencyModule_ProvideBackgroundRepeatableExecutorFactory.provideBackgroundRepeatableExecutor(r0)
                return r0
            L_0x0f7d:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideMediaViewLogBufferFactory.provideMediaViewLogBuffer(r0)
                return r0
            L_0x0f8c:
                com.android.systemui.media.controls.ui.controller.MediaViewLogger r0 = new com.android.systemui.media.controls.ui.controller.MediaViewLogger
                javax.inject.Provider r1 = r2.provideMediaViewLogBufferProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r0.<init>(r1)
                return r0
            L_0x0f9c:
                com.android.systemui.media.controls.ui.controller.MediaHostStatesManager r0 = new com.android.systemui.media.controls.ui.controller.MediaHostStatesManager
                r0.<init>()
                return r0
            L_0x0fa2:
                com.android.systemui.media.controls.ui.controller.MediaControlPanel r0 = new com.android.systemui.media.controls.ui.controller.MediaControlPanel
                android.content.Context r4 = r1.context
                javax.inject.Provider r3 = r2.provideBackgroundExecutorProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                java.util.concurrent.Executor r5 = (java.util.concurrent.Executor) r5
                javax.inject.Provider r1 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.util.concurrency.DelayableExecutor r6 = (com.android.systemui.util.concurrency.DelayableExecutor) r6
                dagger.internal.DelegateFactory r1 = r2.activityStarterImplProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.plugins.ActivityStarter r7 = (com.android.systemui.plugins.ActivityStarter) r7
                javax.inject.Provider r1 = r2.broadcastSenderProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.broadcast.BroadcastSender r8 = (com.android.systemui.broadcast.BroadcastSender) r8
                com.android.systemui.media.controls.ui.controller.MediaViewController r9 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1568$$Nest$mmediaViewController(r2)
                com.android.systemui.media.controls.ui.viewmodel.SeekBarViewModel r10 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1640$$Nest$mseekBarViewModel(r2)
                javax.inject.Provider r1 = r2.mediaDataManagerProvider
                dagger.Lazy r11 = dagger.internal.DoubleCheck.lazy(r1)
                com.android.systemui.media.dialog.MediaOutputDialogFactory r12 = r2.mediaOutputDialogFactory()
                dagger.internal.DelegateFactory r1 = r2.mediaCarouselControllerProvider
                java.lang.Object r1 = r1.get()
                r13 = r1
                com.android.systemui.media.controls.ui.controller.MediaCarouselController r13 = (com.android.systemui.media.controls.ui.controller.MediaCarouselController) r13
                dagger.internal.DelegateFactory r1 = r2.falsingManagerProxyProvider
                java.lang.Object r1 = r1.get()
                r14 = r1
                com.android.systemui.plugins.FalsingManager r14 = (com.android.systemui.plugins.FalsingManager) r14
                javax.inject.Provider r1 = r2.bindSystemClockProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                com.android.systemui.util.time.SystemClock r15 = (com.android.systemui.util.time.SystemClock) r15
                javax.inject.Provider r1 = r2.mediaUiEventLoggerProvider
                java.lang.Object r1 = r1.get()
                r16 = r1
                com.android.systemui.media.controls.util.MediaUiEventLogger r16 = (com.android.systemui.media.controls.util.MediaUiEventLogger) r16
                dagger.internal.DelegateFactory r1 = r2.keyguardStateControllerImplProvider
                java.lang.Object r1 = r1.get()
                r17 = r1
                com.android.systemui.statusbar.policy.KeyguardStateController r17 = (com.android.systemui.statusbar.policy.KeyguardStateController) r17
                javax.inject.Provider r1 = r2.activityIntentHelperProvider
                java.lang.Object r1 = r1.get()
                r18 = r1
                com.android.systemui.ActivityIntentHelper r18 = (com.android.systemui.ActivityIntentHelper) r18
                dagger.internal.DelegateFactory r1 = r2.notificationLockscreenUserManagerImplProvider
                java.lang.Object r1 = r1.get()
                r19 = r1
                com.android.systemui.statusbar.NotificationLockscreenUserManager r19 = (com.android.systemui.statusbar.NotificationLockscreenUserManager) r19
                javax.inject.Provider r1 = r2.broadcastDialogControllerProvider
                java.lang.Object r1 = r1.get()
                r20 = r1
                com.android.systemui.bluetooth.BroadcastDialogController r20 = (com.android.systemui.bluetooth.BroadcastDialogController) r20
                com.android.systemui.util.settings.GlobalSettingsImpl r21 = r2.globalSettingsImpl()
                javax.inject.Provider r1 = r2.mediaFlagsProvider
                java.lang.Object r1 = r1.get()
                r22 = r1
                com.android.systemui.media.controls.util.MediaFlags r22 = (com.android.systemui.media.controls.util.MediaFlags) r22
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21, r22)
                return r0
            L_0x1054:
                com.android.systemui.media.controls.ui.controller.MediaCarouselController r0 = new com.android.systemui.media.controls.ui.controller.MediaCarouselController
                android.content.Context r24 = r1.context
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r25 = r2.mediaControlPanelProvider
                javax.inject.Provider r3 = r2.visualStabilityProvider
                java.lang.Object r3 = r3.get()
                r26 = r3
                com.android.systemui.statusbar.notification.collection.provider.VisualStabilityProvider r26 = (com.android.systemui.statusbar.notification.collection.provider.VisualStabilityProvider) r26
                javax.inject.Provider r3 = r2.mediaHostStatesManagerProvider
                java.lang.Object r3 = r3.get()
                r27 = r3
                com.android.systemui.media.controls.ui.controller.MediaHostStatesManager r27 = (com.android.systemui.media.controls.ui.controller.MediaHostStatesManager) r27
                dagger.internal.DelegateFactory r3 = r2.activityStarterImplProvider
                java.lang.Object r3 = r3.get()
                r28 = r3
                com.android.systemui.plugins.ActivityStarter r28 = (com.android.systemui.plugins.ActivityStarter) r28
                javax.inject.Provider r3 = r2.bindSystemClockProvider
                java.lang.Object r3 = r3.get()
                r29 = r3
                com.android.systemui.util.time.SystemClock r29 = (com.android.systemui.util.time.SystemClock) r29
                javax.inject.Provider r3 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r3 = r3.get()
                r30 = r3
                com.android.systemui.util.concurrency.DelayableExecutor r30 = (com.android.systemui.util.concurrency.DelayableExecutor) r30
                javax.inject.Provider r3 = r2.provideBackgroundExecutorProvider
                java.lang.Object r3 = r3.get()
                r31 = r3
                java.util.concurrent.Executor r31 = (java.util.concurrent.Executor) r31
                javax.inject.Provider r3 = r2.mediaDataManagerProvider
                java.lang.Object r3 = r3.get()
                r32 = r3
                com.android.systemui.media.controls.domain.pipeline.MediaDataManager r32 = (com.android.systemui.media.controls.domain.pipeline.MediaDataManager) r32
                javax.inject.Provider r3 = r2.configurationControllerImplProvider
                java.lang.Object r3 = r3.get()
                r33 = r3
                com.android.systemui.statusbar.policy.ConfigurationController r33 = (com.android.systemui.statusbar.policy.ConfigurationController) r33
                dagger.internal.DelegateFactory r3 = r2.falsingManagerProxyProvider
                java.lang.Object r3 = r3.get()
                r34 = r3
                com.android.systemui.plugins.FalsingManager r34 = (com.android.systemui.plugins.FalsingManager) r34
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r35 = r1
                com.android.systemui.dump.DumpManager r35 = (com.android.systemui.dump.DumpManager) r35
                javax.inject.Provider r1 = r2.mediaUiEventLoggerProvider
                java.lang.Object r1 = r1.get()
                r36 = r1
                com.android.systemui.media.controls.util.MediaUiEventLogger r36 = (com.android.systemui.media.controls.util.MediaUiEventLogger) r36
                javax.inject.Provider r1 = r2.mediaCarouselControllerLoggerProvider
                java.lang.Object r1 = r1.get()
                r37 = r1
                com.android.systemui.media.controls.ui.controller.MediaCarouselControllerLogger r37 = (com.android.systemui.media.controls.ui.controller.MediaCarouselControllerLogger) r37
                javax.inject.Provider r1 = r2.mediaFlagsProvider
                java.lang.Object r1 = r1.get()
                r38 = r1
                com.android.systemui.media.controls.util.MediaFlags r38 = (com.android.systemui.media.controls.util.MediaFlags) r38
                dagger.internal.DelegateFactory r1 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r1 = r1.get()
                r39 = r1
                com.android.keyguard.KeyguardUpdateMonitor r39 = (com.android.keyguard.KeyguardUpdateMonitor) r39
                dagger.internal.DelegateFactory r1 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r1 = r1.get()
                r40 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r40 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r40
                com.android.systemui.util.settings.GlobalSettingsImpl r41 = r2.globalSettingsImpl()
                r23 = r0
                r23.<init>(r24, r25, r26, r27, r28, r29, r30, r31, r32, r33, r34, r35, r36, r37, r38, r39, r40, r41)
                return r0
            L_0x1116:
                com.android.systemui.media.controls.ui.controller.MediaHierarchyManager r0 = new com.android.systemui.media.controls.ui.controller.MediaHierarchyManager
                android.content.Context r4 = r1.context
                dagger.internal.DelegateFactory r3 = r2.statusBarStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                com.android.systemui.statusbar.SysuiStatusBarStateController r5 = (com.android.systemui.statusbar.SysuiStatusBarStateController) r5
                dagger.internal.DelegateFactory r3 = r2.keyguardStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.statusbar.policy.KeyguardStateController r6 = (com.android.systemui.statusbar.policy.KeyguardStateController) r6
                dagger.internal.DelegateFactory r3 = r2.keyguardBypassControllerProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.statusbar.phone.KeyguardBypassController r7 = (com.android.systemui.statusbar.phone.KeyguardBypassController) r7
                dagger.internal.DelegateFactory r3 = r2.mediaCarouselControllerProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                com.android.systemui.media.controls.ui.controller.MediaCarouselController r8 = (com.android.systemui.media.controls.ui.controller.MediaCarouselController) r8
                javax.inject.Provider r3 = r2.mediaDataManagerProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                com.android.systemui.media.controls.domain.pipeline.MediaDataManager r9 = (com.android.systemui.media.controls.domain.pipeline.MediaDataManager) r9
                dagger.internal.DelegateFactory r3 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r10 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r10
                javax.inject.Provider r3 = r2.dreamOverlayStateControllerProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.dreams.DreamOverlayStateController r11 = (com.android.systemui.dreams.DreamOverlayStateController) r11
                dagger.internal.DelegateFactory r3 = r2.communalInteractorProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.communal.domain.interactor.CommunalInteractor r12 = (com.android.systemui.communal.domain.interactor.CommunalInteractor) r12
                javax.inject.Provider r3 = r2.configurationControllerImplProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.systemui.statusbar.policy.ConfigurationController r13 = (com.android.systemui.statusbar.policy.ConfigurationController) r13
                javax.inject.Provider r3 = r2.wakefulnessLifecycleProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.keyguard.WakefulnessLifecycle r14 = (com.android.systemui.keyguard.WakefulnessLifecycle) r14
                dagger.internal.DelegateFactory r3 = r2.shadeInteractorImplProvider
                java.lang.Object r3 = r3.get()
                r15 = r3
                com.android.systemui.shade.domain.interactor.ShadeInteractor r15 = (com.android.systemui.shade.domain.interactor.ShadeInteractor) r15
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r3 = r2.secureSettingsImplProvider
                java.lang.Object r3 = r3.get()
                r16 = r3
                com.android.systemui.util.settings.SecureSettings r16 = (com.android.systemui.util.settings.SecureSettings) r16
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideMainHandlerProvider
                java.lang.Object r3 = r3.get()
                r17 = r3
                android.os.Handler r17 = (android.os.Handler) r17
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r18 = r1
                kotlinx.coroutines.CoroutineScope r18 = (kotlinx.coroutines.CoroutineScope) r18
                javax.inject.Provider r1 = r2.splitShadeStateControllerImplProvider
                java.lang.Object r1 = r1.get()
                r19 = r1
                com.android.systemui.statusbar.policy.SplitShadeStateControllerImpl r19 = (com.android.systemui.statusbar.policy.SplitShadeStateControllerImpl) r19
                javax.inject.Provider r1 = r2.mediaViewLoggerProvider
                java.lang.Object r1 = r1.get()
                r20 = r1
                com.android.systemui.media.controls.ui.controller.MediaViewLogger r20 = (com.android.systemui.media.controls.ui.controller.MediaViewLogger) r20
                javax.inject.Provider r1 = r2.mediaFlagsProvider
                java.lang.Object r1 = r1.get()
                r21 = r1
                com.android.systemui.media.controls.util.MediaFlags r21 = (com.android.systemui.media.controls.util.MediaFlags) r21
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18, r19, r20, r21)
                return r0
            L_0x11de:
                com.android.systemui.media.controls.ui.view.MediaHost$MediaHostStateHolder r0 = new com.android.systemui.media.controls.ui.view.MediaHost$MediaHostStateHolder
                r0.<init>()
                javax.inject.Provider r1 = r2.mediaHierarchyManagerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.media.controls.ui.controller.MediaHierarchyManager r1 = (com.android.systemui.media.controls.ui.controller.MediaHierarchyManager) r1
                javax.inject.Provider r3 = r2.mediaDataManagerProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.media.controls.domain.pipeline.MediaDataManager r3 = (com.android.systemui.media.controls.domain.pipeline.MediaDataManager) r3
                javax.inject.Provider r2 = r2.mediaHostStatesManagerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.media.controls.ui.controller.MediaHostStatesManager r2 = (com.android.systemui.media.controls.ui.controller.MediaHostStatesManager) r2
                com.android.systemui.media.controls.ui.view.MediaHost r0 = com.android.systemui.media.dagger.MediaModule_ProvidesCommunalMediaHostFactory.providesCommunalMediaHost(r0, r1, r3, r2)
                return r0
            L_0x1204:
                javax.inject.Provider r0 = r2.tableLogBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.table.TableLogBufferFactory r0 = (com.android.systemui.log.table.TableLogBufferFactory) r0
                com.android.systemui.log.table.TableLogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideCommunalTableLogBufferFactory.provideCommunalTableLogBuffer(r0)
                return r0
            L_0x1213:
                com.android.systemui.communal.data.repository.CommunalSettingsRepositoryImpl r0 = new com.android.systemui.communal.data.repository.CommunalSettingsRepositoryImpl
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                kotlinx.coroutines.CoroutineDispatcher r3 = (kotlinx.coroutines.CoroutineDispatcher) r3
                dagger.internal.DelegateFactory r4 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.flags.FeatureFlagsClassic r4 = (com.android.systemui.flags.FeatureFlagsClassic) r4
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r5 = r2.secureSettingsImplProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.util.settings.SecureSettings r5 = (com.android.systemui.util.settings.SecureSettings) r5
                javax.inject.Provider r2 = r2.broadcastDispatcherProvider
                java.lang.Object r2 = r2.get()
                r6 = r2
                com.android.systemui.broadcast.BroadcastDispatcher r6 = (com.android.systemui.broadcast.BroadcastDispatcher) r6
                javax.inject.Provider r1 = r1.provideDevicePolicyManagerProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                android.app.admin.DevicePolicyManager r7 = (android.app.admin.DevicePolicyManager) r7
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r1.<init>(r2, r3, r4, r5, r6)
                return r0
            L_0x1253:
                com.android.systemui.communal.domain.interactor.CommunalSettingsInteractor r0 = new com.android.systemui.communal.domain.interactor.CommunalSettingsInteractor
                javax.inject.Provider r1 = r2.bgApplicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.communalSettingsRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.communal.data.repository.CommunalSettingsRepositoryImpl r3 = (com.android.systemui.communal.data.repository.CommunalSettingsRepositoryImpl) r3
                javax.inject.Provider r4 = r2.selectedUserInteractorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.user.domain.interactor.SelectedUserInteractor r4 = (com.android.systemui.user.domain.interactor.SelectedUserInteractor) r4
                javax.inject.Provider r2 = r2.provideCommunalTableLogBufferProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.log.table.TableLogBuffer r2 = (com.android.systemui.log.table.TableLogBuffer) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            */
            throw new UnsupportedOperationException("Method not decompiled: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider.get4():java.lang.Object");
        }

        public Object get5() {
            IllegalStateException illegalStateException;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 500:
                    return new AuthRippleController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (CommandRegistry) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.commandRegistryProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsControllerProvider, (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m975$$Nest$mdisplayMetrics(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1539$$Nest$mkeyguardLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BiometricUnlockController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider.get(), (LightRevealScrim) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLightRevealScrimProvider.get(), (AuthRippleInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authRippleInteractorProvider.get(), (FacePropertyRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.facePropertyRepositoryImplProvider.get(), (AuthRippleView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesAuthRippleViewProvider.get());
                case 501:
                    return ShadeViewProviderModule_Companion_ProvidesLightRevealScrimFactory.providesLightRevealScrim((NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get(), new ScrimLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideScrimLogBufferProvider.get()));
                case 502:
                    return LogModule_ProvideScrimLogBufferFactory.provideScrimLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 503:
                    return new AuthRippleInteractor((DeviceEntrySourceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntrySourceInteractorProvider.get(), (DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get());
                case 504:
                    return new DeviceEntrySourceInteractor((KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get());
                case 505:
                    return (AuthRippleView) ((NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get()).requireViewById(2131362016);
                case 506:
                    AodToLockscreenTransitionViewModel aodToLockscreenTransitionViewModel = (AodToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider.get();
                    return new DeviceEntryIconViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1648$$Nest$msetOfDeviceEntryIconTransition(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BurnInInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.burnInInteractorProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider), (DeviceEntryInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider.get(), (DeviceEntrySourceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntrySourceInteractorProvider.get());
                case 507:
                    return new AlternateBouncerToAodTransitionViewModel((DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 508:
                    return new AlternateBouncerToDozingTransitionViewModel((DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 509:
                    return new AlternateBouncerToGoneTransitionViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1456$$Nest$mbouncerToGoneFlows(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 510:
                    return new KeyguardDismissActionInteractor((KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (KeyguardDismissInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 511:
                    return new KeyguardDismissInteractor((TrustRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.trustRepositoryImplProvider.get(), (KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 512:
                    return new AlternateBouncerToPrimaryBouncerTransitionViewModel((KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 513:
                    return new AodToGoneTransitionViewModel((KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 514:
                    return new DozingToGoneTransitionViewModel((KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 515:
                    return new DozingToPrimaryBouncerTransitionViewModel((KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 516:
                    return new GoneToAodTransitionViewModel((DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 517:
                    return new GoneToDozingTransitionViewModel((DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 518:
                    return new OccludedToAodTransitionViewModel((DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 519:
                    return new PrimaryBouncerToAodTransitionViewModel((DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 520:
                    return new PrimaryBouncerToDozingTransitionViewModel((DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 521:
                    return new DeviceEntryForegroundViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), (DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (DeviceEntryIconViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryIconViewModelProvider.get(), (UdfpsOverlayInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider.get());
                case 522:
                    return new UdfpsOverlayInteractor((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 523:
                    return new DeviceEntryBackgroundViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DeviceEntryIconViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryIconViewModelProvider.get(), (ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), (LockscreenToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToAodTransitionViewModelProvider.get(), (AodToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider.get(), (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get(), (PrimaryBouncerToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToAodTransitionViewModelProvider.get(), (OccludedToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToAodTransitionViewModelProvider.get(), (OccludedToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider.get(), (DreamingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider.get(), (AlternateBouncerToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToAodTransitionViewModelProvider.get(), (GoneToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToLockscreenTransitionViewModelProvider.get(), (GoneToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDozingTransitionViewModelProvider.get(), (PrimaryBouncerToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToDozingTransitionViewModelProvider.get(), (LockscreenToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDozingTransitionViewModelProvider.get(), (DozingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToLockscreenTransitionViewModelProvider.get(), (AlternateBouncerToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToDozingTransitionViewModelProvider.get());
                case 524:
                    return new KeyguardRootViewModel((DeviceEntryInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider.get(), (DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), new NotificationsKeyguardInteractor((NotificationsKeyguardViewStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsKeyguardViewStateRepositoryProvider.get()), (AlternateBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToGoneTransitionViewModelProvider.get(), (AodToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToGoneTransitionViewModelProvider.get(), (AodToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider.get(), (DozingToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToGoneTransitionViewModelProvider.get(), (DozingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToLockscreenTransitionViewModelProvider.get(), (GlanceableHubToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubToLockscreenTransitionViewModelProvider.get(), (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get(), (GoneToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDozingTransitionViewModelProvider.get(), (LockscreenToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToAodTransitionViewModelProvider.get(), (LockscreenToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDozingTransitionViewModelProvider.get(), (LockscreenToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDreamingTransitionViewModelProvider.get(), (LockscreenToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGlanceableHubTransitionViewModelProvider.get(), (LockscreenToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGoneTransitionViewModelProvider.get(), (LockscreenToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToOccludedTransitionViewModelProvider.get(), (LockscreenToPrimaryBouncerTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToPrimaryBouncerTransitionViewModelProvider.get(), (OccludedToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToAodTransitionViewModelProvider.get(), (OccludedToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider.get(), (PrimaryBouncerToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToAodTransitionViewModelProvider.get(), (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get(), (PrimaryBouncerToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToLockscreenTransitionViewModelProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get(), (AodBurnInViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodBurnInViewModelProvider.get(), (AodAlphaViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodAlphaViewModelProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 525:
                    return new GlanceableHubToLockscreenTransitionViewModel((ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 526:
                    return new LockscreenToGlanceableHubTransitionViewModel((ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 527:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissActionInteractorProvider);
                    FeatureFlagsClassic featureFlagsClassic = (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    return new PrimaryBouncerToGoneTransitionViewModel((SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1456$$Nest$mbouncerToGoneFlows(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 528:
                    return new AodBurnInViewModel((BurnInInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.burnInInteractorProvider.get(), (ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get(), (AodToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider.get(), (OccludedToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider.get(), (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get());
                case 529:
                    return new KeyguardClockViewModel((KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (KeyguardClockInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), new NotificationsKeyguardInteractor((NotificationsKeyguardViewStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsKeyguardViewStateRepositoryProvider.get()));
                case 530:
                    return new AodAlphaViewModel((KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get(), (GoneToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDozingTransitionViewModelProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get());
                case 531:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$11(this);
                case 532:
                    FeatureFlagsClassic featureFlagsClassic2 = (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    AodAlphaViewModel aodAlphaViewModel = (AodAlphaViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodAlphaViewModelProvider.get();
                    return new KeyguardViewConfigurator((KeyguardRootView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesKeyguardRootViewProvider.get(), (KeyguardRootViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRootViewModelProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationAreaViewModel(), (NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get(), (KeyguardIndicationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get(), (OccludingAppDeviceEntryMessageViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludingAppDeviceEntryMessageViewModelProvider.get(), (ChipbarCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chipbarCoordinatorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1533$$Nest$mkeyguardBlueprintCommandListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1534$$Nest$mkeyguardBlueprintViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationState(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (KeyguardIndicationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardIndicationControllerGoogleProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockIconViewControllerProvider), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), (DeviceEntryHapticsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryHapticsInteractorProvider.get(), (VibratorHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get(), (KeyguardSmartspaceViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSmartspaceViewModelProvider.get(), (LockscreenContentViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenContentViewModelProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLockscreenBlueprintsProvider), (KeyguardBlueprintViewBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBlueprintViewBinderProvider.get());
                case 533:
                    return ShadeViewProviderModule_Companion_ProvidesKeyguardRootViewFactory.providesKeyguardRootView((NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get());
                case 534:
                    return new OccludingAppDeviceEntryMessageViewModel((OccludingAppDeviceEntryInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludingAppDeviceEntryInteractorProvider.get());
                case 535:
                    return new OccludingAppDeviceEntryInteractor((BiometricMessageInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricMessageInteractorProvider.get(), (DeviceEntryFingerprintAuthRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthRepositoryImplProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get());
                case 536:
                    return new BiometricMessageInteractor(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (DeviceEntryFingerprintAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider.get(), (FingerprintPropertyInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyInteractorProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get(), (DeviceEntryBiometricSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricSettingsInteractorProvider.get(), (FaceHelpMessageDeferralInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceHelpMessageDeferralInteractorProvider.get());
                case 537:
                    return new FingerprintPropertyInteractor((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (FingerprintPropertyRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider.get(), (ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), (DisplayStateInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesDisplayStateInteractorProvider.get());
                case 538:
                    return new DisplayStateInteractorImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DisplayStateRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayStateRepositoryImplProvider.get(), (DisplayRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayRepositoryImplProvider.get());
                case 539:
                    return new DeviceEntryBiometricSettingsInteractor((BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get());
                case 540:
                    return new FaceHelpMessageDeferralInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get(), (DeviceEntryBiometricSettingsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricSettingsInteractorProvider.get(), (FaceHelpMessageDeferralFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.faceHelpMessageDeferralFactoryProvider.get());
                case 541:
                    return new ChipbarCoordinator(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ChipbarLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chipbarLoggerProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (ChipbarAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.chipbarAnimatorProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider.get(), (SwipeChipbarAwayGestureHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeChipbarAwayGestureHandlerProvider.get(), (ViewUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.viewUtilProvider.get(), (VibratorHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1699$$Nest$mwakeLockBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (TemporaryViewUiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.temporaryViewUiEventLoggerProvider.get());
                case 542:
                    return new ChipbarLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideChipbarLogBufferProvider.get());
                case 543:
                    return TemporaryDisplayModule_Companion_ProvideChipbarLogBufferFactory.provideChipbarLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 544:
                    return new ChipbarAnimator();
                case 545:
                    return new SwipeChipbarAwayGestureHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get(), (SwipeUpGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeUpGestureLoggerProvider.get());
                case 546:
                    return new ViewUtil();
                case 547:
                    return new TemporaryViewUiEventLogger((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 548:
                    return new DeviceEntryHapticsInteractor((DeviceEntrySourceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntrySourceInteractorProvider.get(), (DeviceEntryFingerprintAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFingerprintAuthInteractorProvider.get(), (DeviceEntryBiometricAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryBiometricAuthInteractorProvider.get(), (FingerprintPropertyRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fingerprintPropertyRepositoryImplProvider.get(), (BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (KeyEventInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyEventInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (BiometricUnlockLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockLoggerProvider.get());
                case 549:
                    return new DeviceEntryBiometricAuthInteractor((BiometricSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricSettingsRepositoryImplProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get());
                case 550:
                    return new KeyEventInteractor((KeyEventRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyEventRepositoryImplProvider.get());
                case 551:
                    return new KeyEventRepositoryImpl((CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get());
                case 552:
                    return new BiometricUnlockLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBiometricLogBufferProvider.get());
                case 553:
                    return new KeyguardSmartspaceViewModel((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (LockscreenSmartspaceController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenSmartspaceControllerProvider.get(), (KeyguardClockViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardClockViewModelProvider.get(), (KeyguardSmartspaceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSmartspaceInteractorProvider.get());
                case 554:
                    return new LockscreenSmartspaceController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (SmartspaceManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSmartspaceManagerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (ExecutionImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideExecutionProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), Optional.of((BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDateSmartspaceDataPluginProvider.get()), Optional.of((BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideWeatherSmartspaceDataPluginProvider.get()), Optional.of((BcSmartspaceDataPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBcSmartspaceDataPluginProvider.get()), Optional.of((BcSmartspaceConfigPlugin) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBcSmartspaceConfigPluginProvider.get()));
                case 555:
                    return SystemUIGoogleModule_ProvideDateSmartspaceDataPluginFactory.provideDateSmartspaceDataPlugin();
                case 556:
                    return SystemUIGoogleModule_ProvideWeatherSmartspaceDataPluginFactory.provideWeatherSmartspaceDataPlugin();
                case 557:
                    return SystemUIGoogleModule_ProvideBcSmartspaceDataPluginFactory.provideBcSmartspaceDataPlugin();
                case 558:
                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    return SystemUIGoogleModule_ProvideBcSmartspaceConfigPluginFactory.provideBcSmartspaceConfigPlugin();
                case 559:
                    return new KeyguardSmartspaceInteractor((KeyguardSmartspaceRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardSmartspaceRepositoryProvider.get());
                case 560:
                    return new KeyguardSmartspaceRepository();
                case 561:
                    return LockscreenSceneModule_Companion_ProvidesLockscreenBlueprintsFactory.providesLockscreenBlueprints(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1645$$Nest$msetOfComposableLockscreenSceneBlueprint(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 562:
                    Context context = (Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get();
                    NotificationsPlaceholderViewModel notificationsPlaceholderViewModel = (NotificationsPlaceholderViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsPlaceholderViewModelProvider.get();
                    NotificationStackScrollLayoutController notificationStackScrollLayoutController = (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get();
                    SceneContainerFlags sceneContainerFlags = (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get();
                    SharedNotificationContainer sharedNotificationContainer = (SharedNotificationContainer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesSharedNotificationContainerProvider.get();
                    SharedNotificationContainerViewModel sharedNotificationContainerViewModel = (SharedNotificationContainerViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerViewModelProvider.get();
                    NotificationStackScrollLayout notificationStackScrollLayout = (NotificationStackScrollLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider.get();
                    NotificationStackAppearanceViewModel notificationStackAppearanceViewModel = (NotificationStackAppearanceViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackAppearanceViewModelProvider.get();
                    AmbientState ambientState = (AmbientState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider.get();
                    NotificationStackSizeCalculator notificationStackSizeCalculator = (NotificationStackSizeCalculator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackSizeCalculatorProvider.get();
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get();
                    throw new IllegalStateException("this requires migrateClocksToBlueprint()");
                case 563:
                    SectionHeaderNodeControllerImpl sectionHeaderNodeControllerImpl = (SectionHeaderNodeControllerImpl) ((DaggerSysUIGoogleGlobalRootComponent$SectionHeaderControllerSubcomponentImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesSilentHeaderSubcomponentProvider.get()).sectionHeaderNodeControllerImplProvider.get();
                    Preconditions.checkNotNullFromProvides(sectionHeaderNodeControllerImpl);
                    ActiveNotificationsInteractor activeNotificationsInteractor = (ActiveNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider.get();
                    SceneContainerFlags sceneContainerFlags2 = (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get();
                    return NotificationStackScrollLayoutController_Factory.newInstance((NotificationStackScrollLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationStackScrollLayoutProvider.get(), ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAllowNotificationLongPressProvider.get()).booleanValue(), (NotificationGutsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationGutsManagerProvider.get(), (NotificationsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationsControllerProvider.get(), (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (NotificationRoundnessManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRoundnessManagerProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (DynamicPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dynamicPrivacyControllerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (KeyguardMediaController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardMediaControllerProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (KeyguardTransitionRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionRepositoryImplProvider.get(), (ZenModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeControllerImplProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (ColorUpdateLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.colorUpdateLoggerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1606$$Nest$mnotificationSwipeHelperBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get(), (GroupExpansionManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupExpansionManagerImplProvider.get(), sectionHeaderNodeControllerImpl, (NotifPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get(), (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get(), (VisibilityLocationProviderDelegator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visibilityLocationProviderDelegatorProvider.get(), (SeenNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.seenNotificationsInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1603$$Nest$mnotificationListViewBinder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesWindowRootViewProvider, (NotificationStackAppearanceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackAppearanceInteractorProvider.get(), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1673$$Nest$mstackStateLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1605$$Nest$mnotificationStackScrollLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (NotificationStackSizeCalculator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackSizeCalculatorProvider.get(), (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (NotificationTargetsHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationTargetsHelperProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (NotificationDismissibilityProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationDismissibilityProviderImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), (SensitiveNotificationProtectionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sensitiveNotificationProtectionControllerImplProvider.get());
                case 564:
                    return ShadeViewProviderModule_Companion_ProvidesNotificationStackScrollLayoutFactory.providesNotificationStackScrollLayout((NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get());
                case 565:
                    return Boolean.TRUE;
                case 566:
                    return new NotificationGutsManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (HighPriorityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.highPriorityProvider.get(), (INotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideINotificationManagerProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (PeopleSpaceWidgetManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleSpaceWidgetManagerProvider.get(), (LauncherApps) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLauncherAppsProvider.get(), (ShortcutManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideShortcutManagerProvider.get(), (ChannelEditorDialogController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.channelEditorDialogControllerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (AssistantFeedbackController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantFeedbackControllerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBubblesManagerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (OnUserInteractionCallbackImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.onUserInteractionCallbackImplProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (WindowRootViewVisibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 567:
                    return new HighPriorityProvider((PeopleNotificationIdentifierImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.peopleNotificationIdentifierImplProvider.get(), (GroupMembershipManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider.get());
                case 568:
                    return new PeopleNotificationIdentifierImpl((NotificationPersonExtractorPluginBoundary) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPersonExtractorPluginBoundaryProvider.get(), (GroupMembershipManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider.get());
                case 569:
                    return new NotificationPersonExtractorPluginBoundary((ExtensionControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extensionControllerImplProvider.get());
                case 570:
                    TunerService tunerService = (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get();
                    ConfigurationController configurationController = (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get();
                    return new ExtensionControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (LeakDetector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesLeakDetectorProvider.get(), (PluginManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider.get());
                case 571:
                    return new ChannelEditorDialogController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (INotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideINotificationManagerProvider.get(), new ChannelEditorDialog.Builder());
                case 572:
                    Context unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new AssistantFeedbackController((Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get());
                case 573:
                    return SystemUIModule_ProvideBubblesManagerFactory.provideBubblesManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.setBubbles, (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (INotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideINotificationManagerProvider.get(), (IDreamManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider.get(), (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (VisualInterruptionDecisionProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVisualInterruptionDecisionProvider.get(), (ZenModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeControllerImplProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (SensitiveNotificationProtectionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sensitiveNotificationProtectionControllerImplProvider.get(), (CommonNotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (NotifPipeline) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineProvider.get(), (SysUiState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiBackgroundExecutorProvider.get());
                case 574:
                    Provider r0 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationInterruptStateProviderImplProvider;
                    SwitchingProvider unused2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualInterruptionDecisionProviderImplProvider;
                    return NotificationsModule_ProvideVisualInterruptionDecisionProviderFactory.provideVisualInterruptionDecisionProvider(r0);
                case 575:
                    AmbientDisplayConfiguration r4 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m972$$Nest$mambientDisplayConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    NotificationInterruptLogger r9 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1602$$Nest$mnotificationInterruptLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    NotifPipelineFlags unused3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifPipelineFlags();
                    return new NotificationInterruptStateProviderImpl((PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), r4, (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), r9, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (KeyguardNotificationVisibilityProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardNotificationVisibilityProviderImplProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (EventLogImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindEventLogProvider.get());
                case 576:
                    return LogModule_ProvideNotificationInterruptLogBufferFactory.provideNotificationInterruptLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 577:
                    GlobalSettingsImpl r11 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    FeatureFlagsClassic featureFlagsClassic3 = (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    return new KeyguardNotificationVisibilityProviderImpl((Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (HighPriorityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.highPriorityProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), r11);
                case 578:
                    return new EventLogImpl();
                case 579:
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m972$$Nest$mambientDisplayConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl);
                    BatteryController batteryController = (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get();
                    DeviceProvisionedController deviceProvisionedController = (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get();
                    EventLogImpl eventLogImpl = (EventLogImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindEventLogProvider.get();
                    GlobalSettingsImpl unused4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    HeadsUpManager headsUpManager = (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get();
                    KeyguardNotificationVisibilityProviderImpl keyguardNotificationVisibilityProviderImpl = (KeyguardNotificationVisibilityProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardNotificationVisibilityProviderImplProvider.get();
                    KeyguardStateController keyguardStateController = (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get();
                    LogBuffer logBuffer = (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationInterruptLogBufferProvider.get();
                    Handler handler = (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get();
                    PowerManager powerManager = (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get();
                    StatusBarStateController statusBarStateController = (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get();
                    SystemClock systemClock = (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get();
                    UiEventLogger uiEventLogger = (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get();
                    UserTracker userTracker = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                    AvalancheProvider avalancheProvider = (AvalancheProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.avalancheProvider.get();
                    if (Log.isLoggable("RefactorFlagAssert", 7)) {
                        if (Build.isDebuggable()) {
                            illegalStateException = new IllegalStateException("New code path expects com.android.systemui.visual_interruptions_refactor to be enabled.");
                        } else {
                            illegalStateException = null;
                        }
                        Log.wtf("RefactorFlagAssert", "New code path expects com.android.systemui.visual_interruptions_refactor to be enabled.", illegalStateException);
                    } else if (Log.isLoggable("RefactorFlag", 5)) {
                        Log.w("RefactorFlag", "New code path expects com.android.systemui.visual_interruptions_refactor to be enabled.");
                    }
                    throw new IllegalStateException("Check failed.".toString());
                case 580:
                    LogBuffer logBuffer2 = (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationInterruptLogBufferProvider.get();
                    return new AvalancheProvider((BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 581:
                    Context unused5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    GlobalSettingsImpl unused6 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    Preconditions.checkNotNullFromProvides((MediaProjectionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context.getSystemService(MediaProjectionManager.class));
                    IActivityManager iActivityManager = (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get();
                    Handler handler2 = (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get();
                    Executor executor = (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get();
                    return new SensitiveNotificationProtectionControllerImpl(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1641$$Nest$msensitiveNotificationProtectionControllerLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 582:
                    return LogModule_ProvideSensitiveNotificationProtectionLogBufferFactory.provideSensitiveNotificationProtectionLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 583:
                    return new OnUserInteractionCallbackImpl((NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (NotifCollection) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notifCollectionProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (VisualStabilityCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualStabilityCoordinatorProvider.get());
                case 584:
                    return new VisualStabilityCoordinator((DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (ShadeAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeAnimationInteractorProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (VisibilityLocationProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visibilityLocationProviderDelegatorProvider.get(), (VisualStabilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.visualStabilityProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get());
                case 585:
                    SceneContainerFlags sceneContainerFlags3 = (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get();
                    Provider unused7 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeAnimationInteractorSceneContainerImplProvider;
                    return ShadeModule_Companion_ProvideShadeAnimationInteractorFactory.provideShadeAnimationInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeAnimationInteractorLegacyImplProvider);
                case 586:
                    return new ShadeAnimationInteractorSceneContainerImpl((ShadeAnimationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeAnimationRepositoryProvider.get(), (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get());
                case 587:
                    return new ShadeAnimationRepository();
                case 588:
                    return new ShadeAnimationInteractorLegacyImpl((ShadeAnimationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeAnimationRepositoryProvider.get(), (ShadeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider.get());
                case 589:
                    return new VisibilityLocationProviderDelegator();
                case 590:
                    return NotificationRoundnessManager_Factory.newInstance((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 591:
                    return DynamicPrivacyController_Factory.newInstance((NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get());
                case 592:
                    return new KeyguardMediaController((MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesKeyguardMediaHostProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1540$$Nest$mkeyguardMediaControllerLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 593:
                    return MediaModule_ProvidesKeyguardMediaHostFactory.providesKeyguardMediaHost(new MediaHost.MediaHostStateHolder(), (MediaHierarchyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider.get(), (MediaDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataManagerProvider.get(), (MediaHostStatesManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHostStatesManagerProvider.get());
                case 594:
                    return LogModule_ProvideKeyguardMediaControllerLogBufferFactory.provideKeyguardMediaControllerLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 595:
                    FeatureFlagsClassic featureFlagsClassic4 = (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    return new ColorUpdateLogger((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 596:
                    return new ScrimController((LightBarController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightBarControllerProvider.get(), (DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get(), (AlarmManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$11) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider13.get(), new Handler(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (ScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenOffAnimationControllerProvider.get(), (KeyguardUnlockAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get(), (AlternateBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToGoneTransitionViewModelProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (WallpaperRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wallpaperRepositoryImplProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (LargeScreenShadeInterpolator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenShadeInterpolatorImplProvider.get());
                case 597:
                    return new WallpaperRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m978$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 598:
                    return new LargeScreenShadeInterpolatorImpl((ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, new SplitShadeInterpolator(), new LargeScreenPortraitShadeInterpolator(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get());
                case 599:
                    return new GroupExpansionManagerImpl((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (GroupMembershipManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupMembershipManagerImplProvider.get());
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get6() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 600:
                    return NotificationSectionHeadersModule_ProvidesSilentHeaderSubcomponentFactory.providesSilentHeaderSubcomponent(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider);
                case 601:
                    return new DaggerSysUIGoogleGlobalRootComponent$SectionHeaderControllerSubcomponentBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                case 602:
                    LSShadeTransitionLogger r4 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1544$$Nest$mlSShadeTransitionLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    LockscreenShadeScrimTransitionController r10 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1550$$Nest$mlockscreenShadeScrimTransitionController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    Context r13 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Lazy lazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeLockscreenInteractorProvider);
                    return new LockscreenShadeTransitionController((SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), r4, (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider.get(), (AmbientState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider.get(), (MediaHierarchyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider.get(), r10, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$12) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider14.get(), (NotificationShadeDepthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider.get(), r13, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$13) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider15.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$14) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider16.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider17.get(), (ShadeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), lazy, (NaturalScrollingSettingObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.naturalScrollingSettingObserverProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSSceneAdapterImplProvider));
                case 603:
                    return LogModule_ProvideLSShadeTransitionControllerBufferFactory.provideLSShadeTransitionControllerBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 604:
                    return new LockscreenGestureLogger((MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get());
                case 605:
                    return new AmbientState(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (NotificationSectionsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationSectionsManagerProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (LargeScreenShadeInterpolator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenShadeInterpolatorImplProvider.get());
                case 606:
                    SectionHeaderNodeControllerImpl r8 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1529$$Nest$mincomingHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SectionHeaderNodeControllerImpl r9 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1616$$Nest$mpeopleHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SectionHeaderNodeControllerImpl r102 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1438$$Nest$malertingHeaderSectionHeaderController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SectionHeaderNodeControllerImpl sectionHeaderNodeControllerImpl = (SectionHeaderNodeControllerImpl) ((DaggerSysUIGoogleGlobalRootComponent$SectionHeaderControllerSubcomponentImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesSilentHeaderSubcomponentProvider.get()).sectionHeaderNodeControllerImplProvider.get();
                    Preconditions.checkNotNullFromProvides(sectionHeaderNodeControllerImpl);
                    return new NotificationSectionsManager((ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (KeyguardMediaController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardMediaControllerProvider.get(), (NotificationSectionsFeatureManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationSectionsFeatureManagerProvider.get(), (MediaContainerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaContainerControllerProvider.get(), (NotificationRoundnessManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRoundnessManagerProvider.get(), r8, r9, r102, sectionHeaderNodeControllerImpl);
                case 607:
                    return NotificationSectionHeadersModule_ProvidesIncomingHeaderSubcomponentFactory.providesIncomingHeaderSubcomponent(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider);
                case 608:
                    return NotificationSectionHeadersModule_ProvidesPeopleHeaderSubcomponentFactory.providesPeopleHeaderSubcomponent(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider);
                case 609:
                    return NotificationSectionHeadersModule_ProvidesAlertingHeaderSubcomponentFactory.providesAlertingHeaderSubcomponent(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sectionHeaderControllerSubcomponentBuilderProvider);
                case 610:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$12(this);
                case 611:
                    return new NotificationShadeDepthController((StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (BlurUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.blurUtilsProvider.get(), (BiometricUnlockController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (Choreographer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesChoreographerProvider.get(), (WallpaperController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wallpaperControllerProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (DozeParameters) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeParametersProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get());
                case 612:
                    return new BlurUtils(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (CrossWindowBlurListeners) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideCrossWindowBlurListenersProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 613:
                    return new WallpaperController(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m978$$Nest$mwallpaperManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (WallpaperRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wallpaperRepositoryImplProvider.get());
                case 614:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$13(this);
                case 615:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$14(this);
                case 616:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$15(this);
                case 617:
                    SceneContainerFlags sceneContainerFlags = (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get();
                    SwitchingProvider unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeLockscreenInteractorImplProvider;
                    return ShadeModule_Companion_ProvideShadeLockscreenInteractorFactory.provideShadeLockscreenInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider);
                case 618:
                    return new ShadeLockscreenInteractorImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get(), (LockIconViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockIconViewControllerProvider.get());
                case 619:
                    return new NaturalScrollingSettingObserver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get());
                case 620:
                    DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory = new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    return new QSSceneAdapterImpl(daggerSysUIGoogleGlobalRootComponent$DozeComponentFactory, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSImplProvider, (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get());
                case 621:
                    return new QSImpl((RemoteInputQuickSettingsDisabler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputQuickSettingsDisablerProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQSMediaHostProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQuickQSMediaHostProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1622$$Nest$mqSDisableFlagsLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (FooterActionsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.footerActionsControllerProvider.get(), (FooterActionsViewModel.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider18.get(), (FooterActionsViewBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.footerActionsViewBinderProvider.get(), (LargeScreenShadeInterpolator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenShadeInterpolatorImplProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get());
                case 622:
                    return MediaModule_ProvidesQSMediaHostFactory.providesQSMediaHost(new MediaHost.MediaHostStateHolder(), (MediaHierarchyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider.get(), (MediaDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataManagerProvider.get(), (MediaHostStatesManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHostStatesManagerProvider.get());
                case 623:
                    return MediaModule_ProvidesQuickQSMediaHostFactory.providesQuickQSMediaHost(new MediaHost.MediaHostStateHolder(), (MediaHierarchyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider.get(), (MediaDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataManagerProvider.get(), (MediaHostStatesManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHostStatesManagerProvider.get());
                case 624:
                    return LogModule_ProvideQSFragmentDisableLogBufferFactory.provideQSFragmentDisableLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 625:
                    return LogModule_ProvideQuickSettingsLogBufferFactory.provideQuickSettingsLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get(), (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get());
                case 626:
                    return new QSPipelineFlagsRepository();
                case 627:
                    return LogModule_ProvideQSConfigLogBufferFactory.provideQSConfigLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 628:
                    return new FooterActionsController((FgsManagerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fgsManagerControllerImplProvider.get());
                case 629:
                    Context unused2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    return new FgsManagerControllerImpl((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get(), (JobScheduler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideJobSchedulerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DeviceConfigProxy) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceConfigProxyProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get());
                case 630:
                    return new FooterActionsViewModel.Factory((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (FooterActionsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.footerActionsInteractorImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsDialogLiteProvider, ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.isPMLiteEnabledProvider.get()).booleanValue());
                case 631:
                    return new FooterActionsInteractorImpl((ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (QSSecurityFooterUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSSecurityFooterUtilsProvider.get(), (FgsManagerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fgsManagerControllerImplProvider.get(), (UserSwitcherInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherInteractorProvider.get(), (SecurityRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.securityRepositoryImplProvider.get(), (ForegroundServicesRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.foregroundServicesRepositoryImplProvider.get(), (UserSwitcherRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherRepositoryImplProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 632:
                    return QSSecurityFooterUtils_Factory.newInstance((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (SecurityController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.securityControllerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get());
                case 633:
                    return new SecurityControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 634:
                    return new SecurityRepositoryImpl((SecurityController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.securityControllerImplProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 635:
                    return new ForegroundServicesRepositoryImpl((FgsManagerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fgsManagerControllerImplProvider.get());
                case 636:
                    return new UserSwitcherRepositoryImpl((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (UserSwitcherController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userSwitcherControllerProvider.get(), (UserInfoControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userInfoControllerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get());
                case 637:
                    return new UserInfoControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 638:
                    return new GlobalActionsDialogLite(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (GlobalActions.GlobalActionsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsComponentProvider.get(), (AudioManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider.get(), (IDreamManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider.get(), (DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (TelephonyListenerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.telephonyListenerManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (VibratorHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), (TrustManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTrustManagerProvider.get(), (IActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIActivityManagerProvider.get(), (TelecomManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideTelecomManagerProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (SysuiColorExtractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysuiColorExtractorProvider.get(), (IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get(), (LightBarController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightBarControllerProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (StatusBarWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowControllerProvider.get(), (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (RingerModeTrackerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ringerModeTrackerImplProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), (GlobalActionsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsInteractorProvider.get());
                case 639:
                    return new GlobalActionsComponent((CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (ExtensionControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extensionControllerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsImplProvider, (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get());
                case 640:
                    BlurUtils blurUtils = (BlurUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.blurUtilsProvider.get();
                    return new GlobalActionsImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (GlobalActionsDialogLite) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsDialogLiteProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1665$$Nest$mshutdownUi(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 641:
                    return new SysuiColorExtractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider));
                case 642:
                    return new GlobalActionsInteractor((GlobalActionsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalActionsRepositoryProvider.get());
                case 643:
                    return new GlobalActionsRepository();
                case 644:
                    return Boolean.valueOf(QSFlagsModule.isPMLiteEnabled((FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl()));
                case 645:
                    return new FooterActionsViewBinder();
                case 646:
                    return new SeenNotificationsInteractor((ActiveNotificationListRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationListRepositoryProvider.get());
                case 647:
                    return new NotificationStatsLoggerImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (NotificationListenerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationListenerProvider.get(), (NotificationPanelLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationPanelLoggerProvider.get(), (IStatusBarService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIStatusBarServiceProvider.get());
                case 648:
                    return new HeadsUpNotificationIconViewStateRepository();
                case 649:
                    return new StatusBarIconViewBindingFailureTracker();
                case 650:
                    return StatusBarNotificationActivityStarter_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m974$$Nest$mdisplayIdInteger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), new Handler(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (NotificationVisibilityProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationVisibilityProviderImplProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (NotificationClickNotifier) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationClickNotifierProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (KeyguardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider.get(), (IDreamManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBubblesManagerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider), (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (LockPatternUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideLockPatternUtilsProvider.get(), (StatusBarRemoteInputCallback) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarRemoteInputCallbackProvider.get(), (ActivityIntentHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityIntentHelperProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1684$$Nest$mstatusBarNotificationActivityStarterLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (OnUserInteractionCallbackImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.onUserInteractionCallbackImplProvider.get(), (StatusBarNotificationPresenter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarNotificationPresenterProvider.get(), (ShadeViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (ActivityTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideActivityTransitionAnimatorProvider.get(), (ShadeAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeAnimationInteractorProvider.get(), (NotificationLaunchAnimatorControllerProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationTransitionAnimatorControllerProvider.get(), (LaunchFullScreenIntentProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.launchFullScreenIntentProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 651:
                    Context r42 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    OpaEnabledDispatcher r11 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1608$$Nest$mopaEnabledDispatcher(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    Lazy lazy2 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSysUiStateProvider);
                    DisplayTracker displayTracker = (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get();
                    DefaultUiController defaultUiController = (DefaultUiController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.defaultUiControllerProvider.get();
                    return new AssistManagerGoogle((DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), r42, (AssistUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAssistUtilsProvider.get(), (NgaUiController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ngaUiControllerProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (OpaEnabledReceiver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.opaEnabledReceiverProvider.get(), (PhoneStateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.phoneStateMonitorProvider.get(), (OverviewProxyService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider.get(), r11, (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get(), (AssistantPresenceHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantPresenceHandlerProvider.get(), (NgaMessageHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ngaMessageHandlerProvider.get(), lazy2, (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (GoogleDefaultUiController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleDefaultUiControllerProvider.get(), (IWindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIWindowManagerProvider.get(), (AssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get(), (ActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider.get(), (AssistInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistInteractorProvider.get());
                case 652:
                    return AssistModule_ProvideAssistUtilsFactory.provideAssistUtils(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 653:
                    Context r1 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    Object obj = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.timeoutManagerProvider.get();
                    AssistantPresenceHandler assistantPresenceHandler = (AssistantPresenceHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantPresenceHandlerProvider.get();
                    return NgaUiController_Factory.newInstance(r1, obj, (TouchInsideHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.touchInsideHandlerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overlayUiHostProvider.get(), (EdgeLightsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.edgeLightsControllerProvider.get(), (GlowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glowControllerProvider.get(), (com.google.android.systemui.assist.uihints.ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider2.get(), (TranscriptionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.transcriptionControllerProvider.get(), (IconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.iconControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightnessProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flingVelocityWrapperProvider.get(), (AssistantWarmer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantWarmerProvider.get(), (NavBarFadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navBarFadeControllerProvider.get(), (AssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get());
                case 654:
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider);
                    return TimeoutManager_Factory.newInstance();
                case 655:
                    return AssistantPresenceHandler_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (AssistUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAssistUtilsProvider.get());
                case 656:
                    return TouchInsideHandler_Factory.newInstance(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get(), (AssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get());
                case 657:
                    return new GoogleAssistLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (AssistUtils) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAssistUtilsProvider.get(), (PhoneStateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.phoneStateMonitorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (AssistantPresenceHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantPresenceHandlerProvider.get());
                case 658:
                    return PhoneStateMonitor_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.optionalOfCentralSurfacesProvider), (BootCompleteCacheImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bootCompleteCacheImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get());
                case 659:
                    return OverlayUiHost_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 660:
                    Context unused3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    AssistLogger assistLogger = (AssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get();
                    return new EdgeLightsController((ViewGroup) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideParentViewGroupProvider.get());
                case 661:
                    return AssistantUIHintsModule_ProvideParentViewGroupFactory.provideParentViewGroup(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overlayUiHostProvider.get());
                case 662:
                    return GlowController_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ViewGroup) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideParentViewGroupProvider.get(), (TouchInsideHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.touchInsideHandlerProvider.get(), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get());
                case 663:
                    return ScrimController_Factory.newInstance((ViewGroup) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideParentViewGroupProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overlappedElementControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightnessProvider.get(), (TouchInsideHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.touchInsideHandlerProvider.get());
                case 664:
                    return OverlappedElementController_Factory.newInstance((OverviewProxyService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider.get(), (KeyguardBottomAreaInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBottomAreaInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get());
                case 665:
                    return LightnessProvider_Factory.newInstance();
                case 666:
                    return TranscriptionController_Factory.newInstance((ViewGroup) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideParentViewGroupProvider.get(), (TouchInsideHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.touchInsideHandlerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flingVelocityWrapperProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get());
                case 667:
                    return FlingVelocityWrapper_Factory.newInstance();
                case 668:
                    LayoutInflater layoutInflater = (LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get();
                    return IconController_Factory.newInstance((ViewGroup) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideParentViewGroupProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get());
                case 669:
                    return new AssistantWarmer(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 670:
                    return new NavBarFadeController((NavBarFader) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navBarFaderProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get());
                case 671:
                    return new NavBarFader((NavigationBarControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider.get());
                case 672:
                    return new OpaEnabledReceiver(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (OpaEnabledSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.opaEnabledSettingsProvider.get());
                case 673:
                    return NgaMessageHandler_Factory.newInstance((NgaUiController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ngaUiControllerProvider.get(), (AssistantPresenceHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistantPresenceHandlerProvider.get(), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1646$$Nest$msetOfConfigInfoListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1651$$Nest$msetOfGoBackListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1656$$Nest$msetOfSwipeListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1658$$Nest$msetOfWarmingListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1654$$Nest$msetOfNavBarVisibilityListener(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get());
                case 674:
                    return new ConfigurationHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 675:
                    return GoBackHandler_Factory.newInstance();
                case 676:
                    return SwipeHandler_Factory.newInstance();
                case 677:
                    return new DefaultUiController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (AssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider), (NavigationBarControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider.get());
                case 678:
                    return new GoogleDefaultUiController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (GoogleAssistLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.googleAssistLoggerProvider.get(), (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider), (NavigationBarControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider.get());
                case 679:
                    return new AssistInteractor((AssistRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistRepositoryProvider.get());
                case 680:
                    return new AssistRepository();
                case 681:
                    return new StatusBarRemoteInputCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (GroupExpansionManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.groupExpansionManagerImplProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), new ActionClickLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotifInteractionLogBufferProvider.get()), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get());
                case 682:
                    return StatusBarNotificationPresenter_Factory.newInstance(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ShadeViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider.get(), (QuickSettingsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsControllerProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get(), (DozeScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeScrimControllerProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (DynamicPrivacyController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dynamicPrivacyControllerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (NotificationAlertsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationAlertsInteractorProvider.get(), (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (NotificationLockscreenUserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLockscreenUserManagerImplProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ShadeEventCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeEventCoordinatorProvider.get(), (NotificationMediaManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationMediaManagerProvider.get(), (NotificationGutsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationGutsManagerProvider.get(), (InitController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.initControllerProvider.get(), (VisualInterruptionDecisionProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideVisualInterruptionDecisionProvider.get(), (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get(), (StatusBarRemoteInputCallback) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarRemoteInputCallbackProvider.get(), (NotificationStackScrollLayoutController.NotificationListContainerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideListContainerProvider.get());
                case 683:
                    ShadeExpansionStateManager shadeExpansionStateManager = (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get();
                    KeyguardUpdateMonitor keyguardUpdateMonitor = (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get();
                    return new QuickSettingsController(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider), (NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get(), (QsFrameTranslateImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsFrameTranslateImplProvider.get(), (ShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeTransitionControllerProvider.get(), (PulseExpansionHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulseExpansionHandlerProvider.get(), (NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (LightBarController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lightBarControllerProvider.get(), (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get(), (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get(), (NotificationShadeDepthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider.get(), (ShadeHeaderController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderControllerProvider.get(), (StatusBarTouchableRegionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarTouchableRegionManagerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get(), (MediaDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataManagerProvider.get(), (MediaHierarchyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaHierarchyManagerProvider.get(), (AmbientState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider.get(), (RecordingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (LockscreenGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenGestureLoggerProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1663$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (DeviceEntryFaceAuthInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.systemUIDeviceEntryFaceAuthInteractorProvider.get(), (ShadeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (ActiveNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (CastController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castControllerImplProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenHeaderHelperProvider));
                case 684:
                    DisplayMetricsRepository displayMetricsRepository = (DisplayMetricsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.displayMetricsRepositoryProvider.get();
                    return new QsFrameTranslateImpl();
                case 685:
                    return new DisplayMetricsRepository((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m975$$Nest$mdisplayMetrics(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayMetricsRepoLogBufferProvider.get());
                case 686:
                    return LogModule_ProvideDisplayMetricsRepoLogBufferFactory.provideDisplayMetricsRepoLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 687:
                    return new ShadeTransitionController((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ScrimShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimShadeTransitionControllerProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.panelExpansionInteractorProvider));
                case 688:
                    return new ScrimShadeTransitionController((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get());
                case 689:
                    SceneInteractor sceneInteractor = (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get();
                    return new PanelExpansionInteractor((ShadeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeRepositoryImplProvider.get());
                case 690:
                    return new PulseExpansionHandler(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (NotificationWakeUpCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationWakeUpCoordinatorProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 691:
                    return new ShadeHeaderController((MotionLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesShadeHeaderViewProvider.get(), (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get(), (StatusBarIconController.TintedIconManager.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider19.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1525$$Nest$mheaderPrivacyIconsController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (StatusBarContentInsetsProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarContentInsetsProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1696$$Nest$mvariableDateViewControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BatteryMeterViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBatteryMeterViewControllerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1659$$Nest$mshadeCarrierGroupControllerBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CombinedShadeHeadersConstraintManagerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesCombinedShadeHeadersConstraintManagerProvider.get(), (DemoModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1626$$Nest$mqsBatteryModeController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (NextAlarmController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nextAlarmControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1685$$Nest$mstatusOverlayHoverListenerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 692:
                    return ShadeViewProviderModule_Companion_ProvidesShadeHeaderViewFactory.providesShadeHeaderView((NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get());
                case 693:
                    return new StatusBarIconController.TintedIconManager.Factory((WifiUiAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiUiAdapterProvider.get(), (MobileUiAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileUiAdapterProvider.get(), (MobileContextProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileContextProvider.get());
                case 694:
                    return ShadeViewProviderModule_Companion_ProvidesOngoingPrivacyChipFactory.providesOngoingPrivacyChip((MotionLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesShadeHeaderViewProvider.get());
                case 695:
                    return new PrivacyDialogController((PermissionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePermissionManagerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (PrivacyItemController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyItemControllerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), new PrivacyLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePrivacyLogBufferProvider.get()), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (AppOpsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appOpsControllerImplProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 696:
                    return new PrivacyDialogControllerV2((PermissionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePermissionManagerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (PrivacyItemController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyItemControllerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), new PrivacyLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePrivacyLogBufferProvider.get()), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (AppOpsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.appOpsControllerImplProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get());
                case 697:
                    return ShadeViewProviderModule_Companion_ProvidesStatusIconContainerFactory.providesStatusIconContainer((MotionLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesShadeHeaderViewProvider.get());
                case 698:
                    return LogModule_ProvideShadeLogBufferFactory.provideShadeLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 699:
                    return SysUIConcurrencyModule_ProvideTimeTickHandlerFactory.provideTimeTickHandler();
                default:
                    throw new AssertionError(i);
            }
        }

        /* JADX WARNING: type inference failed for: r26v2, types: [java.lang.Object, com.android.systemui.keyguard.ui.view.layout.sections.SplitShadeGuidelines] */
        /* JADX WARNING: type inference failed for: r8v46, types: [java.lang.Object, com.android.systemui.util.concurrency.ThreadFactoryImpl] */
        public Object get7() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 700:
                    return ShadeViewProviderModule_Companion_ProvidesBatteryMeterViewControllerFactory.providesBatteryMeterViewController((BatteryMeterView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesBatteryMeterViewProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get());
                case 701:
                    return ShadeViewProviderModule_Companion_ProvidesBatteryMeterViewFactory.providesBatteryMeterView((MotionLayout) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesShadeHeaderViewProvider.get());
                case 702:
                    return LogModule_ProvideCarrierTextManagerLogFactory.provideCarrierTextManagerLog((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 703:
                    return new Object();
                case 704:
                    return CombinedShadeHeadersConstraintManagerImpl.INSTANCE;
                case 705:
                    return new NextAlarmControllerImpl((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (AlarmManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAlarmManagerProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 706:
                    ShadeExpansionStateManager shadeExpansionStateManager = (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get();
                    Provider unused = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider;
                    return new StatusBarTouchableRegionManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (JavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider.get(), (SceneContainerFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider.get(), (UnlockedScreenOffAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.unlockedScreenOffAnimationControllerProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get());
                case 707:
                    return new RecordingController((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenCaptureDevicePolicyResolverProvider), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (MediaProjectionMetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionMetricsLoggerProvider.get(), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get());
                case 708:
                    return new ScreenCaptureDevicePolicyResolver((DevicePolicyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDevicePolicyManagerProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1617$$Nest$mpersonalProfileUserHandle(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1703$$Nest$mworkProfileUserHandle(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 709:
                    return new MediaProjectionMetricsLogger((IMediaProjectionManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIMediaProjectionManagerProvider.get());
                case 710:
                    return new CastControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 711:
                    return new LargeScreenHeaderHelper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 712:
                    return new NotificationAlertsInteractor((DisableFlagsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disableFlagsRepositoryImplProvider.get());
                case 713:
                    return new ShadeEventCoordinator((Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1661$$Nest$mshadeEventCoordinatorLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 714:
                    return new InitController();
                case 715:
                    return NotificationsModule_ProvideListContainerFactory.provideListContainer((NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get());
                case 716:
                    return CentralSurfacesDependenciesModule_ProvideActivityTransitionAnimatorFactory.provideActivityTransitionAnimator();
                case 717:
                    return NotificationsModule_ProvideNotificationTransitionAnimatorControllerProviderFactory.provideNotificationTransitionAnimatorControllerProvider((NotificationLaunchAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLaunchAnimationInteractorProvider.get(), (NotificationStackScrollLayoutController.NotificationListContainerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideListContainerProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (InteractionJankMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideInteractionJankMonitorProvider.get());
                case 718:
                    return new NotificationLaunchAnimationInteractor((NotificationLaunchAnimationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLaunchAnimationRepositoryProvider.get());
                case 719:
                    return new NotificationLaunchAnimationRepository();
                case 720:
                    return new LaunchFullScreenIntentProvider();
                case 721:
                    return new NotificationShelfViewModel((NotificationShelfInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShelfInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1431$$Nest$mactivatableNotificationViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 722:
                    return new NotificationShelfInteractor((KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get(), (DeviceEntryFaceAuthRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryFaceAuthRepositoryImplProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get());
                case 723:
                    return new AccessibilityInteractor(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1430$$Nest$maccessibilityRepository(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 724:
                    Provider unused2 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hideNotificationsInteractorProvider;
                    return new Object();
                case 725:
                    return new HideNotificationsInteractor(new UnfoldTransitionInteractorImpl(new UnfoldTransitionRepositoryImpl((Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldTransitionProgressProvider.get())), (ConfigurationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1444$$Nest$manimationStatusRepositoryImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get());
                case 726:
                    SwitchingProvider unused3 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider;
                    Provider unused4 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationSettingsInteractorProvider;
                    DelegateFactory unused5 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider;
                    return FooterViewModelModule_ProvideOptionalFactory.provideOptional();
                case 727:
                    return NotificationSettingsInteractorModule_ProvideNotificationSettingsInteractorFactory.provideNotificationSettingsInteractor((NotificationSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideNotificationSettingsRepositoryProvider.get());
                case 728:
                    CoroutineDispatcher coroutineDispatcher = (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get();
                    return NotificationSettingsRepositoryModule_ProvideNotificationSettingsRepositoryFactory.provideNotificationSettingsRepository((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (SecureSettingsRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideSecureSettingsRepositoryProvider.get());
                case 729:
                    return SecureSettingsRepositoryModule_ProvideSecureSettingsRepositoryFactory.provideSecureSettingsRepository((ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 730:
                    return new NotificationLoggerViewModel((ActiveNotificationsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activeNotificationsInteractorProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (WindowRootViewVisibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider.get());
                case 731:
                    Object obj = new Object();
                    FlowKt.distinctUntilChanged(new NotificationStackInteractor$special$$inlined$map$1(1, new Flow[]{new NotificationStackInteractor$special$$inlined$map$1(0, ((KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get()).statusBarState), ((PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get()).isAsleep}));
                    return obj;
                case 732:
                    Object obj2 = new Object();
                    Flow flow = ((RemoteInputRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputRepositoryImplProvider.get()).isRemoteInputActive;
                    return obj2;
                case 733:
                    return new RemoteInputRepositoryImpl((NotificationRemoteInputManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationRemoteInputManagerProvider.get());
                case 734:
                    return LogModule_ProvideNotificationRenderLogBufferFactory.provideNotificationRenderLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 735:
                    return new NotificationStackSizeCalculator((SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get(), (MediaDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get());
                case 736:
                    FeatureFlags featureFlags = (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    return new Object();
                case 737:
                    return ShadeViewProviderModule_Companion_ProvidesSharedNotificationContainerFactory.providesSharedNotificationContainer((NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get());
                case 738:
                    return new SharedNotificationContainerViewModel((SharedNotificationContainerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sharedNotificationContainerInteractorProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (CommunalInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.communalInteractorProvider.get(), (AlternateBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerToGoneTransitionViewModelProvider.get(), (AodToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodToLockscreenTransitionViewModelProvider.get(), (DozingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozingToLockscreenTransitionViewModelProvider.get(), (DreamingToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dreamingToLockscreenTransitionViewModelProvider.get(), (GlanceableHubToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.glanceableHubToLockscreenTransitionViewModelProvider.get(), (GoneToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToAodTransitionViewModelProvider.get(), (GoneToDozingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDozingTransitionViewModelProvider.get(), (GoneToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.goneToDreamingTransitionViewModelProvider.get(), (LockscreenToDreamingTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToDreamingTransitionViewModelProvider.get(), (LockscreenToGlanceableHubTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGlanceableHubTransitionViewModelProvider.get(), (LockscreenToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToGoneTransitionViewModelProvider.get(), (LockscreenToPrimaryBouncerTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToPrimaryBouncerTransitionViewModelProvider.get(), (LockscreenToOccludedTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenToOccludedTransitionViewModelProvider.get(), (OccludedToAodTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToAodTransitionViewModelProvider.get(), (OccludedToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.occludedToLockscreenTransitionViewModelProvider.get(), (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get(), (PrimaryBouncerToLockscreenTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToLockscreenTransitionViewModelProvider.get(), (AodBurnInViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.aodBurnInViewModelProvider.get());
                case 739:
                    return new SharedNotificationContainerInteractor((ConfigurationRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationRepositoryImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (DeviceEntryUdfpsInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryUdfpsInteractorProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenHeaderHelperProvider));
                case 740:
                    return new GoneToDreamingTransitionViewModel((KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 741:
                    return new NotificationStackAppearanceViewModel((DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (NotificationStackAppearanceInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackAppearanceInteractorProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (SceneInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sceneInteractorProvider.get());
                case 742:
                    return new KeyguardBlueprintViewBinder((Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get());
                case 743:
                    return new NotificationIconContainerAlwaysOnDisplayViewModel((CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1443$$Nest$malwaysOnDisplayNotificationIconsInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (KeyguardInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardInteractorProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get());
                case 744:
                    return new SplitShadeKeyguardBlueprint(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1486$$Nest$mdefaultIndicationAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1485$$Nest$mdefaultDeviceEntrySection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1489$$Nest$mdefaultShortcutsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), Optional.of(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1484$$Nest$mdefaultAmbientIndicationAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl)), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1488$$Nest$mdefaultSettingsPopupMenuSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1491$$Nest$mdefaultStatusViewSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1490$$Nest$mdefaultStatusBarSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1672$$Nest$msplitShadeNotificationStackScrollLayoutSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new Object(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1446$$Nest$maodNotificationIconsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1445$$Nest$maodBurnInSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1476$$Nest$mcommunalTutorialIndicatorSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1468$$Nest$mclockSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1669$$Nest$msmartspaceSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1671$$Nest$msplitShadeMediaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 745:
                    AlignShortcutsToUdfpsSection r2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1439$$Nest$malignShortcutsToUdfpsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DefaultIndicationAreaSection r3 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1486$$Nest$mdefaultIndicationAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DefaultDeviceEntrySection r5 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1485$$Nest$mdefaultDeviceEntrySection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    Optional of = Optional.of(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1484$$Nest$mdefaultAmbientIndicationAreaSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                    DefaultSettingsPopupMenuSection r7 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1488$$Nest$mdefaultSettingsPopupMenuSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DefaultStatusViewSection r8 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1491$$Nest$mdefaultStatusViewSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DefaultStatusBarSection r9 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1490$$Nest$mdefaultStatusBarSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DefaultNotificationStackScrollLayoutSection r10 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1487$$Nest$mdefaultNotificationStackScrollLayoutSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    AodNotificationIconsSection r11 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1446$$Nest$maodNotificationIconsSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    AodBurnInSection r12 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1445$$Nest$maodBurnInSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    CommunalTutorialIndicatorSection r13 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1476$$Nest$mcommunalTutorialIndicatorSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    ClockSection r14 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1468$$Nest$mclockSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    SmartspaceSection r57 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1669$$Nest$msmartspaceSection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    KeyguardSliceViewSection keyguardSliceViewSection = new KeyguardSliceViewSection((LockscreenSmartspaceController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenSmartspaceControllerProvider.get());
                    DefaultUdfpsAccessibilityOverlaySection r16 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1492$$Nest$mdefaultUdfpsAccessibilityOverlaySection(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    return new ShortcutsBesideUdfpsKeyguardBlueprint(r2, r3, r5, of, r7, r8, r9, r10, r11, r12, r13, r14, r57, keyguardSliceViewSection, r16);
                case 746:
                    return KeyguardModule_ProvidesThreadAssertFactory.providesThreadAssert();
                case 747:
                    return new QuickSettingsScene((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (QuickSettingsSceneViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsSceneViewModelProvider.get(), (StatusBarIconController.TintedIconManager.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider19.get(), (BatteryMeterViewController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider20.get(), (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get());
                case 748:
                    NotificationsPlaceholderViewModel notificationsPlaceholderViewModel = (NotificationsPlaceholderViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsPlaceholderViewModelProvider.get();
                    return new QuickSettingsSceneViewModel((ShadeHeaderViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderViewModelProvider.get(), (QSSceneAdapterImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSSceneAdapterImplProvider.get(), (FooterActionsViewModel.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider18.get(), (FooterActionsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.footerActionsControllerProvider.get());
                case 749:
                    return new ShadeHeaderViewModel((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (MobileIconsInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsInteractorImplProvider.get(), (MobileIconsViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsViewModelProvider.get(), (PrivacyChipInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyChipInteractorProvider.get(), (ShadeHeaderClockInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderClockInteractorProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 750:
                    return new PrivacyChipInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (PrivacyChipRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyChipRepositoryImplProvider.get(), (PrivacyDialogController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyDialogControllerProvider.get(), (PrivacyDialogControllerV2) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyDialogControllerV2Provider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get());
                case 751:
                    return new PrivacyChipRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (PrivacyConfig) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyConfigProvider.get(), (PrivacyItemController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.privacyItemControllerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (SafetyCenterManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSafetyCenterManagerProvider.get());
                case 752:
                    return new ShadeHeaderClockInteractor((ShadeHeaderClockRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderClockRepositoryProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 753:
                    return new ShadeHeaderClockRepository((NextAlarmController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nextAlarmControllerImplProvider.get());
                case 754:
                    return new BatteryMeterViewController.Factory((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (ContentResolver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideContentResolverProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get());
                case 755:
                    return new ShadeScene((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (ShadeSceneViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeSceneViewModelProvider.get(), (StatusBarIconController.TintedIconManager.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider19.get(), (BatteryMeterViewController.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider20.get(), (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get(), (MediaCarouselController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaCarouselControllerProvider.get(), (MediaHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesQuickQSMediaHostProvider.get());
                case 756:
                    return new ShadeSceneViewModel((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (DeviceEntryInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceEntryInteractorProvider.get(), (QSSceneAdapterImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSSceneAdapterImplProvider.get(), (ShadeHeaderViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderViewModelProvider.get(), (NotificationsPlaceholderViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationsPlaceholderViewModelProvider.get(), (MediaDataManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaDataManagerProvider.get());
                case 757:
                    return new Object();
                case 758:
                    return new FlingAnimationUtils.Builder(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m975$$Nest$mdisplayMetrics(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 759:
                    return new NotificationsQSContainerController((NotificationsQuickSettingsContainer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationsQuickSettingsContainerProvider.get(), (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get(), (OverviewProxyService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.overviewProxyServiceProvider.get(), (ShadeHeaderController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeHeaderControllerProvider.get(), (ShadeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeInteractorImplProvider.get(), (FragmentService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fragmentServiceProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get(), (SplitShadeStateControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.splitShadeStateControllerImplProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.largeScreenHeaderHelperProvider));
                case 760:
                    return ShadeViewProviderModule_Companion_ProvidesNotificationsQuickSettingsContainerFactory.providesNotificationsQuickSettingsContainer((NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get());
                case 761:
                    return TapAgainViewController_Factory.newInstance((TapAgainView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesTapAgainViewProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainDelayableExecutorProvider.get(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get());
                case 762:
                    return ShadeViewProviderModule_Companion_ProvidesTapAgainViewFactory.providesTapAgainView((NotificationPanelView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationPanelViewProvider.get());
                case 763:
                    KeyguardBottomAreaView r1 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1535$$Nest$mkeyguardBottomAreaView(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    LockscreenSmartspaceController lockscreenSmartspaceController = (LockscreenSmartspaceController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenSmartspaceControllerProvider.get();
                    FeatureFlagsClassic featureFlagsClassic = (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    ViewController viewController = new ViewController(r1);
                    UnreleasedFlag unreleasedFlag = com.android.systemui.flags.Flags.NULL_FLAG;
                    r1.isLockscreenLandscapeEnabled = false;
                    return viewController;
                case 764:
                    return new GoneToDreamingLockscreenHostedTransitionViewModel((KeyguardTransitionAnimationFlow) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionAnimationFlowProvider.get());
                case 765:
                    return new DarkIconRepositoryImpl((DarkIconDispatcherImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.darkIconDispatcherImplProvider.get());
                case 766:
                    return LogModule_ProvideCollapsedSbFragmentLogBufferFactory.provideCollapsedSbFragmentLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 767:
                    CarrierConfigTracker carrierConfigTracker = (CarrierConfigTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.carrierConfigTrackerProvider.get();
                    return new StatusBarSignalPolicy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get(), (NetworkController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.networkControllerImplProvider.get(), (SecurityController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.securityControllerImplProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get());
                case 768:
                    return new AccessibilityFloatingMenuController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (WindowManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideWindowManagerProvider.get(), (DisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDisplayManagerProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (AccessibilityButtonTargetsObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityButtonTargetsObserverProvider.get(), (AccessibilityButtonModeObserver) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityButtonModeObserverProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get());
                case 769:
                    Optional optional = (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.unfoldTransitionProgressProvider.get();
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.javaAdapterProvider);
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerDependenciesProvider);
                    return new NotificationShadeWindowViewController((LockscreenShadeTransitionController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenShadeTransitionControllerProvider.get(), (FalsingCollector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesFalsingCollectorLegacyProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get(), (NotificationShadeDepthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeDepthControllerProvider.get(), (NotificationShadeWindowView) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providesNotificationShadeWindowViewProvider.get(), (NotificationPanelViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider.get(), (ShadeExpansionStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.shadeExpansionStateManagerProvider.get(), (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (StatusBarWindowStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarWindowStateControllerProvider.get(), (LockIconViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockIconViewControllerProvider.get(), (CentralSurfaces) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.centralSurfacesGoogleProvider.get(), (DozeServiceHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeServiceHostProvider.get(), (DozeScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeScrimControllerProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (KeyguardUnlockAnimationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUnlockAnimationControllerProvider.get(), (NotificationInsetsImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationInsetsImplProvider.get(), (AmbientState) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ambientStateProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1663$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (PulsingGestureListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulsingGestureListenerProvider.get(), (LockscreenHostedDreamGestureListener) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.lockscreenHostedDreamGestureListenerProvider.get(), (KeyguardTransitionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardTransitionInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1519$$Nest$mglanceableHubContainerController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (NotificationLaunchAnimationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationLaunchAnimationInteractorProvider.get(), (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (SysUIKeyEventHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIKeyEventHandlerProvider.get(), (QuickSettingsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsControllerProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (AlternateBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerInteractorProvider.get(), (BouncerViewBinder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerViewBinderProvider.get());
                case 770:
                    FeatureFlagsClassic featureFlagsClassic2 = (FeatureFlagsClassic) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get();
                    Lazy lazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.biometricUnlockControllerProvider);
                    Lazy lazy2 = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider);
                    NotificationIconAreaController notificationIconAreaController = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationIconAreaController();
                    return new DozeServiceHost((DozeLog) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeLogProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (SysuiStatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (ScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.scrimControllerProvider.get(), lazy, lazy2, (DozeScrimController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeScrimControllerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (PulseExpansionHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.pulseExpansionHandlerProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (NotificationWakeUpCoordinator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationWakeUpCoordinatorProvider.get(), (AuthController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authControllerProvider.get(), notificationIconAreaController, (ShadeLockscreenInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeLockscreenInteractorProvider.get(), (DozeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeInteractorProvider.get());
                case 771:
                    return new DozeInteractor((KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get());
                case 772:
                    return new PulsingGestureListener((FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (DockManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dockObserverProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m972$$Nest$mambientDisplayConfiguration(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1663$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DozeInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeInteractorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 773:
                    ShadeLogger r92 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1663$$Nest$mshadeLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    return new LockscreenHostedDreamGestureListener((FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (KeyguardRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardRepositoryImplProvider.get(), r92);
                case 774:
                    return new SysUIKeyEventHandler((BackActionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.backActionInteractorProvider.get(), (KeyguardKeyEventInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardKeyEventInteractorProvider.get());
                case 775:
                    return new BackActionInteractor((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (NotificationShadeWindowController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationShadeWindowControllerImplProvider.get(), (WindowRootViewVisibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.windowRootViewVisibilityInteractorProvider.get());
                case 776:
                    return new KeyguardKeyEventInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (MediaSessionLegacyHelperWrapper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaSessionLegacyHelperWrapperProvider.get(), (BackActionInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.backActionInteractorProvider.get(), (PowerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.powerInteractorProvider.get());
                case 777:
                    return new Object();
                case 778:
                    return new AlternateBouncerDependencies(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1442$$Nest$malternateBouncerViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (SwipeUpAnywhereGestureHandler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeUpAnywhereGestureHandlerProvider.get(), (TapGestureDetector) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tapGestureDetectorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1441$$Nest$malternateBouncerUdfpsIconViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.alternateBouncerUdfpsAccessibilityOverlayViewModelProvider), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1440$$Nest$malternateBouncerMessageAreaViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 779:
                    Context r15 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DisplayTracker displayTracker = (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get();
                    return new SwipeUpGestureHandler(r15, (SwipeUpGestureLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.swipeUpGestureLoggerProvider.get(), "SwipeUpAnywhereGestureHandler");
                case 780:
                    Context r17 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DisplayTracker displayTracker2 = (DisplayTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDisplayTrackerProvider.get();
                    return new TapGestureDetector(r17);
                case 781:
                    return new UdfpsAccessibilityOverlayViewModel((UdfpsOverlayInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.udfpsOverlayInteractorProvider.get(), (AccessibilityInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.accessibilityInteractorProvider.get());
                case 782:
                    return new BouncerViewBinder((ComposeBouncerFlagsImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.implProvider2.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.legacyBouncerDependenciesProvider), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.composeBouncerDependenciesProvider));
                case 783:
                    return new LegacyBouncerDependencies(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1536$$Nest$mkeyguardBouncerViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (PrimaryBouncerToGoneTransitionViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerToGoneTransitionViewModelProvider.get(), new DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1541$$Nest$mkeyguardMessageAreaControllerFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (BouncerMessageInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerMessageInteractorProvider.get(), (BouncerLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerLoggerProvider.get(), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 784:
                    return new BouncerLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBouncerLogProvider.get());
                case 785:
                    return LogModule_ProvideBouncerLogFactory.provideBouncerLog((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 786:
                    return new ComposeBouncerDependencies((PrimaryBouncerInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.primaryBouncerInteractorProvider.get(), (BouncerViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.viewModelProvider.get(), (BouncerViewModule$Companion$bouncerDialogFactory$1) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bouncerDialogFactoryProvider.get(), (AuthenticationInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.authenticationInteractorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1697$$Nest$mviewMediatorCallback(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SelectedUserInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.selectedUserInteractorProvider.get());
                case 787:
                    return new VolumeDialogComponent(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (KeyguardViewMediator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newKeyguardViewMediatorProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (VolumeDialogControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.volumeDialogControllerImplProvider.get(), (DemoModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDemoModeControllerProvider.get(), (PluginDependencyProvider) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.pluginDependencyProvider.get(), (ExtensionControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.extensionControllerImplProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1698$$Nest$mvolumeDialog(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 788:
                    return new VolumeDialogControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (RingerModeTrackerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ringerModeTrackerImplProvider.get(), new Object(), (AudioManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider.get(), (NotificationManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideNotificationManagerProvider.get(), (VibratorHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.vibratorHelperProvider.get(), (IAudioService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIAudioServiceProvider.get(), (AccessibilityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAccessibilityManagerProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (KeyguardManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideKeyguardManagerProvider.get(), (ActivityManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideActivityManagerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 789:
                    return new VolumePanelFactory(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get());
                case 790:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$16(this);
                case 791:
                    DisableFlagsLogger disableFlagsLogger = (DisableFlagsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.disableFlagsLoggerProvider.get();
                    return CentralSurfacesCommandQueueCallbacks_Factory.newInstance((CentralSurfaces) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.centralSurfacesGoogleProvider.get(), (QuickSettingsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickSettingsControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), (ScreenPinningRequest) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.screenPinningRequestProvider.get(), (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (ShadeViewController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationPanelViewControllerProvider.get(), (RemoteInputQuickSettingsDisabler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.remoteInputQuickSettingsDisablerProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (KeyguardUpdateMonitor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardUpdateMonitorProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (HeadsUpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.headsUpManagerPhoneProvider.get(), (WakefulnessLifecycle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wakefulnessLifecycleProvider.get(), (DeviceProvisionedController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDeviceProvisionedControllerProvider.get(), (StatusBarKeyguardViewManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarKeyguardViewManagerProvider.get(), (AssistManagerGoogle) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.assistManagerGoogleProvider.get(), (DozeServiceHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.dozeServiceHostProvider.get(), (NotificationStackScrollLayoutController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.notificationStackScrollLayoutControllerProvider.get(), (StatusBarHideIconsForBouncerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarHideIconsForBouncerManagerProvider.get(), (PowerManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePowerManagerProvider.get(), (Optional) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideOptionalVibratorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m974$$Nest$mdisplayIdInteger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraLauncherProvider), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get());
                case 792:
                    return new ScreenPinningRequest(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (NavigationModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationModeControllerProvider.get(), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.navigationBarControllerImplProvider), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 793:
                    return new CameraLauncher((CameraGestureHelper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.cameraGestureHelperProvider.get(), (KeyguardBypassController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardBypassControllerProvider.get());
                case 794:
                    QSPipelineFlagsRepository qSPipelineFlagsRepository = (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get();
                    return new QSHostAdapter((QSTileHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileHostProvider.get(), (CurrentTilesInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.currentTilesInteractorImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (TileServiceRequestController.Builder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.builderProvider3.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 795:
                    Context r18 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context;
                    DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newQSTileFactoryProvider);
                    return new QSTileHost(r18, (QSFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSFactoryImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (PluginManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providesPluginManagerProvider.get(), (TunerService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tunerServiceImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAutoTileManagerProvider, (ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), new CustomTileStatePersisterImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$19) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider23.get(), (UserFileManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider.get(), (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get());
                case 796:
                    QSTileConfigProviderImpl qSTileConfigProviderImpl = (QSTileConfigProviderImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileConfigProviderImplProvider.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17 daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17 = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider22.get();
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1561$$Nest$mmapOfStringAndProviderOfQSTileViewModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1625$$Nest$mqSTileViewModelFactoryComponentOfCustomTileDataModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl);
                    throw new IllegalStateException("New code path not supported when com.android.systemui.qs_new_tiles is disabled.".toString());
                case 797:
                    return new QSTileConfigProviderImpl(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1562$$Nest$mmapOfStringAndQSTileConfig(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get());
                case 798:
                    return new QsEventLoggerImpl((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 799:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$17(this);
                default:
                    throw new AssertionError(i);
            }
        }

        public Object get8() {
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl = this.sysUIGoogleGlobalRootComponentImpl;
            DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl = (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) this.wMComponentImpl;
            int i = this.id;
            switch (i) {
                case 800:
                    return QSAccessibilityModule_Companion_ProvideColorCorrectionTileViewModelFactory.provideColorCorrectionTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1676$$Nest$mstaticOfColorCorrectionTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1471$$Nest$mcolorCorrectionTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1470$$Nest$mcolorCorrectionTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1472$$Nest$mcolorCorrectionUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 801:
                    return new DisabledByPolicyInteractorImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1630$$Nest$mrestrictedLockProxy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 802:
                    return new QSTileAnalytics((UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get());
                case 803:
                    return new QSTileLogger(LogModule_ProvideQuickSettingsTilesLogBufferCacheFactory.provideQuickSettingsTilesLogBufferCache(), (LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get());
                case 804:
                    return new ColorCorrectionRepositoryImpl((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 805:
                    return new QSTileIntentUserInputHandlerImpl((ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), new UserHandle(UserHandle.myUserId()));
                case 806:
                    return QSAccessibilityModule_Companion_ProvideColorInversionTileViewModelFactory.provideColorInversionTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1677$$Nest$mstaticOfColorInversionTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1474$$Nest$mcolorInversionTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1473$$Nest$mcolorInversionTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1475$$Nest$mcolorInversionUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 807:
                    return new ColorInversionRepositoryImpl((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 808:
                    return QSAccessibilityModule_Companion_ProvideFontScalingTileViewModelFactory.provideFontScalingTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1680$$Nest$mstaticOfFontScalingTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1514$$Nest$mfontScalingTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), new FontScalingTileDataInteractor(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1515$$Nest$mfontScalingTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 809:
                    return new FontScalingDialogDelegate(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get(), (LayoutInflater) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providerLayoutInflaterProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1690$$Nest$msystemSettingsImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider.get());
                case 810:
                    return ConnectivityModule_Companion_ProvideAirplaneModeTileViewModelFactory.provideAirplaneModeTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1674$$Nest$mstaticOfAirplaneModeTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1432$$Nest$mairplaneModeMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1433$$Nest$mairplaneModeTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1434$$Nest$mairplaneModeTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 811:
                    return ConnectivityModule_Companion_ProvideDataSaverTileViewModelFactory.provideDataSaverTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1678$$Nest$mstaticOfDataSaverTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1481$$Nest$mdataSaverTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1480$$Nest$mdataSaverTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1482$$Nest$mdataSaverTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 812:
                    return StatusBarPolicyModule_ProvideDataSaverControllerFactory.provideDataSaverController((NetworkController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.networkControllerImplProvider.get());
                case 813:
                    return PolicyModule_Companion_ProvideFlashlightTileViewModelFactory.provideFlashlightTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1679$$Nest$mstaticOfFlashlightTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1511$$Nest$mflashlightMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1512$$Nest$mflashlightTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1513$$Nest$mflashlightTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 814:
                    return PolicyModule_Companion_ProvideLocationTileViewModelFactory.provideLocationTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1681$$Nest$mstaticOfLocationTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1547$$Nest$mlocationTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1546$$Nest$mlocationTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1548$$Nest$mlocationTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 815:
                    return PolicyModule_Companion_ProvideAlarmTileViewModelFactory.provideAlarmTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1675$$Nest$mstaticOfAlarmTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1436$$Nest$malarmTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1435$$Nest$malarmTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1437$$Nest$malarmTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 816:
                    return PolicyModule_Companion_ProvideUiModeNightTileViewModelFactory.provideUiModeNightTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1683$$Nest$mstaticOfUiModeNightTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1694$$Nest$muiModeNightTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1693$$Nest$muiModeNightTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1695$$Nest$muiModeNightTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 817:
                    return RotationLockNewModule_Companion_ProvideRotationTileViewModelFactory.provideRotationTileViewModel(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1682$$Nest$mstaticOfRotationLockTileModel(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1633$$Nest$mrotationLockTileMapper(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1632$$Nest$mrotationLockTileDataInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1634$$Nest$mrotationLockTileUserActionInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 818:
                    String[] stringArray = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getStringArray(17236129);
                    Preconditions.checkNotNullFromProvides(stringArray);
                    return new RotationLockControllerImpl((RotationPolicyWrapperImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindRotationPolicyWrapperProvider.get(), (DeviceStateRotationLockSettingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceStateRotationLockSettingControllerProvider.get(), stringArray);
                case 819:
                    return new RotationPolicyWrapperImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 820:
                    return new DeviceStateRotationLockSettingController((RotationPolicyWrapperImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindRotationPolicyWrapperProvider.get(), (DeviceStateManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideDeviceStateManagerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (DeviceStateRotationLockSettingsManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideAutoRotateSettingsManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1500$$Nest$mdeviceStateRotationLockSettingControllerLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 821:
                    return StatusBarPolicyModule_ProvideAutoRotateSettingsManagerFactory.provideAutoRotateSettingsManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                case 822:
                    return LogModule_ProvideDeviceStateAutoRotationLogBufferFactory.provideDeviceStateAutoRotationLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 823:
                    return new CameraAutoRotateRepositoryImpl((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 824:
                    return new CameraSensorPrivacyRepositoryImpl((CoroutineContext) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgCoroutineContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (SensorPrivacyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSensorPrivacyManagerProvider.get());
                case 825:
                    return new QSFactoryImpl(DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider24, DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1560$$Nest$mmapOfStringAndProviderOfQSTileImplOf(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 826:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$18(this);
                case 827:
                    QSPipelineFlagsRepository qSPipelineFlagsRepository = (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get();
                    QSTileHost qSTileHost = (QSTileHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileHostProvider.get();
                    DelayableExecutor delayableExecutor = (DelayableExecutor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundDelayableExecutorProvider.get();
                    return new TileServices((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider, (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (CommandQueue) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideCommandQueueProvider.get(), (StatusBarIconController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarIconControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1614$$Nest$mpanelInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$19) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider23.get(), (CustomTileAddedSharedPrefsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.customTileAddedSharedPrefsRepositoryProvider.get());
                case 828:
                    return new PanelInteractorImpl((ShadeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideShadeControllerProvider.get());
                case 829:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$19(this);
                case 830:
                    return new CustomTileAddedSharedPrefsRepository((UserFileManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userFileManagerImplProvider.get());
                case 831:
                    return ConnectivityModule_Companion_BindInternetTileFactory.bindInternetTile(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1531$$Nest$minternetTile(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1532$$Nest$minternetTileNewImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 832:
                    return new InternetTileViewModel((AirplaneModeRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.airplaneModeRepositoryImplProvider.get(), (ConnectivityRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider.get(), (EthernetInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.ethernetInteractorProvider.get(), (MobileIconsInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mobileIconsInteractorImplProvider.get(), (WifiInteractorImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.wifiInteractorImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 833:
                    return new EthernetInteractor((ConnectivityRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider.get());
                case 834:
                    return new ColorInversionTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 835:
                    return new NightDisplayTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (LocationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.locationControllerImplProvider.get(), (ColorDisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideColorDisplayManagerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1589$$Nest$mnightDisplayListenerModuleBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 836:
                    return new ReduceBrightColorsTile(((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.isReduceBrightColorsAvailableProvider.get()).booleanValue(), (ReduceBrightColorsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reduceBrightColorsControllerProvider.get(), (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger());
                case 837:
                    return Boolean.valueOf(QSFlagsModule.isReduceBrightColorsAvailable(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context));
                case 838:
                    return new ReduceBrightColorsController((UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (ColorDisplayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideColorDisplayManagerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 839:
                    return new OneHandedModeTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 840:
                    return new ColorCorrectionTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 841:
                    return new DreamTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (IDreamManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideIDreamManagerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1570$$Nest$mnamedBoolean2(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1571$$Nest$mnamedBoolean3(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 842:
                    return new FontScalingTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.fontScalingDialogDelegateProvider);
                case 843:
                    return new BluetoothTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (BluetoothControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothControllerImplProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (BluetoothTileDialogViewModel) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothTileDialogViewModelProvider.get());
                case 844:
                    return new BluetoothControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (BluetoothLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothLoggerProvider.get(), (BluetoothRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothRepositoryImplProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get(), GlobalConcurrencyModule_ProvideMainLooperFactory.provideMainLooper(), (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (BluetoothAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideBluetoothAdapterProvider.get());
                case 845:
                    return new BluetoothLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providerBluetoothLogBufferProvider.get());
                case 846:
                    return LogModule_ProviderBluetoothLogBufferFactory.providerBluetoothLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 847:
                    return new BluetoothRepositoryImpl((CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get());
                case 848:
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.frameworkServicesModule.getClass();
                    SharedPreferences sharedPreferences = Prefs.get(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                    Preconditions.checkNotNullFromProvides(sharedPreferences);
                    return new BluetoothTileDialogViewModel((DeviceItemInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceItemInteractorProvider.get(), (BluetoothStateInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothStateInteractorProvider.get(), (BluetoothAutoOnInteractor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothAutoOnInteractorProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), sharedPreferences, (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$20) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider25.get());
                case 849:
                    return new DeviceItemInteractor((BluetoothTileDialogRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothTileDialogRepositoryProvider.get(), (AudioManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideAudioManagerProvider.get(), (BluetoothAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideBluetoothAdapterProvider.get(), (LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (SystemClock) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bindSystemClockProvider.get(), (UiEventLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUiEventLoggerProvider.get(), new BluetoothTileDialogLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQBluetoothTileDialogLogBufferProvider.get()), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get());
                case 850:
                    return new BluetoothTileDialogRepository((LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), (BluetoothAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideBluetoothAdapterProvider.get());
                case 851:
                    return LogModule_ProvideQBluetoothTileDialogLogBufferFactory.provideQBluetoothTileDialogLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 852:
                    return new BluetoothStateInteractor((LocalBluetoothManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideLocalBluetoothControllerProvider.get(), new BluetoothTileDialogLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQBluetoothTileDialogLogBufferProvider.get()), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 853:
                    return new BluetoothAutoOnInteractor((BluetoothAutoOnRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bluetoothAutoOnRepositoryProvider.get());
                case 854:
                    return new BluetoothAutoOnRepository((UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 855:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$20(this);
                case 856:
                    return new CastTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (CastController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castControllerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (NetworkController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.networkControllerImplProvider.get(), (HotspotController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hotspotControllerImplProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (ConnectivityRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.connectivityRepositoryImplProvider.get(), (TileJavaAdapter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tileJavaAdapterProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get());
                case 857:
                    return new HotspotControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get());
                case 858:
                    return new TileJavaAdapter();
                case 859:
                    return new HotspotTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (HotspotController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hotspotControllerImplProvider.get(), (DataSaverControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDataSaverControllerProvider.get());
                case 860:
                    Lazy lazy = DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideConnectivityManagagerProvider);
                    GlobalSettingsImpl r28 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl();
                    UserTracker userTracker = (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get();
                    return new AirplaneModeTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), lazy, r28);
                case 861:
                    return new DataSaverTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (DataSaverControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDataSaverControllerProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (SystemUIDialog.Factory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider6.get());
                case 862:
                    return new NfcTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get());
                case 863:
                    return new DeviceControlsTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (ControlsComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider.get());
                case 864:
                    daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.frameworkServicesModule.getClass();
                    SharedPreferences sharedPreferences2 = Prefs.get(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context);
                    Preconditions.checkNotNullFromProvides(sharedPreferences2);
                    return new DndTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (ZenModeController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.zenModeControllerImplProvider.get(), sharedPreferences2, (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get());
                case 865:
                    return new WorkModeTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (ManagedProfileControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.managedProfileControllerImplProvider.get());
                case 866:
                    return new ManagedProfileControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainExecutorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (UserManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideUserManagerProvider.get());
                case 867:
                    return new FlashlightTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (FlashlightController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.flashlightControllerImplProvider.get());
                case 868:
                    return new LocationTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (LocationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.locationControllerImplProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1614$$Nest$mpanelInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl));
                case 869:
                    Looper looper = (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get();
                    Handler handler = (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get();
                    MetricsLogger metricsLogger = (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get();
                    FalsingManager falsingManager = (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get();
                    StatusBarStateController statusBarStateController = (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get();
                    ActivityStarter activityStarter = (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get();
                    return CameraToggleTile_Factory.newInstance(handler, looper, (SafetyCenterManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSafetyCenterManagerProvider.get(), metricsLogger, activityStarter, falsingManager, statusBarStateController, (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (IndividualSensorPrivacyControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIndividualSensorPrivacyControllerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get());
                case 870:
                    Looper looper2 = (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get();
                    Handler handler2 = (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get();
                    MetricsLogger metricsLogger2 = (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get();
                    FalsingManager falsingManager2 = (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get();
                    StatusBarStateController statusBarStateController2 = (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get();
                    ActivityStarter activityStarter2 = (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get();
                    return MicrophoneToggleTile_Factory.newInstance(handler2, looper2, (SafetyCenterManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSafetyCenterManagerProvider.get(), metricsLogger2, activityStarter2, falsingManager2, statusBarStateController2, (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (IndividualSensorPrivacyControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIndividualSensorPrivacyControllerProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get());
                case 871:
                    return new AlarmTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (NextAlarmController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.nextAlarmControllerImplProvider.get());
                case 872:
                    return new UiModeNightTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (ConfigurationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.configurationControllerImplProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (LocationController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.locationControllerImplProvider.get());
                case 873:
                    return new QRCodeScannerTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (QRCodeScannerController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qRCodeScannerControllerProvider.get());
                case 874:
                    return new RecordIssueTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$21) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider26.get());
                case 875:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$21(this);
                case 876:
                    return new ScreenRecordTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (FeatureFlags) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.featureFlagsClassicReleaseProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (RecordingController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.recordingControllerProvider.get(), (KeyguardDismissUtil) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardDismissUtilProvider.get(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (DialogTransitionAnimator) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDialogTransitionAnimatorProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1614$$Nest$mpanelInteractor(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (MediaProjectionMetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.mediaProjectionMetricsLoggerProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get());
                case 877:
                    return new QuickAccessWalletTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (KeyguardStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.keyguardStateControllerImplProvider.get(), (PackageManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.providePackageManagerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (QuickAccessWalletController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.quickAccessWalletControllerProvider.get());
                case 878:
                    return new BatterySaverTileGoogle((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 879:
                    return new OverlayToggleTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (OverlayManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideOverlayManagerProvider.get());
                case 880:
                    return new ReverseChargingTile((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (IThermalService) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideIThermalServiceProvider.get());
                case 881:
                    QSLogger r12 = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSLogger();
                    String[] stringArray2 = DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl).getStringArray(17236129);
                    Preconditions.checkNotNullFromProvides(stringArray2);
                    return new RotationLockTileGoogle((QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (QsEventLoggerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qsEventLoggerImplProvider.get(), (Looper) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgLooperProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (FalsingManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.falsingManagerProxyProvider.get(), (MetricsLogger) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMetricsLoggerProvider.get(), (StatusBarStateController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.statusBarStateControllerImplProvider.get(), (ActivityStarter) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.activityStarterImplProvider.get(), r12, (RotationLockController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.rotationLockControllerImplProvider.get(), (SensorPrivacyManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideSensorPrivacyManagerProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), stringArray2, (com.android.systemui.statusbar.policy.DevicePostureController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.devicePostureControllerImplProvider.get());
                case 882:
                    QSModuleGoogle_ProvideAutoTileManagerFactory.provideAutoTileManager(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (AutoAddTracker.Builder) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.builderProvider2.get(), (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBgHandlerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (HotspotController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.hotspotControllerImplProvider.get(), (DataSaverControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideDataSaverControllerProvider.get(), (ManagedProfileControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.managedProfileControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1589$$Nest$mnightDisplayListenerModuleBuilder(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (CastController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.castControllerImplProvider.get(), (BatteryController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBatteryControllerProvider.get(), (ReduceBrightColorsController) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.reduceBrightColorsControllerProvider.get(), (DeviceControlsControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.deviceControlsControllerImplProvider.get(), (WalletControllerImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.walletControllerImplProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1636$$Nest$msafetyController(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), ((Boolean) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.isReduceBrightColorsAvailableProvider.get()).booleanValue());
                    throw null;
                case 883:
                    return new AutoAddTracker.Builder((SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get(), (BroadcastDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.broadcastDispatcherProvider.get(), (QSHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSHostAdapterProvider.get(), (DumpManager) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.dumpManagerProvider.get(), (Handler) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideMainHandlerProvider.get(), (Executor) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideBackgroundExecutorProvider.get());
                case 884:
                    return new DeviceControlsControllerImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.context, (ControlsComponent) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.controlsComponentProvider.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (SecureSettings) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.secureSettingsImplProvider.get());
                case 885:
                    return new WalletControllerImpl((QuickAccessWalletClient) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideQuickAccessWalletClientProvider.get());
                case 886:
                    QSPipelineFlagsRepository qSPipelineFlagsRepository2 = (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get();
                    QSTileHost qSTileHost2 = (QSTileHost) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSTileHostProvider.get();
                    return new CurrentTilesInteractorImpl((TileSpecSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.tileSpecSettingsRepositoryProvider.get(), (InstalledTilesComponentRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.installedTilesComponentRepositoryImplProvider.get(), (UserRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.userRepositoryImplProvider.get(), (MinimumTilesResourceRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.minimumTilesResourceRepositoryProvider.get(), new CustomTileStatePersisterImpl(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.sysUIGoogleGlobalRootComponentImpl.context), DoubleCheck.lazy(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.newQSTileFactoryProvider), (QSFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSFactoryImplProvider.get(), (CustomTileAddedSharedPrefsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.customTileAddedSharedPrefsRepositoryProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$19) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider23.get(), (UserTracker) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.provideUserTrackerProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.mainDispatcherProvider.get(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get(), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1624$$Nest$mqSPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (QSPipelineFlagsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.qSPipelineFlagsRepositoryProvider.get());
                case 887:
                    return new TileSpecSettingsRepository(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl), DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1624$$Nest$mqSPipelineLogger(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl), (RetailModeSettingsRepository) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.retailModeSettingsRepositoryProvider.get(), (DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$22) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider27.get());
                case 888:
                    return QSPipelineModule_Companion_ProvideQSTileListLogBufferFactory.provideQSTileListLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 889:
                    return QSAutoAddModule_Companion_ProvideQSAutoAddLogBufferFactory.provideQSAutoAddLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 890:
                    return QSPipelineModule_Companion_ProvidesQSRestoreLogBufferFactory.providesQSRestoreLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 891:
                    return new RetailModeSettingsRepository(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.globalSettingsImpl(), (CoroutineDispatcher) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgDispatcherProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.applicationScopeProvider.get());
                case 892:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$22(this);
                case 893:
                    return new DefaultTilesQSHostRepository(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                case 894:
                    return new InstalledTilesComponentRepositoryImpl((Context) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.provideApplicationContextProvider.get(), (CoroutineScope) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.bgApplicationScopeProvider.get(), (PackageChangeRepositoryImpl) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.packageChangeRepositoryImplProvider.get());
                case 895:
                    return new PackageChangeRepositoryImpl((DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$23) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.factoryProvider28.get());
                case 896:
                    return new DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$23(this);
                case 897:
                    return new PackageUpdateLogger((LogBuffer) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.providePackageChangeRepoLogBufferProvider.get());
                case 898:
                    return LogModule_ProvidePackageChangeRepoLogBufferFactory.providePackageChangeRepoLogBuffer((LogBufferFactory) daggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.logBufferFactoryProvider.get());
                case 899:
                    return new MinimumTilesResourceRepository(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl));
                default:
                    throw new AssertionError(i);
            }
        }

        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r8v32, resolved type: java.lang.Object} */
        /* JADX DEBUG: Multi-variable search result rejected for TypeSearchVarInfo{r7v44, resolved type: com.android.systemui.screenshot.ScreenshotKeyguardController} */
        /* JADX WARNING: type inference failed for: r16v3, types: [java.lang.Object, com.android.systemui.biometrics.UdfpsUtils] */
        /* JADX WARNING: type inference failed for: r3v112, types: [java.lang.Object, com.android.systemui.util.concurrency.ThreadFactoryImpl] */
        /* JADX WARNING: type inference failed for: r1v271, types: [com.android.systemui.usb.UsbAudioWarningDialogMessage, java.lang.Object] */
        /* JADX WARNING: type inference failed for: r1v272, types: [com.android.systemui.usb.UsbAudioWarningDialogMessage, java.lang.Object] */
        /* JADX WARNING: type inference failed for: r4v66, types: [java.lang.Object, com.android.settingslib.users.CreateUserDialogController] */
        /* JADX WARNING: Multi-variable type inference failed */
        /* Code decompiled incorrectly, please refer to instructions dump. */
        public java.lang.Object get9() {
            /*
                r21 = this;
                r0 = r21
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r1 = r0.sysUIGoogleGlobalRootComponentImpl
                java.lang.Object r2 = r0.wMComponentImpl
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl r2 = (com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl) r2
                int r3 = r0.id
                switch(r3) {
                    case 900: goto L_0x0cf4;
                    case 901: goto L_0x0ce7;
                    case 902: goto L_0x0ca4;
                    case 903: goto L_0x0c96;
                    case 904: goto L_0x0c5e;
                    case 905: goto L_0x0c39;
                    case 906: goto L_0x0c14;
                    case 907: goto L_0x0c07;
                    case 908: goto L_0x0bf6;
                    case 909: goto L_0x0bb9;
                    case 910: goto L_0x0ba3;
                    case 911: goto L_0x0b8d;
                    case 912: goto L_0x0b4c;
                    case 913: goto L_0x0b46;
                    case 914: goto L_0x0b20;
                    case 915: goto L_0x0ab2;
                    case 916: goto L_0x0a69;
                    case 917: goto L_0x0a5c;
                    case 918: goto L_0x0a4f;
                    case 919: goto L_0x0a42;
                    case 920: goto L_0x09c6;
                    case 921: goto L_0x09b2;
                    case 922: goto L_0x0985;
                    case 923: goto L_0x0978;
                    case 924: goto L_0x0960;
                    case 925: goto L_0x0942;
                    case 926: goto L_0x090d;
                    case 927: goto L_0x0907;
                    case 928: goto L_0x0901;
                    case 929: goto L_0x08f3;
                    case 930: goto L_0x08e6;
                    case 931: goto L_0x08d8;
                    case 932: goto L_0x08ba;
                    case 933: goto L_0x08ac;
                    case 934: goto L_0x0898;
                    case 935: goto L_0x088a;
                    case 936: goto L_0x0885;
                    case 937: goto L_0x0873;
                    case 938: goto L_0x084d;
                    case 939: goto L_0x082f;
                    case 940: goto L_0x0819;
                    case 941: goto L_0x07ae;
                    case 942: goto L_0x07a0;
                    case 943: goto L_0x0793;
                    case 944: goto L_0x0771;
                    case 945: goto L_0x0753;
                    case 946: goto L_0x073d;
                    case 947: goto L_0x0727;
                    case 948: goto L_0x06f3;
                    case 949: goto L_0x06d5;
                    case 950: goto L_0x06bf;
                    case 951: goto L_0x068f;
                    case 952: goto L_0x064f;
                    case 953: goto L_0x0649;
                    case 954: goto L_0x0633;
                    case 955: goto L_0x060d;
                    case 956: goto L_0x05ef;
                    case 957: goto L_0x05bc;
                    case 958: goto L_0x0579;
                    case 959: goto L_0x056a;
                    case 960: goto L_0x054c;
                    case 961: goto L_0x0526;
                    case 962: goto L_0x0518;
                    case 963: goto L_0x0503;
                    case 964: goto L_0x04d9;
                    case 965: goto L_0x04be;
                    case 966: goto L_0x04a0;
                    case 967: goto L_0x049a;
                    case 968: goto L_0x047c;
                    case 969: goto L_0x0456;
                    case 970: goto L_0x0430;
                    case 971: goto L_0x03f4;
                    case 972: goto L_0x03c0;
                    case 973: goto L_0x03b0;
                    case 974: goto L_0x038c;
                    case 975: goto L_0x037e;
                    case 976: goto L_0x0370;
                    case 977: goto L_0x035a;
                    case 978: goto L_0x02e6;
                    case 979: goto L_0x02cc;
                    case 980: goto L_0x02be;
                    case 981: goto L_0x02a0;
                    case 982: goto L_0x0272;
                    case 983: goto L_0x026c;
                    case 984: goto L_0x022f;
                    case 985: goto L_0x0221;
                    case 986: goto L_0x0213;
                    case 987: goto L_0x0203;
                    case 988: goto L_0x01f6;
                    case 989: goto L_0x01e8;
                    case 990: goto L_0x01a4;
                    case 991: goto L_0x0177;
                    case 992: goto L_0x0169;
                    case 993: goto L_0x015b;
                    case 994: goto L_0x010e;
                    case 995: goto L_0x0108;
                    case 996: goto L_0x00b9;
                    case 997: goto L_0x006a;
                    case 998: goto L_0x0029;
                    case 999: goto L_0x0013;
                    default: goto L_0x000d;
                }
            L_0x000d:
                java.lang.AssertionError r0 = new java.lang.AssertionError
                r0.<init>(r3)
                throw r0
            L_0x0013:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r0 = r1.provideApplicationContextProvider
                java.lang.Object r0 = r0.get()
                android.content.Context r0 = (android.content.Context) r0
                javax.inject.Provider r1 = r2.provideDisplayTrackerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.settings.DisplayTracker r1 = (com.android.systemui.settings.DisplayTracker) r1
                com.android.systemui.screenshot.appclips.AppClipsCrossProcessHelper r2 = new com.android.systemui.screenshot.appclips.AppClipsCrossProcessHelper
                r2.<init>(r0, r1)
                return r2
            L_0x0029:
                javax.inject.Provider r0 = r2.appClipsCrossProcessHelperProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.screenshot.ImageExporter r3 = r2.imageExporter()
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r4 = r2.sysUIGoogleGlobalRootComponentImpl
                javax.inject.Provider r4 = r4.provideMainExecutorProvider
                java.lang.Object r4 = r4.get()
                java.util.concurrent.Executor r4 = (java.util.concurrent.Executor) r4
                javax.inject.Provider r5 = r2.provideBackgroundExecutorProvider
                java.lang.Object r5 = r5.get()
                java.util.concurrent.Executor r5 = (java.util.concurrent.Executor) r5
                com.android.systemui.screenshot.appclips.AppClipsViewModel$Factory r6 = new com.android.systemui.screenshot.appclips.AppClipsViewModel$Factory
                com.android.systemui.screenshot.appclips.AppClipsCrossProcessHelper r0 = (com.android.systemui.screenshot.appclips.AppClipsCrossProcessHelper) r0
                r6.<init>(r0, r3, r4, r5)
                javax.inject.Provider r0 = r1.providePackageManagerProvider
                java.lang.Object r0 = r0.get()
                android.content.pm.PackageManager r0 = (android.content.pm.PackageManager) r0
                dagger.internal.DelegateFactory r2 = r2.provideUserTrackerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.settings.UserTracker r2 = (com.android.systemui.settings.UserTracker) r2
                javax.inject.Provider r1 = r1.provideUiEventLoggerProvider
                java.lang.Object r1 = r1.get()
                com.android.internal.logging.UiEventLogger r1 = (com.android.internal.logging.UiEventLogger) r1
                com.android.systemui.screenshot.appclips.AppClipsActivity r3 = new com.android.systemui.screenshot.appclips.AppClipsActivity
                r3.<init>(r6, r0, r2, r1)
                return r3
            L_0x006a:
                com.android.systemui.screenshot.appclips.AppClipsTrampolineActivity r0 = new com.android.systemui.screenshot.appclips.AppClipsTrampolineActivity
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideApplicationContextProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                android.content.Context r8 = (android.content.Context) r8
                javax.inject.Provider r3 = r2.noteTaskControllerProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                com.android.systemui.notetask.NoteTaskController r9 = (com.android.systemui.notetask.NoteTaskController) r9
                javax.inject.Provider r3 = r1.providePackageManagerProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                android.content.pm.PackageManager r10 = (android.content.pm.PackageManager) r10
                javax.inject.Provider r3 = r1.provideUiEventLoggerProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.internal.logging.UiEventLogger r11 = (com.android.internal.logging.UiEventLogger) r11
                javax.inject.Provider r3 = r2.broadcastSenderProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.broadcast.BroadcastSender r12 = (com.android.systemui.broadcast.BroadcastSender) r12
                javax.inject.Provider r2 = r2.provideBackgroundExecutorProvider
                java.lang.Object r2 = r2.get()
                r13 = r2
                java.util.concurrent.Executor r13 = (java.util.concurrent.Executor) r13
                javax.inject.Provider r2 = r1.provideMainExecutorProvider
                java.lang.Object r2 = r2.get()
                r14 = r2
                java.util.concurrent.Executor r14 = (java.util.concurrent.Executor) r14
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideMainHandlerProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                android.os.Handler r15 = (android.os.Handler) r15
                r7 = r0
                r7.<init>((android.content.Context) r8, (com.android.systemui.notetask.NoteTaskController) r9, (android.content.pm.PackageManager) r10, (com.android.internal.logging.UiEventLogger) r11, (com.android.systemui.broadcast.BroadcastSender) r12, (java.util.concurrent.Executor) r13, (java.util.concurrent.Executor) r14, (android.os.Handler) r15)
                return r0
            L_0x00b9:
                com.android.systemui.screenshot.ActionIntentExecutor r0 = new com.android.systemui.screenshot.ActionIntentExecutor
                android.content.Context r3 = r1.context
                javax.inject.Provider r4 = r2.provideActivityManagerWrapperProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.shared.system.ActivityManagerWrapper r4 = (com.android.systemui.shared.system.ActivityManagerWrapper) r4
                javax.inject.Provider r5 = r1.applicationScopeProvider
                java.lang.Object r5 = r5.get()
                kotlinx.coroutines.CoroutineScope r5 = (kotlinx.coroutines.CoroutineScope) r5
                javax.inject.Provider r1 = r1.mainDispatcherProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                kotlinx.coroutines.CoroutineDispatcher r6 = (kotlinx.coroutines.CoroutineDispatcher) r6
                javax.inject.Provider r1 = r2.provideDisplayTrackerProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.settings.DisplayTracker r7 = (com.android.systemui.settings.DisplayTracker) r7
                com.android.systemui.screenshot.ScreenshotKeyguardController r8 = new com.android.systemui.screenshot.ScreenshotKeyguardController
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r1 = r2.sysUIGoogleGlobalRootComponentImpl
                android.content.Context r10 = r1.context
                r8.<init>()
                com.android.internal.infra.ServiceConnector$Impl r9 = new com.android.internal.infra.ServiceConnector$Impl
                android.content.Intent r11 = new android.content.Intent
                java.lang.Class<com.android.systemui.screenshot.ScreenshotProxyService> r1 = com.android.systemui.screenshot.ScreenshotProxyService.class
                r11.<init>(r10, r1)
                int r13 = r10.getUserId()
                com.android.systemui.screenshot.ScreenshotKeyguardController$proxyConnector$1 r14 = com.android.systemui.screenshot.ScreenshotKeyguardController$proxyConnector$1.INSTANCE
                r12 = 1073741857(0x40000021, float:2.0000079)
                r9.<init>(r10, r11, r12, r13, r14)
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r1.<init>(r2, r3, r4, r5, r6, r7)
                return r0
            L_0x0108:
                com.android.systemui.screenshot.LongScreenshotData r0 = new com.android.systemui.screenshot.LongScreenshotData
                r0.<init>()
                return r0
            L_0x010e:
                com.android.systemui.screenshot.LongScreenshotActivity r0 = new com.android.systemui.screenshot.LongScreenshotActivity
                javax.inject.Provider r3 = r1.provideUiEventLoggerProvider
                java.lang.Object r3 = r3.get()
                com.android.internal.logging.UiEventLogger r3 = (com.android.internal.logging.UiEventLogger) r3
                com.android.systemui.screenshot.ImageExporter r4 = r2.imageExporter()
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                java.util.concurrent.Executor r5 = (java.util.concurrent.Executor) r5
                javax.inject.Provider r1 = r2.provideBackgroundExecutorProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                java.util.concurrent.Executor r6 = (java.util.concurrent.Executor) r6
                javax.inject.Provider r1 = r2.longScreenshotDataProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.screenshot.LongScreenshotData r7 = (com.android.systemui.screenshot.LongScreenshotData) r7
                javax.inject.Provider r1 = r2.actionIntentExecutorProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.screenshot.ActionIntentExecutor r8 = (com.android.systemui.screenshot.ActionIntentExecutor) r8
                dagger.internal.DelegateFactory r1 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.flags.FeatureFlags r1 = (com.android.systemui.flags.FeatureFlags) r1
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.settings.UserTracker r1 = (com.android.systemui.settings.UserTracker) r1
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r1.<init>(r2, r3, r4, r5, r6, r7)
                return r0
            L_0x015b:
                com.android.systemui.people.data.repository.PeopleWidgetRepositoryImpl r0 = new com.android.systemui.people.data.repository.PeopleWidgetRepositoryImpl
                javax.inject.Provider r1 = r2.peopleSpaceWidgetManagerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.people.widget.PeopleSpaceWidgetManager r1 = (com.android.systemui.people.widget.PeopleSpaceWidgetManager) r1
                r0.<init>(r1)
                return r0
            L_0x0169:
                com.android.systemui.people.data.repository.PeopleTileRepositoryImpl r0 = new com.android.systemui.people.data.repository.PeopleTileRepositoryImpl
                javax.inject.Provider r1 = r2.peopleSpaceWidgetManagerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.people.widget.PeopleSpaceWidgetManager r1 = (com.android.systemui.people.widget.PeopleSpaceWidgetManager) r1
                r0.<init>(r1)
                return r0
            L_0x0177:
                com.android.systemui.people.PeopleSpaceActivity r0 = new com.android.systemui.people.PeopleSpaceActivity
                com.android.systemui.people.ui.viewmodel.PeopleViewModel$Factory r1 = new com.android.systemui.people.ui.viewmodel.PeopleViewModel$Factory
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r3 = r2.sysUIGoogleGlobalRootComponentImpl
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r3.provideApplicationContextProvider
                java.lang.Object r3 = r3.get()
                android.content.Context r3 = (android.content.Context) r3
                javax.inject.Provider r4 = r2.peopleTileRepositoryImplProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.people.data.repository.PeopleTileRepository r4 = (com.android.systemui.people.data.repository.PeopleTileRepository) r4
                javax.inject.Provider r5 = r2.peopleWidgetRepositoryImplProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.people.data.repository.PeopleWidgetRepository r5 = (com.android.systemui.people.data.repository.PeopleWidgetRepository) r5
                r1.<init>(r3, r4, r5)
                dagger.internal.DelegateFactory r2 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.flags.FeatureFlags r2 = (com.android.systemui.flags.FeatureFlags) r2
                r0.<init>(r1, r2)
                return r0
            L_0x01a4:
                com.android.systemui.user.CreateUserActivity r0 = new com.android.systemui.user.CreateUserActivity
                com.android.systemui.user.UserCreator r3 = new com.android.systemui.user.UserCreator
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r4 = r2.sysUIGoogleGlobalRootComponentImpl
                android.content.Context r5 = r4.context
                javax.inject.Provider r6 = r4.provideUserManagerProvider
                java.lang.Object r6 = r6.get()
                android.os.UserManager r6 = (android.os.UserManager) r6
                javax.inject.Provider r4 = r4.provideMainExecutorProvider
                java.lang.Object r4 = r4.get()
                java.util.concurrent.Executor r4 = (java.util.concurrent.Executor) r4
                javax.inject.Provider r7 = r2.provideBackgroundExecutorProvider
                java.lang.Object r7 = r7.get()
                java.util.concurrent.Executor r7 = (java.util.concurrent.Executor) r7
                r3.<init>(r5, r6, r4, r7)
                com.android.settingslib.users.CreateUserDialogController r4 = new com.android.settingslib.users.CreateUserDialogController
                r4.<init>()
                javax.inject.Provider r5 = r1.provideIActivityManagerProvider
                java.lang.Object r5 = r5.get()
                android.app.IActivityManager r5 = (android.app.IActivityManager) r5
                dagger.internal.DelegateFactory r2 = r2.activityStarterImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.plugins.ActivityStarter r2 = (com.android.systemui.plugins.ActivityStarter) r2
                javax.inject.Provider r1 = r1.provideUiEventLoggerProvider
                java.lang.Object r1 = r1.get()
                com.android.internal.logging.UiEventLogger r1 = (com.android.internal.logging.UiEventLogger) r1
                r0.<init>(r3, r4, r5, r2)
                return r0
            L_0x01e8:
                javax.inject.Provider r0 = r2.provideDeviceProvisionedControllerProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.statusbar.policy.DeviceProvisionedController r0 = (com.android.systemui.statusbar.policy.DeviceProvisionedController) r0
                com.android.systemui.usb.UsbAccessoryUriActivity r1 = new com.android.systemui.usb.UsbAccessoryUriActivity
                r1.<init>(r0)
                return r1
            L_0x01f6:
                com.android.systemui.usb.UsbConfirmActivity r0 = new com.android.systemui.usb.UsbConfirmActivity
                com.android.systemui.usb.UsbAudioWarningDialogMessage r1 = new com.android.systemui.usb.UsbAudioWarningDialogMessage
                r1.<init>()
                r0.<init>()
                r0.mUsbConfirmMessageHandler = r1
                return r0
            L_0x0203:
                com.android.systemui.usb.UsbPermissionActivity r0 = new com.android.systemui.usb.UsbPermissionActivity
                com.android.systemui.usb.UsbAudioWarningDialogMessage r1 = new com.android.systemui.usb.UsbAudioWarningDialogMessage
                r1.<init>()
                r0.<init>()
                r2 = 0
                r0.mPermissionGranted = r2
                r0.mUsbPermissionMessageHandler = r1
                return r0
            L_0x0213:
                com.android.systemui.usb.UsbDebuggingSecondaryUserActivity r0 = new com.android.systemui.usb.UsbDebuggingSecondaryUserActivity
                javax.inject.Provider r1 = r2.broadcastDispatcherProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.broadcast.BroadcastDispatcher r1 = (com.android.systemui.broadcast.BroadcastDispatcher) r1
                r0.<init>(r1)
                return r0
            L_0x0221:
                com.android.systemui.usb.UsbDebuggingActivity r0 = new com.android.systemui.usb.UsbDebuggingActivity
                javax.inject.Provider r1 = r2.broadcastDispatcherProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.broadcast.BroadcastDispatcher r1 = (com.android.systemui.broadcast.BroadcastDispatcher) r1
                r0.<init>(r1)
                return r0
            L_0x022f:
                com.android.systemui.contrast.ContrastDialogActivity r0 = new com.android.systemui.contrast.ContrastDialogActivity
                r2.getClass()
                com.android.systemui.contrast.ContrastDialogDelegate r1 = new com.android.systemui.contrast.ContrastDialogDelegate
                dagger.internal.DelegateFactory r3 = r2.factoryProvider6
                java.lang.Object r3 = r3.get()
                r4 = r3
                com.android.systemui.statusbar.phone.SystemUIDialog$Factory r4 = (com.android.systemui.statusbar.phone.SystemUIDialog.Factory) r4
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl r3 = r2.sysUIGoogleGlobalRootComponentImpl
                javax.inject.Provider r5 = r3.provideMainExecutorProvider
                java.lang.Object r5 = r5.get()
                java.util.concurrent.Executor r5 = (java.util.concurrent.Executor) r5
                javax.inject.Provider r3 = r3.provideUiModeManagerProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                android.app.UiModeManager r6 = (android.app.UiModeManager) r6
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.settings.UserTracker r7 = (com.android.systemui.settings.UserTracker) r7
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r2 = r2.secureSettingsImplProvider
                java.lang.Object r2 = r2.get()
                r8 = r2
                com.android.systemui.util.settings.SecureSettings r8 = (com.android.systemui.util.settings.SecureSettings) r8
                r3 = r1
                r3.<init>(r4, r5, r6, r7, r8)
                r0.<init>(r1)
                return r0
            L_0x026c:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$25 r1 = new com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$25
                r1.<init>(r0)
                return r1
            L_0x0272:
                com.android.systemui.settings.brightness.BrightnessDialog r0 = new com.android.systemui.settings.brightness.BrightnessDialog
                com.android.systemui.settings.brightness.BrightnessSliderController$Factory r3 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1457$$Nest$mbrightnessSliderControllerFactory(r2)
                javax.inject.Provider r4 = r2.factoryProvider30
                java.lang.Object r4 = r4.get()
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$25 r4 = (com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$25) r4
                javax.inject.Provider r1 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.util.concurrency.DelayableExecutor r5 = (com.android.systemui.util.concurrency.DelayableExecutor) r5
                javax.inject.Provider r1 = r2.accessibilityManagerWrapperProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.statusbar.policy.AccessibilityManagerWrapper r6 = (com.android.systemui.statusbar.policy.AccessibilityManagerWrapper) r6
                dagger.internal.DelegateFactory r1 = r2.shadeInteractorImplProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.shade.domain.interactor.ShadeInteractor r7 = (com.android.systemui.shade.domain.interactor.ShadeInteractor) r7
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7)
                return r0
            L_0x02a0:
                com.android.systemui.keyguard.WorkLockActivity r0 = new com.android.systemui.keyguard.WorkLockActivity
                javax.inject.Provider r2 = r2.broadcastDispatcherProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.broadcast.BroadcastDispatcher r2 = (com.android.systemui.broadcast.BroadcastDispatcher) r2
                javax.inject.Provider r3 = r1.provideUserManagerProvider
                java.lang.Object r3 = r3.get()
                android.os.UserManager r3 = (android.os.UserManager) r3
                javax.inject.Provider r1 = r1.providePackageManagerProvider
                java.lang.Object r1 = r1.get()
                android.content.pm.PackageManager r1 = (android.content.pm.PackageManager) r1
                r0.<init>(r2, r3, r1)
                return r0
            L_0x02be:
                javax.inject.Provider r0 = r1.provideMetricsLoggerProvider
                java.lang.Object r0 = r0.get()
                com.android.internal.logging.MetricsLogger r0 = (com.android.internal.logging.MetricsLogger) r0
                com.android.systemui.ForegroundServicesDialog r1 = new com.android.systemui.ForegroundServicesDialog
                r1.<init>(r0)
                return r1
            L_0x02cc:
                javax.inject.Provider r0 = r2.provideDemoModeControllerProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.demomode.DemoModeController r0 = (com.android.systemui.demomode.DemoModeController) r0
                dagger.internal.DelegateFactory r1 = r2.tunerServiceImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.tuner.TunerService r1 = (com.android.systemui.tuner.TunerService) r1
                com.android.systemui.util.settings.GlobalSettingsImpl r2 = r2.globalSettingsImpl()
                com.android.systemui.tuner.TunerActivity r3 = new com.android.systemui.tuner.TunerActivity
                r3.<init>(r0, r1, r2)
                return r3
            L_0x02e6:
                com.android.systemui.wallet.ui.WalletActivity r0 = new com.android.systemui.wallet.ui.WalletActivity
                dagger.internal.DelegateFactory r3 = r2.keyguardStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                com.android.systemui.statusbar.policy.KeyguardStateController r5 = (com.android.systemui.statusbar.policy.KeyguardStateController) r5
                javax.inject.Provider r3 = r2.keyguardDismissUtilProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.systemui.statusbar.phone.KeyguardDismissUtil r6 = (com.android.systemui.statusbar.phone.KeyguardDismissUtil) r6
                dagger.internal.DelegateFactory r3 = r2.activityStarterImplProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.plugins.ActivityStarter r7 = (com.android.systemui.plugins.ActivityStarter) r7
                javax.inject.Provider r3 = r2.provideBackgroundExecutorProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                java.util.concurrent.Executor r8 = (java.util.concurrent.Executor) r8
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideMainHandlerProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                android.os.Handler r9 = (android.os.Handler) r9
                dagger.internal.DelegateFactory r3 = r2.falsingManagerProxyProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                com.android.systemui.plugins.FalsingManager r10 = (com.android.systemui.plugins.FalsingManager) r10
                javax.inject.Provider r3 = r2.providesFalsingCollectorLegacyProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.classifier.FalsingCollector r11 = (com.android.systemui.classifier.FalsingCollector) r11
                dagger.internal.DelegateFactory r3 = r2.provideUserTrackerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.settings.UserTracker r12 = (com.android.systemui.settings.UserTracker) r12
                dagger.internal.DelegateFactory r3 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.keyguard.KeyguardUpdateMonitor r13 = (com.android.keyguard.KeyguardUpdateMonitor) r13
                dagger.internal.DelegateFactory r3 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r14 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r14
                javax.inject.Provider r1 = r1.provideUiEventLoggerProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                com.android.internal.logging.UiEventLogger r15 = (com.android.internal.logging.UiEventLogger) r15
                javax.inject.Provider r1 = r2.systemUIDeviceEntryFaceAuthInteractorProvider
                java.lang.Object r1 = r1.get()
                r16 = r1
                com.android.systemui.deviceentry.domain.interactor.DeviceEntryFaceAuthInteractor r16 = (com.android.systemui.deviceentry.domain.interactor.DeviceEntryFaceAuthInteractor) r16
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16)
                return r0
            L_0x035a:
                com.android.systemui.notetask.shortcut.CreateNoteTaskShortcutActivity r0 = new com.android.systemui.notetask.shortcut.CreateNoteTaskShortcutActivity
                javax.inject.Provider r2 = r1.provideRoleManagerProvider
                java.lang.Object r2 = r2.get()
                android.app.role.RoleManager r2 = (android.app.role.RoleManager) r2
                javax.inject.Provider r1 = r1.provideShortcutManagerProvider
                java.lang.Object r1 = r1.get()
                android.content.pm.ShortcutManager r1 = (android.content.pm.ShortcutManager) r1
                r0.<init>(r2, r1)
                return r0
            L_0x0370:
                com.android.systemui.notetask.LaunchNotesRoleSettingsTrampolineActivity r0 = new com.android.systemui.notetask.LaunchNotesRoleSettingsTrampolineActivity
                javax.inject.Provider r1 = r2.noteTaskControllerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.notetask.NoteTaskController r1 = (com.android.systemui.notetask.NoteTaskController) r1
                r0.<init>(r1)
                return r0
            L_0x037e:
                com.android.systemui.notetask.shortcut.LaunchNoteTaskActivity r0 = new com.android.systemui.notetask.shortcut.LaunchNoteTaskActivity
                javax.inject.Provider r1 = r2.noteTaskControllerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.notetask.NoteTaskController r1 = (com.android.systemui.notetask.NoteTaskController) r1
                r0.<init>(r1)
                return r0
            L_0x038c:
                com.android.systemui.mediaprojection.permission.MediaProjectionPermissionActivity r0 = new com.android.systemui.mediaprojection.permission.MediaProjectionPermissionActivity
                dagger.internal.DelegateFactory r3 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.flags.FeatureFlags r3 = (com.android.systemui.flags.FeatureFlags) r3
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r4 = r2.screenCaptureDevicePolicyResolverProvider
                dagger.Lazy r4 = dagger.internal.DoubleCheck.lazy(r4)
                javax.inject.Provider r1 = r1.provideStatusBarManagerProvider
                java.lang.Object r1 = r1.get()
                android.app.StatusBarManager r1 = (android.app.StatusBarManager) r1
                javax.inject.Provider r2 = r2.mediaProjectionMetricsLoggerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.mediaprojection.MediaProjectionMetricsLogger r2 = (com.android.systemui.mediaprojection.MediaProjectionMetricsLogger) r2
                r0.<init>(r3, r4, r1, r2)
                return r0
            L_0x03b0:
                com.android.systemui.mediaprojection.appselector.MediaProjectionAppSelectorActivity r0 = new com.android.systemui.mediaprojection.appselector.MediaProjectionAppSelectorActivity
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory r3 = new com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$DozeComponentFactory
                r3.<init>(r1, r2)
                com.android.systemui.util.AsyncActivityLauncher r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1449$$Nest$masyncActivityLauncher(r2)
                r2 = 0
                r0.<init>(r3, r1, r2)
                return r0
            L_0x03c0:
                com.android.systemui.controls.settings.ControlsSettingsDialogManagerImpl r0 = new com.android.systemui.controls.settings.ControlsSettingsDialogManagerImpl
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r1 = r2.secureSettingsImplProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.util.settings.SecureSettings r5 = (com.android.systemui.util.settings.SecureSettings) r5
                javax.inject.Provider r1 = r2.userFileManagerImplProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.settings.UserFileManager r6 = (com.android.systemui.settings.UserFileManager) r6
                javax.inject.Provider r1 = r2.controlsSettingsRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.controls.settings.ControlsSettingsRepository r7 = (com.android.systemui.controls.settings.ControlsSettingsRepository) r7
                dagger.internal.DelegateFactory r1 = r2.provideUserTrackerProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.settings.UserTracker r8 = (com.android.systemui.settings.UserTracker) r8
                dagger.internal.DelegateFactory r1 = r2.activityStarterImplProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.plugins.ActivityStarter r9 = (com.android.systemui.plugins.ActivityStarter) r9
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9)
                return r0
            L_0x03f4:
                com.android.systemui.controls.ui.ControlsActivity r0 = new com.android.systemui.controls.ui.ControlsActivity
                javax.inject.Provider r3 = r2.controlsUiControllerImplProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.controls.ui.ControlsUiControllerImpl r11 = (com.android.systemui.controls.ui.ControlsUiControllerImpl) r11
                javax.inject.Provider r3 = r2.broadcastDispatcherProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.broadcast.BroadcastDispatcher r12 = (com.android.systemui.broadcast.BroadcastDispatcher) r12
                javax.inject.Provider r1 = r1.provideIDreamManagerProvider
                java.lang.Object r1 = r1.get()
                r13 = r1
                android.service.dreams.IDreamManager r13 = (android.service.dreams.IDreamManager) r13
                dagger.internal.DelegateFactory r1 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.flags.FeatureFlags r1 = (com.android.systemui.flags.FeatureFlags) r1
                javax.inject.Provider r1 = r2.controlsSettingsDialogManagerImplProvider
                java.lang.Object r1 = r1.get()
                r14 = r1
                com.android.systemui.controls.settings.ControlsSettingsDialogManagerImpl r14 = (com.android.systemui.controls.settings.ControlsSettingsDialogManagerImpl) r14
                dagger.internal.DelegateFactory r1 = r2.keyguardStateControllerImplProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                com.android.systemui.statusbar.policy.KeyguardStateController r15 = (com.android.systemui.statusbar.policy.KeyguardStateController) r15
                r10 = r0
                r10.<init>(r11, r12, r13, r14, r15)
                return r0
            L_0x0430:
                com.android.systemui.controls.management.ControlsRequestDialog r0 = new com.android.systemui.controls.management.ControlsRequestDialog
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                java.util.concurrent.Executor r1 = (java.util.concurrent.Executor) r1
                dagger.internal.DelegateFactory r3 = r2.controlsControllerImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.controls.controller.ControlsControllerImpl r3 = (com.android.systemui.controls.controller.ControlsControllerImpl) r3
                dagger.internal.DelegateFactory r4 = r2.provideUserTrackerProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.settings.UserTracker r4 = (com.android.systemui.settings.UserTracker) r4
                dagger.internal.DelegateFactory r2 = r2.controlsListingControllerImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.controls.management.ControlsListingController r2 = (com.android.systemui.controls.management.ControlsListingController) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x0456:
                com.android.systemui.controls.management.ControlsEditingActivity r0 = new com.android.systemui.controls.management.ControlsEditingActivity
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                java.util.concurrent.Executor r1 = (java.util.concurrent.Executor) r1
                dagger.internal.DelegateFactory r3 = r2.controlsControllerImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.controls.controller.ControlsControllerImpl r3 = (com.android.systemui.controls.controller.ControlsControllerImpl) r3
                dagger.internal.DelegateFactory r4 = r2.provideUserTrackerProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.settings.UserTracker r4 = (com.android.systemui.settings.UserTracker) r4
                javax.inject.Provider r2 = r2.customIconCacheProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.controls.CustomIconCache r2 = (com.android.systemui.controls.CustomIconCache) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x047c:
                com.android.systemui.controls.management.ControlsFavoritingActivity r0 = new com.android.systemui.controls.management.ControlsFavoritingActivity
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                java.util.concurrent.Executor r1 = (java.util.concurrent.Executor) r1
                dagger.internal.DelegateFactory r3 = r2.controlsControllerImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.controls.controller.ControlsControllerImpl r3 = (com.android.systemui.controls.controller.ControlsControllerImpl) r3
                dagger.internal.DelegateFactory r2 = r2.provideUserTrackerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.settings.UserTracker r2 = (com.android.systemui.settings.UserTracker) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x049a:
                com.android.systemui.util.ActivityTaskManagerProxy r0 = new com.android.systemui.util.ActivityTaskManagerProxy
                r0.<init>()
                return r0
            L_0x04a0:
                com.android.systemui.util.sensors.ThresholdSensorImpl r0 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1620$$Nest$mprimaryProxSensorThresholdSensor(r2)
                com.android.systemui.util.sensors.ThresholdSensorImpl r2 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1638$$Nest$msecondaryProxSensorThresholdSensor(r2)
                javax.inject.Provider r3 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.util.concurrency.DelayableExecutor r3 = (com.android.systemui.util.concurrency.DelayableExecutor) r3
                javax.inject.Provider r1 = r1.provideExecutionProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.util.concurrency.ExecutionImpl r1 = (com.android.systemui.util.concurrency.ExecutionImpl) r1
                com.android.systemui.util.sensors.ProximitySensorImpl r4 = new com.android.systemui.util.sensors.ProximitySensorImpl
                r4.<init>(r0, r2, r3, r1)
                return r4
            L_0x04be:
                com.android.systemui.util.sensors.AsyncSensorManager r0 = new com.android.systemui.util.sensors.AsyncSensorManager
                javax.inject.Provider r2 = r1.providesSensorManagerProvider
                java.lang.Object r2 = r2.get()
                android.hardware.SensorManager r2 = (android.hardware.SensorManager) r2
                com.android.systemui.util.concurrency.ThreadFactoryImpl r3 = new com.android.systemui.util.concurrency.ThreadFactoryImpl
                r3.<init>()
                javax.inject.Provider r1 = r1.providesPluginManagerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.plugins.PluginManager r1 = (com.android.systemui.plugins.PluginManager) r1
                r0.<init>(r2, r3, r1)
                return r0
            L_0x04d9:
                com.android.systemui.util.sensors.ThresholdSensor[] r5 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1621$$Nest$mprimaryProxSensorThresholdSensorArray(r2)
                com.android.systemui.util.sensors.ThresholdSensor[] r6 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1639$$Nest$msecondaryProxSensorThresholdSensorArray(r2)
                javax.inject.Provider r0 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r0 = r0.get()
                r7 = r0
                com.android.systemui.util.concurrency.DelayableExecutor r7 = (com.android.systemui.util.concurrency.DelayableExecutor) r7
                javax.inject.Provider r0 = r1.provideExecutionProvider
                java.lang.Object r0 = r0.get()
                r8 = r0
                com.android.systemui.util.concurrency.ExecutionImpl r8 = (com.android.systemui.util.concurrency.ExecutionImpl) r8
                javax.inject.Provider r0 = r2.devicePostureControllerImplProvider
                java.lang.Object r0 = r0.get()
                r9 = r0
                com.android.systemui.statusbar.policy.DevicePostureController r9 = (com.android.systemui.statusbar.policy.DevicePostureController) r9
                com.android.systemui.util.sensors.PostureDependentProximitySensor r0 = new com.android.systemui.util.sensors.PostureDependentProximitySensor
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9)
                return r0
            L_0x0503:
                android.content.res.Resources r0 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(r1)
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r1 = r2.postureDependentProximitySensorProvider
                dagger.Lazy r1 = dagger.internal.DoubleCheck.lazy(r1)
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r2 = r2.proximitySensorImplProvider
                dagger.Lazy r2 = dagger.internal.DoubleCheck.lazy(r2)
                com.android.systemui.util.sensors.ProximitySensor r0 = com.android.systemui.util.sensors.SensorModule_ProvideProximitySensorFactory.provideProximitySensor(r0, r1, r2)
                return r0
            L_0x0518:
                com.google.android.systemui.dreamliner.DockAlignmentController r0 = new com.google.android.systemui.dreamliner.DockAlignmentController
                javax.inject.Provider r1 = r2.provideWirelessChargerProvider
                java.lang.Object r1 = r1.get()
                java.util.Optional r1 = (java.util.Optional) r1
                r0.<init>(r1)
                return r0
            L_0x0526:
                com.android.systemui.shade.domain.interactor.ShadeInteractorLegacyImpl r0 = new com.android.systemui.shade.domain.interactor.ShadeInteractorLegacyImpl
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.keyguardRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl r3 = (com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl) r3
                javax.inject.Provider r4 = r2.sharedNotificationContainerInteractorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.statusbar.notification.stack.domain.interactor.SharedNotificationContainerInteractor r4 = (com.android.systemui.statusbar.notification.stack.domain.interactor.SharedNotificationContainerInteractor) r4
                javax.inject.Provider r2 = r2.shadeRepositoryImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.shade.data.repository.ShadeRepository r2 = (com.android.systemui.shade.data.repository.ShadeRepository) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x054c:
                com.android.systemui.shade.domain.interactor.ShadeInteractorSceneContainerImpl r0 = new com.android.systemui.shade.domain.interactor.ShadeInteractorSceneContainerImpl
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.sceneInteractorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.scene.domain.interactor.SceneInteractor r3 = (com.android.systemui.scene.domain.interactor.SceneInteractor) r3
                javax.inject.Provider r2 = r2.sharedNotificationContainerInteractorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.notification.stack.domain.interactor.SharedNotificationContainerInteractor r2 = (com.android.systemui.statusbar.notification.stack.domain.interactor.SharedNotificationContainerInteractor) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x056a:
                javax.inject.Provider r0 = r2.implProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.scene.shared.flag.SceneContainerFlags r0 = (com.android.systemui.scene.shared.flag.SceneContainerFlags) r0
                javax.inject.Provider r0 = r2.shadeInteractorLegacyImplProvider
                com.android.systemui.shade.domain.interactor.BaseShadeInteractor r0 = com.android.systemui.shade.ShadeModule_Companion_ProvideBaseShadeInteractorFactory.provideBaseShadeInteractor(r0)
                return r0
            L_0x0579:
                com.android.systemui.keyguard.domain.interactor.WindowManagerLockscreenVisibilityInteractor r0 = new com.android.systemui.keyguard.domain.interactor.WindowManagerLockscreenVisibilityInteractor
                dagger.internal.DelegateFactory r1 = r2.keyguardInteractorProvider
                java.lang.Object r1 = r1.get()
                r3 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r3 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r3
                dagger.internal.DelegateFactory r1 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r4 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r4
                javax.inject.Provider r1 = r2.keyguardSurfaceBehindInteractorProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardSurfaceBehindInteractor r5 = (com.android.systemui.keyguard.domain.interactor.KeyguardSurfaceBehindInteractor) r5
                javax.inject.Provider r1 = r2.fromLockscreenTransitionInteractorProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.keyguard.domain.interactor.FromLockscreenTransitionInteractor r6 = (com.android.systemui.keyguard.domain.interactor.FromLockscreenTransitionInteractor) r6
                javax.inject.Provider r1 = r2.fromPrimaryBouncerTransitionInteractorProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.keyguard.domain.interactor.FromPrimaryBouncerTransitionInteractor r7 = (com.android.systemui.keyguard.domain.interactor.FromPrimaryBouncerTransitionInteractor) r7
                javax.inject.Provider r1 = r2.notificationLaunchAnimationInteractorProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.statusbar.notification.domain.interactor.NotificationLaunchAnimationInteractor r8 = (com.android.systemui.statusbar.notification.domain.interactor.NotificationLaunchAnimationInteractor) r8
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r1.<init>(r2, r3, r4, r5, r6, r7)
                return r0
            L_0x05bc:
                com.android.systemui.keyguard.domain.interactor.KeyguardSurfaceBehindInteractor r0 = new com.android.systemui.keyguard.domain.interactor.KeyguardSurfaceBehindInteractor
                javax.inject.Provider r3 = r2.keyguardSurfaceBehindRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                com.android.systemui.keyguard.data.repository.KeyguardSurfaceBehindRepositoryImpl r10 = (com.android.systemui.keyguard.data.repository.KeyguardSurfaceBehindRepositoryImpl) r10
                android.content.Context r11 = r1.context
                dagger.internal.DelegateFactory r1 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r1 = r1.get()
                r12 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r12 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r12
                javax.inject.Provider r1 = r2.inWindowLauncherUnlockAnimationInteractorProvider
                dagger.Lazy r13 = dagger.internal.DoubleCheck.lazy(r1)
                javax.inject.Provider r1 = r2.swipeToDismissInteractorProvider
                java.lang.Object r1 = r1.get()
                r14 = r1
                com.android.systemui.keyguard.domain.interactor.SwipeToDismissInteractor r14 = (com.android.systemui.keyguard.domain.interactor.SwipeToDismissInteractor) r14
                javax.inject.Provider r1 = r2.notificationLaunchAnimationInteractorProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                com.android.systemui.statusbar.notification.domain.interactor.NotificationLaunchAnimationInteractor r15 = (com.android.systemui.statusbar.notification.domain.interactor.NotificationLaunchAnimationInteractor) r15
                r9 = r0
                r9.<init>(r10, r11, r12, r13, r14, r15)
                return r0
            L_0x05ef:
                com.android.systemui.keyguard.ui.binder.KeyguardSurfaceBehindParamsApplier r0 = new com.android.systemui.keyguard.ui.binder.KeyguardSurfaceBehindParamsApplier
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                java.util.concurrent.Executor r1 = (java.util.concurrent.Executor) r1
                dagger.internal.DelegateFactory r3 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r3 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r3
                javax.inject.Provider r2 = r2.keyguardSurfaceBehindInteractorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardSurfaceBehindInteractor r2 = (com.android.systemui.keyguard.domain.interactor.KeyguardSurfaceBehindInteractor) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x060d:
                com.android.systemui.keyguard.WindowManagerLockscreenVisibilityManager r0 = new com.android.systemui.keyguard.WindowManagerLockscreenVisibilityManager
                javax.inject.Provider r3 = r1.provideMainExecutorProvider
                java.lang.Object r3 = r3.get()
                java.util.concurrent.Executor r3 = (java.util.concurrent.Executor) r3
                javax.inject.Provider r1 = r1.provideIActivityTaskManagerProvider
                java.lang.Object r1 = r1.get()
                android.app.IActivityTaskManager r1 = (android.app.IActivityTaskManager) r1
                dagger.internal.DelegateFactory r4 = r2.keyguardStateControllerImplProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.statusbar.policy.KeyguardStateController r4 = (com.android.systemui.statusbar.policy.KeyguardStateController) r4
                javax.inject.Provider r2 = r2.keyguardSurfaceBehindParamsApplierProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.binder.KeyguardSurfaceBehindParamsApplier r2 = (com.android.systemui.keyguard.ui.binder.KeyguardSurfaceBehindParamsApplier) r2
                r0.<init>(r3, r1, r4, r2)
                return r0
            L_0x0633:
                com.android.keyguard.mediator.ScreenOnCoordinator r0 = new com.android.keyguard.mediator.ScreenOnCoordinator
                javax.inject.Provider r2 = r2.provideSysUIUnfoldComponentProvider
                java.lang.Object r2 = r2.get()
                java.util.Optional r2 = (java.util.Optional) r2
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideMainHandlerProvider
                java.lang.Object r1 = r1.get()
                android.os.Handler r1 = (android.os.Handler) r1
                r0.<init>(r2, r1)
                return r0
            L_0x0649:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$24 r1 = new com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$24
                r1.<init>(r0)
                return r1
            L_0x064f:
                android.content.Context r3 = r1.context
                dagger.internal.DelegateFactory r0 = r2.navigationBarControllerImplProvider
                dagger.Lazy r4 = dagger.internal.DoubleCheck.lazy(r0)
                javax.inject.Provider r0 = r2.provideDisplayTrackerProvider
                java.lang.Object r0 = r0.get()
                r5 = r0
                com.android.systemui.settings.DisplayTracker r5 = (com.android.systemui.settings.DisplayTracker) r5
                javax.inject.Provider r0 = r1.provideMainExecutorProvider
                java.lang.Object r0 = r0.get()
                r6 = r0
                java.util.concurrent.Executor r6 = (java.util.concurrent.Executor) r6
                javax.inject.Provider r0 = r1.provideUiBackgroundExecutorProvider
                java.lang.Object r0 = r0.get()
                r7 = r0
                java.util.concurrent.Executor r7 = (java.util.concurrent.Executor) r7
                com.android.keyguard.KeyguardDisplayManager$DeviceStateHelper r8 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1498$$Nest$mdeviceStateHelper(r2)
                dagger.internal.DelegateFactory r0 = r2.keyguardStateControllerImplProvider
                java.lang.Object r0 = r0.get()
                r9 = r0
                com.android.systemui.statusbar.policy.KeyguardStateController r9 = (com.android.systemui.statusbar.policy.KeyguardStateController) r9
                javax.inject.Provider r0 = r2.factoryProvider29
                java.lang.Object r0 = r0.get()
                r10 = r0
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$24 r10 = (com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$24) r10
                com.android.keyguard.KeyguardDisplayManager r0 = new com.android.keyguard.KeyguardDisplayManager
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10)
                return r0
            L_0x068f:
                com.android.systemui.biometrics.ui.viewmodel.PromptViewModel r0 = new com.android.systemui.biometrics.ui.viewmodel.PromptViewModel
                javax.inject.Provider r3 = r2.providesDisplayStateInteractorProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.biometrics.domain.interactor.DisplayStateInteractorImpl r12 = (com.android.systemui.biometrics.domain.interactor.DisplayStateInteractorImpl) r12
                javax.inject.Provider r3 = r2.promptSelectorInteractorImplProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.systemui.biometrics.domain.interactor.PromptSelectorInteractor r13 = (com.android.systemui.biometrics.domain.interactor.PromptSelectorInteractor) r13
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                r14 = r1
                android.content.Context r14 = (android.content.Context) r14
                javax.inject.Provider r1 = r2.udfpsOverlayInteractorProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                com.android.systemui.biometrics.domain.interactor.UdfpsOverlayInteractor r15 = (com.android.systemui.biometrics.domain.interactor.UdfpsOverlayInteractor) r15
                com.android.systemui.biometrics.UdfpsUtils r16 = new com.android.systemui.biometrics.UdfpsUtils
                r16.<init>()
                r11 = r0
                r11.<init>(r12, r13, r14, r15, r16)
                return r0
            L_0x06bf:
                com.android.systemui.biometrics.ui.viewmodel.CredentialViewModel r0 = new com.android.systemui.biometrics.ui.viewmodel.CredentialViewModel
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideApplicationContextProvider
                java.lang.Object r1 = r1.get()
                android.content.Context r1 = (android.content.Context) r1
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r2 = r2.promptCredentialInteractorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.biometrics.domain.interactor.PromptCredentialInteractor r2 = (com.android.systemui.biometrics.domain.interactor.PromptCredentialInteractor) r2
                r0.<init>(r1, r2)
                return r0
            L_0x06d5:
                com.android.systemui.biometrics.domain.interactor.PromptSelectorInteractorImpl r0 = new com.android.systemui.biometrics.domain.interactor.PromptSelectorInteractorImpl
                javax.inject.Provider r3 = r2.fingerprintPropertyRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.biometrics.data.repository.FingerprintPropertyRepository r3 = (com.android.systemui.biometrics.data.repository.FingerprintPropertyRepository) r3
                javax.inject.Provider r2 = r2.promptRepositoryImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.biometrics.data.repository.PromptRepositoryImpl r2 = (com.android.systemui.biometrics.data.repository.PromptRepositoryImpl) r2
                javax.inject.Provider r1 = r1.provideLockPatternUtilsProvider
                java.lang.Object r1 = r1.get()
                com.android.internal.widget.LockPatternUtils r1 = (com.android.internal.widget.LockPatternUtils) r1
                r0.<init>(r3, r2, r1)
                return r0
            L_0x06f3:
                com.android.systemui.biometrics.domain.interactor.CredentialInteractorImpl r0 = new com.android.systemui.biometrics.domain.interactor.CredentialInteractorImpl
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r3 = r1.provideApplicationContextProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                android.content.Context r5 = (android.content.Context) r5
                javax.inject.Provider r3 = r1.provideLockPatternUtilsProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                com.android.internal.widget.LockPatternUtils r6 = (com.android.internal.widget.LockPatternUtils) r6
                javax.inject.Provider r3 = r1.provideUserManagerProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                android.os.UserManager r7 = (android.os.UserManager) r7
                javax.inject.Provider r1 = r1.provideDevicePolicyManagerProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                android.app.admin.DevicePolicyManager r8 = (android.app.admin.DevicePolicyManager) r8
                javax.inject.Provider r1 = r2.bindSystemClockProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.util.time.SystemClock r9 = (com.android.systemui.util.time.SystemClock) r9
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9)
                return r0
            L_0x0727:
                com.android.systemui.biometrics.data.repository.FaceSettingsRepositoryImpl r0 = new com.android.systemui.biometrics.data.repository.FaceSettingsRepositoryImpl
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r1 = r1.provideMainHandlerProvider
                java.lang.Object r1 = r1.get()
                android.os.Handler r1 = (android.os.Handler) r1
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r2 = r2.secureSettingsImplProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.util.settings.SecureSettings r2 = (com.android.systemui.util.settings.SecureSettings) r2
                r0.<init>(r1, r2)
                return r0
            L_0x073d:
                com.android.systemui.biometrics.data.repository.PromptRepositoryImpl r0 = new com.android.systemui.biometrics.data.repository.PromptRepositoryImpl
                javax.inject.Provider r1 = r2.faceSettingsRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.biometrics.data.repository.FaceSettingsRepositoryImpl r1 = (com.android.systemui.biometrics.data.repository.FaceSettingsRepositoryImpl) r1
                dagger.internal.DelegateFactory r2 = r2.authControllerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.biometrics.AuthController r2 = (com.android.systemui.biometrics.AuthController) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0753:
                com.android.systemui.biometrics.domain.interactor.PromptCredentialInteractor r0 = new com.android.systemui.biometrics.domain.interactor.PromptCredentialInteractor
                javax.inject.Provider r1 = r2.bgDispatcherProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineDispatcher r1 = (kotlinx.coroutines.CoroutineDispatcher) r1
                javax.inject.Provider r3 = r2.promptRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.biometrics.data.repository.PromptRepositoryImpl r3 = (com.android.systemui.biometrics.data.repository.PromptRepositoryImpl) r3
                javax.inject.Provider r2 = r2.providesCredentialInteractorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.biometrics.domain.interactor.CredentialInteractorImpl r2 = (com.android.systemui.biometrics.domain.interactor.CredentialInteractorImpl) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x0771:
                com.android.systemui.biometrics.domain.interactor.LogContextInteractorImpl r0 = new com.android.systemui.biometrics.domain.interactor.LogContextInteractorImpl
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                com.android.systemui.display.data.repository.DeviceStateRepositoryImpl r3 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1499$$Nest$mdeviceStateRepositoryImpl(r2)
                dagger.internal.DelegateFactory r4 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r4 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r4
                javax.inject.Provider r2 = r2.udfpsOverlayInteractorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.biometrics.domain.interactor.UdfpsOverlayInteractor r2 = (com.android.systemui.biometrics.domain.interactor.UdfpsOverlayInteractor) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x0793:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideUdfpsLogBufferFactory.provideUdfpsLogBuffer(r0)
                return r0
            L_0x07a0:
                com.android.systemui.biometrics.UdfpsLogger r0 = new com.android.systemui.biometrics.UdfpsLogger
                javax.inject.Provider r1 = r2.provideUdfpsLogBufferProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r0.<init>(r1)
                return r0
            L_0x07ae:
                com.android.systemui.biometrics.SideFpsController r0 = new com.android.systemui.biometrics.SideFpsController
                android.content.Context r3 = r1.context
                javax.inject.Provider r4 = r1.providerLayoutInflaterProvider
                java.lang.Object r4 = r4.get()
                android.view.LayoutInflater r4 = (android.view.LayoutInflater) r4
                javax.inject.Provider r5 = r1.providesFingerprintManagerProvider
                java.lang.Object r5 = r5.get()
                android.hardware.fingerprint.FingerprintManager r5 = (android.hardware.fingerprint.FingerprintManager) r5
                javax.inject.Provider r6 = r1.provideWindowManagerProvider
                java.lang.Object r6 = r6.get()
                android.view.WindowManager r6 = (android.view.WindowManager) r6
                javax.inject.Provider r7 = r1.provideActivityTaskManagerProvider
                java.lang.Object r7 = r7.get()
                android.app.ActivityTaskManager r7 = (android.app.ActivityTaskManager) r7
                javax.inject.Provider r8 = r1.provideDisplayManagerProvider
                java.lang.Object r8 = r8.get()
                android.hardware.display.DisplayManager r8 = (android.hardware.display.DisplayManager) r8
                javax.inject.Provider r9 = r2.providesDisplayStateInteractorProvider
                java.lang.Object r9 = r9.get()
                com.android.systemui.biometrics.domain.interactor.DisplayStateInteractorImpl r9 = (com.android.systemui.biometrics.domain.interactor.DisplayStateInteractorImpl) r9
                javax.inject.Provider r10 = r1.provideMainDelayableExecutorProvider
                java.lang.Object r10 = r10.get()
                com.android.systemui.util.concurrency.DelayableExecutor r10 = (com.android.systemui.util.concurrency.DelayableExecutor) r10
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r11 = r1.provideMainHandlerProvider
                java.lang.Object r11 = r11.get()
                android.os.Handler r11 = (android.os.Handler) r11
                javax.inject.Provider r12 = r2.alternateBouncerInteractorProvider
                java.lang.Object r12 = r12.get()
                com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor r12 = (com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor) r12
                javax.inject.Provider r13 = r1.applicationScopeProvider
                java.lang.Object r13 = r13.get()
                kotlinx.coroutines.CoroutineScope r13 = (kotlinx.coroutines.CoroutineScope) r13
                javax.inject.Provider r1 = r1.dumpManagerProvider
                java.lang.Object r1 = r1.get()
                r14 = r1
                com.android.systemui.dump.DumpManager r14 = (com.android.systemui.dump.DumpManager) r14
                javax.inject.Provider r1 = r2.fpsUnlockTrackerProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                com.android.systemui.biometrics.FpsUnlockTracker r15 = (com.android.systemui.biometrics.FpsUnlockTracker) r15
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15)
                return r0
            L_0x0819:
                com.android.systemui.biometrics.ui.viewmodel.DefaultUdfpsTouchOverlayViewModel r0 = new com.android.systemui.biometrics.ui.viewmodel.DefaultUdfpsTouchOverlayViewModel
                dagger.internal.DelegateFactory r1 = r2.shadeInteractorImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.shade.domain.interactor.ShadeInteractor r1 = (com.android.systemui.shade.domain.interactor.ShadeInteractor) r1
                dagger.internal.DelegateFactory r2 = r2.systemUIDialogManagerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.phone.SystemUIDialogManager r2 = (com.android.systemui.statusbar.phone.SystemUIDialogManager) r2
                r0.<init>(r1, r2)
                return r0
            L_0x082f:
                com.android.systemui.biometrics.ui.viewmodel.DeviceEntryUdfpsTouchOverlayViewModel r0 = new com.android.systemui.biometrics.ui.viewmodel.DeviceEntryUdfpsTouchOverlayViewModel
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$SwitchingProvider r1 = r2.deviceEntryIconViewModelProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.ui.viewmodel.DeviceEntryIconViewModel r1 = (com.android.systemui.keyguard.ui.viewmodel.DeviceEntryIconViewModel) r1
                javax.inject.Provider r3 = r2.alternateBouncerInteractorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor r3 = (com.android.systemui.bouncer.domain.interactor.AlternateBouncerInteractor) r3
                dagger.internal.DelegateFactory r2 = r2.systemUIDialogManagerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.phone.SystemUIDialogManager r2 = (com.android.systemui.statusbar.phone.SystemUIDialogManager) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x084d:
                com.android.systemui.biometrics.FpsUnlockTracker r0 = new com.android.systemui.biometrics.FpsUnlockTracker
                dagger.internal.DelegateFactory r3 = r2.statusBarStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.plugins.statusbar.StatusBarStateController r3 = (com.android.systemui.plugins.statusbar.StatusBarStateController) r3
                dagger.internal.DelegateFactory r4 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r4 = r4.get()
                com.android.keyguard.KeyguardUpdateMonitor r4 = (com.android.keyguard.KeyguardUpdateMonitor) r4
                dagger.internal.DelegateFactory r2 = r2.keyguardUnlockAnimationControllerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.KeyguardUnlockAnimationController r2 = (com.android.systemui.keyguard.KeyguardUnlockAnimationController) r2
                javax.inject.Provider r1 = r1.provideLatencyTrackerProvider
                java.lang.Object r1 = r1.get()
                com.android.internal.util.LatencyTracker r1 = (com.android.internal.util.LatencyTracker) r1
                r0.<init>(r3, r4, r2, r1)
                return r0
            L_0x0873:
                com.android.systemui.biometrics.UdfpsKeyguardAccessibilityDelegate r0 = new com.android.systemui.biometrics.UdfpsKeyguardAccessibilityDelegate
                android.content.res.Resources r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m976$$Nest$mmainResources(r1)
                dagger.internal.DelegateFactory r2 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r2 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0885:
                com.android.systemui.biometrics.udfps.OverlapDetector r0 = com.android.systemui.biometrics.dagger.BiometricsModule_Companion_ProvidesOverlapDetectorFactory.providesOverlapDetector()
                return r0
            L_0x088a:
                com.android.systemui.biometrics.udfps.SinglePointerTouchProcessor r0 = new com.android.systemui.biometrics.udfps.SinglePointerTouchProcessor
                javax.inject.Provider r1 = r2.providesOverlapDetectorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.biometrics.udfps.OverlapDetector r1 = (com.android.systemui.biometrics.udfps.OverlapDetector) r1
                r0.<init>(r1)
                return r0
            L_0x0898:
                android.os.HandlerThread r0 = new android.os.HandlerThread
                java.lang.String r1 = "biometrics"
                r0.<init>(r1)
                r0.start()
                android.os.Looper r0 = r0.getLooper()
                com.android.systemui.util.concurrency.ExecutorImpl r1 = new com.android.systemui.util.concurrency.ExecutorImpl
                r1.<init>(r0)
                return r1
            L_0x08ac:
                com.android.systemui.biometrics.UdfpsShell r0 = new com.android.systemui.biometrics.UdfpsShell
                javax.inject.Provider r1 = r2.commandRegistryProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.commandline.CommandRegistry r1 = (com.android.systemui.statusbar.commandline.CommandRegistry) r1
                r0.<init>(r1)
                return r0
            L_0x08ba:
                com.android.systemui.biometrics.UdfpsHapticsSimulator r0 = new com.android.systemui.biometrics.UdfpsHapticsSimulator
                javax.inject.Provider r1 = r2.commandRegistryProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.statusbar.commandline.CommandRegistry r1 = (com.android.systemui.statusbar.commandline.CommandRegistry) r1
                javax.inject.Provider r3 = r2.vibratorHelperProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.statusbar.VibratorHelper r3 = (com.android.systemui.statusbar.VibratorHelper) r3
                dagger.internal.DelegateFactory r2 = r2.keyguardUpdateMonitorProvider
                java.lang.Object r2 = r2.get()
                com.android.keyguard.KeyguardUpdateMonitor r2 = (com.android.keyguard.KeyguardUpdateMonitor) r2
                r0.<init>(r1, r3)
                return r0
            L_0x08d8:
                com.android.systemui.keyguard.domain.interactor.BiometricUnlockInteractor r0 = new com.android.systemui.keyguard.domain.interactor.BiometricUnlockInteractor
                javax.inject.Provider r1 = r2.keyguardRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl r1 = (com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl) r1
                r0.<init>(r1)
                return r0
            L_0x08e6:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideShadeWindowLogBufferFactory.provideShadeWindowLogBuffer(r0)
                return r0
            L_0x08f3:
                com.android.systemui.keyguard.ui.viewmodel.InWindowLauncherAnimationViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.InWindowLauncherAnimationViewModel
                javax.inject.Provider r1 = r2.inWindowLauncherUnlockAnimationInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.domain.interactor.InWindowLauncherUnlockAnimationInteractor r1 = (com.android.systemui.keyguard.domain.interactor.InWindowLauncherUnlockAnimationInteractor) r1
                r0.<init>(r1)
                return r0
            L_0x0901:
                com.android.systemui.keyguard.data.repository.KeyguardSurfaceBehindRepositoryImpl r0 = new com.android.systemui.keyguard.data.repository.KeyguardSurfaceBehindRepositoryImpl
                r0.<init>()
                return r0
            L_0x0907:
                com.android.systemui.keyguard.data.repository.InWindowLauncherUnlockAnimationRepository r0 = new com.android.systemui.keyguard.data.repository.InWindowLauncherUnlockAnimationRepository
                r0.<init>()
                return r0
            L_0x090d:
                com.android.systemui.keyguard.domain.interactor.InWindowLauncherUnlockAnimationInteractor r0 = new com.android.systemui.keyguard.domain.interactor.InWindowLauncherUnlockAnimationInteractor
                javax.inject.Provider r3 = r2.inWindowLauncherUnlockAnimationRepositoryProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.data.repository.InWindowLauncherUnlockAnimationRepository r3 = (com.android.systemui.keyguard.data.repository.InWindowLauncherUnlockAnimationRepository) r3
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                kotlinx.coroutines.CoroutineScope r4 = (kotlinx.coroutines.CoroutineScope) r4
                dagger.internal.DelegateFactory r1 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r5 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r5
                javax.inject.Provider r1 = r2.keyguardSurfaceBehindRepositoryImplProvider
                dagger.Lazy r6 = dagger.internal.DoubleCheck.lazy(r1)
                javax.inject.Provider r1 = r2.provideActivityManagerWrapperProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.shared.system.ActivityManagerWrapper r7 = (com.android.systemui.shared.system.ActivityManagerWrapper) r7
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r1.<init>(r2, r3, r4, r5, r6)
                return r0
            L_0x0942:
                com.android.systemui.keyguard.ui.view.InWindowLauncherUnlockAnimationManager r0 = new com.android.systemui.keyguard.ui.view.InWindowLauncherUnlockAnimationManager
                javax.inject.Provider r3 = r2.inWindowLauncherUnlockAnimationInteractorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.domain.interactor.InWindowLauncherUnlockAnimationInteractor r3 = (com.android.systemui.keyguard.domain.interactor.InWindowLauncherUnlockAnimationInteractor) r3
                javax.inject.Provider r2 = r2.inWindowLauncherAnimationViewModelProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.ui.viewmodel.InWindowLauncherAnimationViewModel r2 = (com.android.systemui.keyguard.ui.viewmodel.InWindowLauncherAnimationViewModel) r2
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                r0.<init>(r3, r2, r1)
                return r0
            L_0x0960:
                com.android.systemui.navigationbar.TaskbarDelegate r0 = new com.android.systemui.navigationbar.TaskbarDelegate
                android.content.Context r1 = r1.context
                javax.inject.Provider r3 = r2.factoryProvider5
                java.lang.Object r3 = r3.get()
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4 r3 = (com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl$SwitchingProvider$4) r3
                dagger.internal.DelegateFactory r2 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r2 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r2
                r0.<init>(r1, r3, r2)
                return r0
            L_0x0978:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl.m973$$Nest$mapplicationAssetManager(r1)
                java.lang.String r0 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1584$$Nest$mnamedString(r2)
                com.google.android.systemui.gesture.BackGestureTfClassifierProviderGoogle r1 = new com.google.android.systemui.gesture.BackGestureTfClassifierProviderGoogle
                r1.<init>(r0)
                return r1
            L_0x0985:
                com.android.systemui.navigationbar.gestural.NavigationBarEdgePanel r0 = new com.android.systemui.navigationbar.gestural.NavigationBarEdgePanel
                android.content.Context r3 = r1.context
                javax.inject.Provider r1 = r1.provideLatencyTrackerProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                com.android.internal.util.LatencyTracker r4 = (com.android.internal.util.LatencyTracker) r4
                javax.inject.Provider r1 = r2.vibratorHelperProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                com.android.systemui.statusbar.VibratorHelper r5 = (com.android.systemui.statusbar.VibratorHelper) r5
                javax.inject.Provider r1 = r2.provideBackgroundExecutorProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                java.util.concurrent.Executor r6 = (java.util.concurrent.Executor) r6
                javax.inject.Provider r1 = r2.provideDisplayTrackerProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.settings.DisplayTracker r7 = (com.android.systemui.settings.DisplayTracker) r7
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7)
                return r0
            L_0x09b2:
                android.content.Context r0 = r1.context
                com.android.systemui.recents.OverviewProxyRecentsImpl r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1629$$Nest$mrecentsImplementation(r2)
                javax.inject.Provider r2 = r2.provideCommandQueueProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.CommandQueue r2 = (com.android.systemui.statusbar.CommandQueue) r2
                com.android.systemui.recents.Recents r3 = new com.android.systemui.recents.Recents
                r3.<init>(r0, r1, r2)
                return r3
            L_0x09c6:
                com.android.systemui.shade.ShadeControllerImpl r0 = new com.android.systemui.shade.ShadeControllerImpl
                javax.inject.Provider r3 = r2.provideCommandQueueProvider
                java.lang.Object r3 = r3.get()
                r5 = r3
                com.android.systemui.statusbar.CommandQueue r5 = (com.android.systemui.statusbar.CommandQueue) r5
                javax.inject.Provider r3 = r1.provideMainExecutorProvider
                java.lang.Object r3 = r3.get()
                r6 = r3
                java.util.concurrent.Executor r6 = (java.util.concurrent.Executor) r6
                javax.inject.Provider r3 = r2.provideShadeTouchLogBufferProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.log.LogBuffer r7 = (com.android.systemui.log.LogBuffer) r7
                javax.inject.Provider r3 = r2.windowRootViewVisibilityInteractorProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                com.android.systemui.scene.domain.interactor.WindowRootViewVisibilityInteractor r8 = (com.android.systemui.scene.domain.interactor.WindowRootViewVisibilityInteractor) r8
                dagger.internal.DelegateFactory r3 = r2.keyguardStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r9 = r3
                com.android.systemui.statusbar.policy.KeyguardStateController r9 = (com.android.systemui.statusbar.policy.KeyguardStateController) r9
                dagger.internal.DelegateFactory r3 = r2.statusBarStateControllerImplProvider
                java.lang.Object r3 = r3.get()
                r10 = r3
                com.android.systemui.plugins.statusbar.StatusBarStateController r10 = (com.android.systemui.plugins.statusbar.StatusBarStateController) r10
                dagger.internal.DelegateFactory r3 = r2.statusBarKeyguardViewManagerProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager r11 = (com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager) r11
                javax.inject.Provider r3 = r2.statusBarWindowControllerProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.statusbar.window.StatusBarWindowController r12 = (com.android.systemui.statusbar.window.StatusBarWindowController) r12
                javax.inject.Provider r3 = r2.provideDeviceProvisionedControllerProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                com.android.systemui.statusbar.policy.DeviceProvisionedController r13 = (com.android.systemui.statusbar.policy.DeviceProvisionedController) r13
                dagger.internal.DelegateFactory r3 = r2.notificationShadeWindowControllerImplProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                com.android.systemui.statusbar.NotificationShadeWindowController r14 = (com.android.systemui.statusbar.NotificationShadeWindowController) r14
                javax.inject.Provider r1 = r1.provideWindowManagerProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                android.view.WindowManager r15 = (android.view.WindowManager) r15
                dagger.internal.DelegateFactory r1 = r2.notificationPanelViewControllerProvider
                dagger.Lazy r16 = dagger.internal.DoubleCheck.lazy(r1)
                dagger.internal.DelegateFactory r1 = r2.assistManagerGoogleProvider
                dagger.Lazy r17 = dagger.internal.DoubleCheck.lazy(r1)
                javax.inject.Provider r1 = r2.notificationGutsManagerProvider
                dagger.Lazy r18 = dagger.internal.DoubleCheck.lazy(r1)
                r4 = r0
                r4.<init>(r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18)
                return r0
            L_0x0a42:
                javax.inject.Provider r0 = r2.logBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.LogBufferFactory r0 = (com.android.systemui.log.LogBufferFactory) r0
                com.android.systemui.log.LogBuffer r0 = com.android.systemui.log.dagger.LogModule_ProvideShadeTouchLogBufferFactory.provideShadeTouchLogBuffer(r0)
                return r0
            L_0x0a4f:
                javax.inject.Provider r0 = r2.tableLogBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.table.TableLogBufferFactory r0 = (com.android.systemui.log.table.TableLogBufferFactory) r0
                com.android.systemui.log.table.TableLogBuffer r0 = com.android.systemui.keyguard.data.repository.DeviceEntryFaceAuthModule_Companion_ProvideFaceAuthTableLogFactory.provideFaceAuthTableLog(r0)
                return r0
            L_0x0a5c:
                javax.inject.Provider r0 = r2.tableLogBufferFactoryProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.log.table.TableLogBufferFactory r0 = (com.android.systemui.log.table.TableLogBufferFactory) r0
                com.android.systemui.log.table.TableLogBuffer r0 = com.android.systemui.keyguard.data.repository.DeviceEntryFaceAuthModule_Companion_ProvideFaceDetectTableLogFactory.provideFaceDetectTableLog(r0)
                return r0
            L_0x0a69:
                com.android.systemui.keyguard.domain.interactor.FromAodTransitionInteractor r0 = new com.android.systemui.keyguard.domain.interactor.FromAodTransitionInteractor
                javax.inject.Provider r3 = r2.keyguardTransitionRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl r3 = (com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl) r3
                dagger.internal.DelegateFactory r4 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r4 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r4
                javax.inject.Provider r5 = r2.bgApplicationScopeProvider
                java.lang.Object r5 = r5.get()
                kotlinx.coroutines.CoroutineScope r5 = (kotlinx.coroutines.CoroutineScope) r5
                javax.inject.Provider r6 = r2.bgDispatcherProvider
                java.lang.Object r6 = r6.get()
                kotlinx.coroutines.CoroutineDispatcher r6 = (kotlinx.coroutines.CoroutineDispatcher) r6
                javax.inject.Provider r1 = r1.mainDispatcherProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                kotlinx.coroutines.CoroutineDispatcher r7 = (kotlinx.coroutines.CoroutineDispatcher) r7
                dagger.internal.DelegateFactory r1 = r2.keyguardInteractorProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r8 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r8
                dagger.internal.DelegateFactory r1 = r2.powerInteractorProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.power.domain.interactor.PowerInteractor r9 = (com.android.systemui.power.domain.interactor.PowerInteractor) r9
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r9
                r1.<init>(r2, r3, r4, r5, r6, r7, r8)
                return r0
            L_0x0ab2:
                com.android.systemui.keyguard.domain.interactor.FromPrimaryBouncerTransitionInteractor r0 = new com.android.systemui.keyguard.domain.interactor.FromPrimaryBouncerTransitionInteractor
                javax.inject.Provider r3 = r2.keyguardTransitionRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r11 = r3
                com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl r11 = (com.android.systemui.keyguard.data.repository.KeyguardTransitionRepositoryImpl) r11
                dagger.internal.DelegateFactory r3 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r3 = r3.get()
                r12 = r3
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r12 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r12
                javax.inject.Provider r3 = r2.bgApplicationScopeProvider
                java.lang.Object r3 = r3.get()
                r13 = r3
                kotlinx.coroutines.CoroutineScope r13 = (kotlinx.coroutines.CoroutineScope) r13
                javax.inject.Provider r3 = r2.bgDispatcherProvider
                java.lang.Object r3 = r3.get()
                r14 = r3
                kotlinx.coroutines.CoroutineDispatcher r14 = (kotlinx.coroutines.CoroutineDispatcher) r14
                javax.inject.Provider r1 = r1.mainDispatcherProvider
                java.lang.Object r1 = r1.get()
                r15 = r1
                kotlinx.coroutines.CoroutineDispatcher r15 = (kotlinx.coroutines.CoroutineDispatcher) r15
                dagger.internal.DelegateFactory r1 = r2.keyguardInteractorProvider
                java.lang.Object r1 = r1.get()
                r16 = r1
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r16 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r16
                dagger.internal.DelegateFactory r1 = r2.communalInteractorProvider
                java.lang.Object r1 = r1.get()
                r17 = r1
                com.android.systemui.communal.domain.interactor.CommunalInteractor r17 = (com.android.systemui.communal.domain.interactor.CommunalInteractor) r17
                dagger.internal.DelegateFactory r1 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.flags.FeatureFlags r1 = (com.android.systemui.flags.FeatureFlags) r1
                javax.inject.Provider r1 = r2.keyguardSecurityModelProvider
                java.lang.Object r1 = r1.get()
                r18 = r1
                com.android.keyguard.KeyguardSecurityModel r18 = (com.android.keyguard.KeyguardSecurityModel) r18
                javax.inject.Provider r1 = r2.selectedUserInteractorProvider
                java.lang.Object r1 = r1.get()
                r19 = r1
                com.android.systemui.user.domain.interactor.SelectedUserInteractor r19 = (com.android.systemui.user.domain.interactor.SelectedUserInteractor) r19
                dagger.internal.DelegateFactory r1 = r2.powerInteractorProvider
                java.lang.Object r1 = r1.get()
                r20 = r1
                com.android.systemui.power.domain.interactor.PowerInteractor r20 = (com.android.systemui.power.domain.interactor.PowerInteractor) r20
                r10 = r0
                r10.<init>(r11, r12, r13, r14, r15, r16, r17, r18, r19, r20)
                return r0
            L_0x0b20:
                com.android.systemui.keyguard.domain.interactor.SwipeToDismissInteractor r0 = new com.android.systemui.keyguard.domain.interactor.SwipeToDismissInteractor
                javax.inject.Provider r1 = r2.bgApplicationScopeProvider
                java.lang.Object r1 = r1.get()
                kotlinx.coroutines.CoroutineScope r1 = (kotlinx.coroutines.CoroutineScope) r1
                javax.inject.Provider r3 = r2.shadeRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.shade.data.repository.ShadeRepository r3 = (com.android.systemui.shade.data.repository.ShadeRepository) r3
                dagger.internal.DelegateFactory r4 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r4 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r4
                dagger.internal.DelegateFactory r2 = r2.keyguardInteractorProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.keyguard.domain.interactor.KeyguardInteractor r2 = (com.android.systemui.keyguard.domain.interactor.KeyguardInteractor) r2
                r0.<init>(r1, r3, r4, r2)
                return r0
            L_0x0b46:
                com.google.android.systemui.smartspace.BcSmartspaceDataProvider r0 = new com.google.android.systemui.smartspace.BcSmartspaceDataProvider
                r0.<init>()
                return r0
            L_0x0b4c:
                com.android.systemui.communal.smartspace.CommunalSmartspaceController r0 = new com.android.systemui.communal.smartspace.CommunalSmartspaceController
                android.content.Context r3 = r1.context
                javax.inject.Provider r4 = r1.provideSmartspaceManagerProvider
                java.lang.Object r4 = r4.get()
                android.app.smartspace.SmartspaceManager r4 = (android.app.smartspace.SmartspaceManager) r4
                javax.inject.Provider r5 = r1.provideExecutionProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.util.concurrency.ExecutionImpl r5 = (com.android.systemui.util.concurrency.ExecutionImpl) r5
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                java.util.concurrent.Executor r6 = (java.util.concurrent.Executor) r6
                com.android.systemui.smartspace.preconditions.LockscreenPrecondition r7 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1549$$Nest$mlockscreenPrecondition(r2)
                com.android.systemui.smartspace.filters.LockscreenTargetFilter r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1551$$Nest$mlockscreenTargetFilter(r2)
                java.util.Optional r8 = java.util.Optional.of(r1)
                javax.inject.Provider r1 = r2.provideGlanceableHubBcSmartspaceDataPluginProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.plugins.BcSmartspaceDataPlugin r1 = (com.android.systemui.plugins.BcSmartspaceDataPlugin) r1
                java.util.Optional r9 = java.util.Optional.of(r1)
                r1 = r0
                r2 = r3
                r3 = r4
                r4 = r5
                r5 = r6
                r6 = r7
                r7 = r8
                r8 = r9
                r1.<init>(r2, r3, r4, r5, r6, r7, r8)
                return r0
            L_0x0b8d:
                com.android.systemui.smartspace.data.repository.SmartspaceRepositoryImpl r0 = new com.android.systemui.smartspace.data.repository.SmartspaceRepositoryImpl
                javax.inject.Provider r2 = r2.communalSmartspaceControllerProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.communal.smartspace.CommunalSmartspaceController r2 = (com.android.systemui.communal.smartspace.CommunalSmartspaceController) r2
                javax.inject.Provider r1 = r1.provideMainExecutorProvider
                java.lang.Object r1 = r1.get()
                java.util.concurrent.Executor r1 = (java.util.concurrent.Executor) r1
                r0.<init>(r2, r1)
                return r0
            L_0x0ba3:
                com.android.systemui.communal.data.repository.CommunalMediaRepositoryImpl r0 = new com.android.systemui.communal.data.repository.CommunalMediaRepositoryImpl
                javax.inject.Provider r1 = r2.mediaDataManagerProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.media.controls.domain.pipeline.MediaDataManager r1 = (com.android.systemui.media.controls.domain.pipeline.MediaDataManager) r1
                javax.inject.Provider r2 = r2.provideCommunalTableLogBufferProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.log.table.TableLogBuffer r2 = (com.android.systemui.log.table.TableLogBuffer) r2
                r0.<init>(r1, r2)
                return r0
            L_0x0bb9:
                com.android.systemui.communal.data.repository.CommunalPrefsRepositoryImpl r0 = new com.android.systemui.communal.data.repository.CommunalPrefsRepositoryImpl
                javax.inject.Provider r1 = r2.bgApplicationScopeProvider
                java.lang.Object r1 = r1.get()
                r4 = r1
                kotlinx.coroutines.CoroutineScope r4 = (kotlinx.coroutines.CoroutineScope) r4
                javax.inject.Provider r1 = r2.bgDispatcherProvider
                java.lang.Object r1 = r1.get()
                r5 = r1
                kotlinx.coroutines.CoroutineDispatcher r5 = (kotlinx.coroutines.CoroutineDispatcher) r5
                javax.inject.Provider r1 = r2.userRepositoryImplProvider
                java.lang.Object r1 = r1.get()
                r6 = r1
                com.android.systemui.user.data.repository.UserRepositoryImpl r6 = (com.android.systemui.user.data.repository.UserRepositoryImpl) r6
                javax.inject.Provider r1 = r2.userFileManagerImplProvider
                java.lang.Object r1 = r1.get()
                r7 = r1
                com.android.systemui.settings.UserFileManager r7 = (com.android.systemui.settings.UserFileManager) r7
                javax.inject.Provider r1 = r2.provideCommunalLogBufferProvider
                java.lang.Object r1 = r1.get()
                r8 = r1
                com.android.systemui.log.LogBuffer r8 = (com.android.systemui.log.LogBuffer) r8
                javax.inject.Provider r1 = r2.provideCommunalTableLogBufferProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                com.android.systemui.log.table.TableLogBuffer r9 = (com.android.systemui.log.table.TableLogBuffer) r9
                r3 = r0
                r3.<init>(r4, r5, r6, r7, r8, r9)
                return r0
            L_0x0bf6:
                com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$KeyguardStatusBarViewComponentImpl$SwitchingProvider r0 = r1.provideApplicationContextProvider
                java.lang.Object r0 = r0.get()
                android.content.Context r0 = (android.content.Context) r0
                com.android.systemui.communal.data.db.DefaultWidgetPopulation r1 = com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleSysUIComponentImpl.m1493$$Nest$mdefaultWidgetPopulation(r2)
                com.android.systemui.communal.data.db.CommunalDatabase r0 = com.android.systemui.communal.data.db.CommunalDatabaseModule_Companion_ProvideCommunalDatabaseFactory.provideCommunalDatabase(r0, r1)
                return r0
            L_0x0c07:
                javax.inject.Provider r0 = r2.provideCommunalDatabaseProvider
                java.lang.Object r0 = r0.get()
                com.android.systemui.communal.data.db.CommunalDatabase r0 = (com.android.systemui.communal.data.db.CommunalDatabase) r0
                com.android.systemui.communal.data.db.CommunalWidgetDao_Impl r0 = com.android.systemui.communal.data.db.CommunalDatabaseModule_Companion_ProvideCommunalWidgetDaoFactory.provideCommunalWidgetDao(r0)
                return r0
            L_0x0c14:
                javax.inject.Provider r0 = r2.provideAppWidgetManagerProvider
                java.lang.Object r0 = r0.get()
                java.util.Optional r0 = (java.util.Optional) r0
                javax.inject.Provider r1 = r2.provideCommunalAppWidgetHostProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.communal.widgets.CommunalAppWidgetHost r1 = (com.android.systemui.communal.widgets.CommunalAppWidgetHost) r1
                javax.inject.Provider r3 = r2.selectedUserInteractorProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.user.domain.interactor.SelectedUserInteractor r3 = (com.android.systemui.user.domain.interactor.SelectedUserInteractor) r3
                javax.inject.Provider r2 = r2.provideCommunalLogBufferProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.log.LogBuffer r2 = (com.android.systemui.log.LogBuffer) r2
                com.android.systemui.communal.widgets.CommunalWidgetHost r0 = com.android.systemui.communal.widgets.CommunalWidgetModule_Companion_ProvideCommunalWidgetHostFactory.provideCommunalWidgetHost(r0, r1, r3, r2)
                return r0
            L_0x0c39:
                com.android.systemui.keyguard.data.repository.LightRevealScrimRepositoryImpl r0 = new com.android.systemui.keyguard.data.repository.LightRevealScrimRepositoryImpl
                javax.inject.Provider r3 = r2.keyguardRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl r3 = (com.android.systemui.keyguard.data.repository.KeyguardRepositoryImpl) r3
                android.content.Context r1 = r1.context
                dagger.internal.DelegateFactory r4 = r2.powerInteractorProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.power.domain.interactor.PowerInteractor r4 = (com.android.systemui.power.domain.interactor.PowerInteractor) r4
                com.android.keyguard.logging.ScrimLogger r5 = new com.android.keyguard.logging.ScrimLogger
                javax.inject.Provider r2 = r2.provideScrimLogBufferProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.log.LogBuffer r2 = (com.android.systemui.log.LogBuffer) r2
                r5.<init>(r2)
                r0.<init>(r3, r1, r4, r5)
                return r0
            L_0x0c5e:
                com.android.systemui.keyguard.domain.interactor.LightRevealScrimInteractor r0 = new com.android.systemui.keyguard.domain.interactor.LightRevealScrimInteractor
                dagger.internal.DelegateFactory r3 = r2.keyguardTransitionInteractorProvider
                java.lang.Object r3 = r3.get()
                r7 = r3
                com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor r7 = (com.android.systemui.keyguard.domain.interactor.KeyguardTransitionInteractor) r7
                javax.inject.Provider r3 = r2.lightRevealScrimRepositoryImplProvider
                java.lang.Object r3 = r3.get()
                r8 = r3
                com.android.systemui.keyguard.data.repository.LightRevealScrimRepository r8 = (com.android.systemui.keyguard.data.repository.LightRevealScrimRepository) r8
                javax.inject.Provider r1 = r1.applicationScopeProvider
                java.lang.Object r1 = r1.get()
                r9 = r1
                kotlinx.coroutines.CoroutineScope r9 = (kotlinx.coroutines.CoroutineScope) r9
                com.android.keyguard.logging.ScrimLogger r10 = new com.android.keyguard.logging.ScrimLogger
                javax.inject.Provider r1 = r2.provideScrimLogBufferProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.log.LogBuffer r1 = (com.android.systemui.log.LogBuffer) r1
                r10.<init>(r1)
                dagger.internal.DelegateFactory r1 = r2.powerInteractorProvider
                java.lang.Object r1 = r1.get()
                r11 = r1
                com.android.systemui.power.domain.interactor.PowerInteractor r11 = (com.android.systemui.power.domain.interactor.PowerInteractor) r11
                r6 = r0
                r6.<init>(r7, r8, r9, r10, r11)
                return r0
            L_0x0c96:
                com.android.systemui.keyguard.ui.viewmodel.LightRevealScrimViewModel r0 = new com.android.systemui.keyguard.ui.viewmodel.LightRevealScrimViewModel
                javax.inject.Provider r1 = r2.lightRevealScrimInteractorProvider
                java.lang.Object r1 = r1.get()
                com.android.systemui.keyguard.domain.interactor.LightRevealScrimInteractor r1 = (com.android.systemui.keyguard.domain.interactor.LightRevealScrimInteractor) r1
                r0.<init>(r1)
                return r0
            L_0x0ca4:
                com.android.systemui.charging.WiredChargingRippleController r0 = new com.android.systemui.charging.WiredChargingRippleController
                javax.inject.Provider r3 = r2.commandRegistryProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.statusbar.commandline.CommandRegistry r3 = (com.android.systemui.statusbar.commandline.CommandRegistry) r3
                javax.inject.Provider r4 = r2.provideBatteryControllerProvider
                java.lang.Object r4 = r4.get()
                com.android.systemui.statusbar.policy.BatteryController r4 = (com.android.systemui.statusbar.policy.BatteryController) r4
                javax.inject.Provider r5 = r2.configurationControllerImplProvider
                java.lang.Object r5 = r5.get()
                com.android.systemui.statusbar.policy.ConfigurationController r5 = (com.android.systemui.statusbar.policy.ConfigurationController) r5
                dagger.internal.DelegateFactory r6 = r2.featureFlagsClassicReleaseProvider
                java.lang.Object r6 = r6.get()
                com.android.systemui.flags.FeatureFlags r6 = (com.android.systemui.flags.FeatureFlags) r6
                android.content.Context r7 = r1.context
                javax.inject.Provider r8 = r1.provideWindowManagerProvider
                java.lang.Object r8 = r8.get()
                android.view.WindowManager r8 = (android.view.WindowManager) r8
                javax.inject.Provider r2 = r2.bindSystemClockProvider
                java.lang.Object r2 = r2.get()
                r9 = r2
                com.android.systemui.util.time.SystemClock r9 = (com.android.systemui.util.time.SystemClock) r9
                javax.inject.Provider r1 = r1.provideUiEventLoggerProvider
                java.lang.Object r1 = r1.get()
                r10 = r1
                com.android.internal.logging.UiEventLogger r10 = (com.android.internal.logging.UiEventLogger) r10
                r2 = r0
                r2.<init>(r3, r4, r5, r6, r7, r8, r9, r10)
                return r0
            L_0x0ce7:
                javax.inject.Provider r0 = r1.provideSensorPrivacyManagerProvider
                java.lang.Object r0 = r0.get()
                android.hardware.SensorPrivacyManager r0 = (android.hardware.SensorPrivacyManager) r0
                com.android.systemui.statusbar.policy.SensorPrivacyControllerImpl r0 = com.google.android.systemui.dagger.SystemUIGoogleModule_ProvideSensorPrivacyControllerFactory.provideSensorPrivacyController(r0)
                return r0
            L_0x0cf4:
                com.android.systemui.qs.external.TileServiceRequestController$Builder r0 = new com.android.systemui.qs.external.TileServiceRequestController$Builder
                javax.inject.Provider r3 = r2.provideCommandQueueProvider
                java.lang.Object r3 = r3.get()
                com.android.systemui.statusbar.CommandQueue r3 = (com.android.systemui.statusbar.CommandQueue) r3
                javax.inject.Provider r2 = r2.commandRegistryProvider
                java.lang.Object r2 = r2.get()
                com.android.systemui.statusbar.commandline.CommandRegistry r2 = (com.android.systemui.statusbar.commandline.CommandRegistry) r2
                javax.inject.Provider r1 = r1.provideIUriGrantsManagerProvider
                java.lang.Object r1 = r1.get()
                android.app.IUriGrantsManager r1 = (android.app.IUriGrantsManager) r1
                r0.<init>(r3, r2, r1)
                return r0
            */
            throw new UnsupportedOperationException("Method not decompiled: com.google.android.systemui.dagger.DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl.SwitchingProvider.get9():java.lang.Object");
        }
    }

    /* renamed from: -$$Nest$mfullscreenUnfoldTaskAnimator  reason: not valid java name */
    public static FullscreenUnfoldTaskAnimator m1747$$Nest$mfullscreenUnfoldTaskAnimator(DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl daggerSysUIGoogleGlobalRootComponent$WMComponentImpl) {
        return new FullscreenUnfoldTaskAnimator(daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.sysUIGoogleGlobalRootComponentImpl.context, (UnfoldBackgroundController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideUnfoldBackgroundControllerProvider.get(), (ShellController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideShellControllerProvider.get(), (DisplayInsetsController) daggerSysUIGoogleGlobalRootComponent$WMComponentImpl.provideDisplayInsetsControllerProvider.get());
    }

    /* JADX WARNING: type inference failed for: r5v23, types: [java.lang.Object, dagger.internal.DelegateFactory] */
    public DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl(DaggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, HandlerThread handlerThread) {
        this.sysUIGoogleGlobalRootComponentImpl = daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl;
        this.setShellMainThread = handlerThread;
        this.provideShellMainHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 5);
        this.provideSysUIMainExecutorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 6);
        this.provideShellMainExecutorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 4);
        this.provideShellInitProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 3);
        this.provideDisplayControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 2);
        this.provideDisplayInsetsControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 8);
        this.provideTransactionPoolProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 9);
        this.provideDisplayImeControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 7);
        this.provideShellCommandHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 11);
        this.provideShellControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 13);
        this.provideSyncTransactionQueueProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 14);
        this.provideShellAnimationExecutorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 16);
        this.provideRootTaskDisplayAreaOrganizerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 17);
        this.provideHomeTransitionObserverProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 18);
        this.provideTransitionsProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 15);
        this.dockStateReaderProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 19);
        this.compatUIConfigurationProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 20);
        this.compatUIShellCommandHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 21);
        this.provideCompatUIControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 12);
        this.provideUnfoldBackgroundControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 26);
        this.provideIconProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 30);
        this.provideGlobalDragListenerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 31);
        this.provideDragAndDropControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 29);
        this.providerTaskStackListenerImplProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 33);
        this.provideDesktopModeTaskRepositoryProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 35);
        this.provideDesktopTaskRepositoryProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 34);
        this.provideRecentTasksControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 32);
        this.provideLaunchAdjacentControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 36);
        this.provideShellMainChoreographerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 38);
        this.provideEnterDesktopModeTaskTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 41);
        this.provideExitDesktopTaskTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 42);
        this.provideToggleResizeDesktopTaskTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 43);
        this.provideDragToDesktopTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 44);
        this.provideRecentsTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 45);
        this.provideMultiInstanceHelperProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 46);
        this.provideDesktopTasksControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 40);
        this.providesDesktopTasksControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 39);
        this.provideWindowDecorViewModelProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 37);
        this.provideSplitScreenControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 28);
        this.providesSplitScreenControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 27);
        SwitchingProvider switchingProvider = new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 25, 0);
        this.provideSplitTaskUnfoldAnimatorBaseProvider = switchingProvider;
        this.provideSplitTaskUnfoldAnimatorProvider = DoubleCheck.provider(switchingProvider);
        this.provideShellSplitTaskUnfoldAnimatorProvider = DoubleCheck.provider(this.provideSplitTaskUnfoldAnimatorBaseProvider);
        this.provideUnfoldTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 49);
        this.dynamicOverrideOptionalOfUnfoldTransitionHandlerProvider = new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 48, 0);
        this.provideUnfoldTransitionHandlerProvider2 = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 47);
        this.provideUnfoldAnimationControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 24);
        this.dynamicOverrideOptionalOfUnfoldAnimationControllerProvider = new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 23, 0);
        this.provideUnfoldControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 22);
        DelegateFactory.setDelegate(this.provideShellTaskOrganizerProvider, DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 10, 0)));
        this.provideBubbleLoggerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 52);
        this.provideBubblePositionerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 53);
        this.provideBubbleEducationProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 54);
        this.provideBubbleDataProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 51);
        this.provideFloatingContentCoordinatorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 55);
        this.provideWindowManagerShellWrapperProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 56);
        this.provideDisplayLayoutProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 58);
        this.provideOneHandedControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 57);
        this.provideSharedBackgroundHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 60);
        this.provideSharedBackgroundExecutorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 59);
        this.provideTaskViewTransitionsProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 61);
        this.provideBubbleControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 50);
        this.provideFullscreenTaskListenerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 62);
        this.provideFreeformTaskListenerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 65);
        this.provideFreeformTaskTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 66);
        this.provideFreeformTaskTransitionObserverProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 67);
        this.provideFreeformComponentsProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 64);
        this.provideFreeformComponentsProvider2 = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 63);
        this.providesOneHandedControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 68);
        this.provideHideDisplayCutoutControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 69);
        this.provideActivityEmbeddingControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 70);
        this.provideSplashScreenExecutorProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 72);
        this.provideStartingWindowTypeAlgorithmProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 73);
        this.provideStartingWindowControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 71);
        this.provideProtoLogControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 74);
        this.providePipSurfaceTransactionHelperProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 80);
        this.providePipAnimationControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 79);
        this.pipDisplayLayoutStateProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 84);
        this.provideSizeSpecSourceProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 83);
        this.providePipBoundsStateProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 82);
        this.providePipSnapAlgorithmProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 85);
        this.providePhonePipKeepClearAlgorithmProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 86);
        this.providesPipBoundsAlgorithmProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 81);
        this.providePipTransitionStateProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 87);
        this.providePipMediaControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 89);
        this.provideSystemWindowsProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 90);
        this.providePipUiEventLoggerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 91);
        this.providesPipPhoneMenuControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 88);
        this.providePipTransitionProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 78);
        this.providePipSchedulerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 94);
        this.providePipControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 93);
        this.providePipTransitionProvider2 = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 92);
        this.providePipTransitionControllerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 77);
        this.provideKeyguardTransitionHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 95);
        this.provideDefaultMixedHandlerProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 76);
        this.provideIndependentShellComponentsToCreateProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 75);
        this.provideIndependentShellComponentsToCreateProvider2 = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 1);
        this.provideShellSysuiCallbacksProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 0);
        this.provideOneHandedProvider = DaggerSysUIGoogleGlobalRootComponent$WMComponentImpl$$ExternalSyntheticOutline0.m(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 96);
        this.providePipParamsChangedForwarderProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 101, 0));
        this.provideSystemPerformanceHinterProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 103, 0));
        this.providePipPerfHintControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 102, 0));
        this.providePipTaskOrganizerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 100, 0));
        this.providePipMotionHelperProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 104, 0));
        this.providePipTouchHandlerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 99, 0));
        this.providePipAppOpsListenerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 98, 0));
        this.provideDevicePostureControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 106, 0));
        this.provideTabletopModeControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 105, 0));
        this.providePip1Provider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 97, 0));
        this.provideSplitScreenProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 107, 0));
        this.provideBubblesProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 108, 0));
        this.provideTaskViewFactoryControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 110, 0));
        this.provideTaskViewFactoryProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 109, 0));
        this.provideRemoteTransitionsProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 111, 0));
        this.provideKeyguardTransitionsProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 112, 0));
        this.provideStartingSurfaceProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 113, 0));
        this.provideRootDisplayAreaOrganizerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 115, 0));
        this.provideDisplayAreaHelperProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 114, 0));
        this.provideRecentTasksProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 116, 0));
        this.provideBackAnimationBackgroundProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 119, 0));
        this.provideBackAnimationControllerProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 118, 0));
        this.provideBackAnimationProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 117, 0));
        this.provideDesktopModeProvider = DoubleCheck.provider(new SwitchingProvider(daggerSysUIGoogleGlobalRootComponent$SysUIGoogleGlobalRootComponentImpl, this, 120, 0));
    }
}
